public abstract interface class org/ton/boc/BagOfCells : java/lang/Iterable, kotlin/jvm/internal/markers/KMappedMarker {
	public static final field BOC_GENERIC_MAGIC I
	public static final field BOC_INDEXED_CRC32C_MAGIC I
	public static final field BOC_INDEXED_MAGIC I
	public static final field Companion Lorg/ton/boc/BagOfCells$Companion;
	public abstract fun getRoots ()Ljava/util/List;
	public static fun of (Ljava/lang/Iterable;)Lorg/ton/boc/BagOfCells;
	public static fun of ([B)Lorg/ton/boc/BagOfCells;
	public static fun of ([Lorg/ton/cell/Cell;)Lorg/ton/boc/BagOfCells;
	public static fun read (Lio/ktor/utils/io/core/Input;)Lorg/ton/boc/BagOfCells;
	public fun toByteArray ()[B
	public abstract fun toString ()Ljava/lang/String;
	public fun write (Lio/ktor/utils/io/core/Output;)V
}

public final class org/ton/boc/BagOfCells$Companion {
	public static final field BOC_GENERIC_MAGIC I
	public static final field BOC_INDEXED_CRC32C_MAGIC I
	public static final field BOC_INDEXED_MAGIC I
	public final fun of (Ljava/lang/Iterable;)Lorg/ton/boc/BagOfCells;
	public final fun of ([B)Lorg/ton/boc/BagOfCells;
	public final fun of ([Lorg/ton/cell/Cell;)Lorg/ton/boc/BagOfCells;
	public final fun read (Lio/ktor/utils/io/core/Input;)Lorg/ton/boc/BagOfCells;
}

public final class org/ton/boc/BagOfCellsKt {
	public static final fun BagOfCells (Ljava/util/Collection;)Lorg/ton/boc/BagOfCells;
	public static final fun BagOfCells ([B)Lorg/ton/boc/BagOfCells;
	public static final fun BagOfCells ([Lorg/ton/cell/Cell;)Lorg/ton/boc/BagOfCells;
}

public final class org/ton/boc/CachedBagOfCells : java/lang/Iterable, kotlin/jvm/internal/markers/KMappedMarker, org/ton/boc/BagOfCells {
	public static final field Companion Lorg/ton/boc/CachedBagOfCells$Companion;
	public static final field MAX_CELL_WEIGHT I
	public fun <init> (Ljava/util/List;)V
	public fun equals (Ljava/lang/Object;)Z
	public fun getRoots ()Ljava/util/List;
	public fun hashCode ()I
	public fun iterator ()Ljava/util/Iterator;
	public fun toByteArray ()[B
	public fun toString ()Ljava/lang/String;
}

public final class org/ton/boc/CachedBagOfCells$Companion {
}

public abstract interface class org/ton/cell/Cell {
	public static final field Companion Lorg/ton/cell/Cell$Companion;
	public static final field DEPTH_BITS I
	public static final field DEPTH_BYTES I
	public static final field HASH_BITS I
	public static final field HASH_BYTES I
	public static final field MAX_BITS_SIZE I
	public static final field MAX_DEPTH I
	public static final field MAX_LEVEL I
	public fun beginParse ()Lorg/ton/cell/CellSlice;
	public abstract fun depth (I)I
	public static synthetic fun depth$default (Lorg/ton/cell/Cell;IILjava/lang/Object;)I
	public static fun empty ()Lorg/ton/cell/Cell;
	public abstract fun getBits ()Lorg/ton/bitstring/BitString;
	public static fun getBitsDescriptor (Lorg/ton/bitstring/BitString;)B
	public abstract fun getDescriptor ()Lorg/ton/cell/CellDescriptor;
	public fun getLevelMask-Kat384U ()I
	public abstract fun getRefs ()Ljava/util/List;
	public static fun getRefsDescriptor-kgROruQ (IZI)B
	public fun getType ()Lorg/ton/cell/CellType;
	public abstract fun hash (I)Lorg/ton/bitstring/BitString;
	public static synthetic fun hash$default (Lorg/ton/cell/Cell;IILjava/lang/Object;)Lorg/ton/bitstring/BitString;
	public fun isEmpty ()Z
	public static fun of (Ljava/lang/String;[Lorg/ton/cell/Cell;)Lorg/ton/cell/Cell;
	public static fun of (Lorg/ton/bitstring/BitString;[Lorg/ton/cell/Cell;)Lorg/ton/cell/Cell;
	public fun parse (Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public abstract fun toString ()Ljava/lang/String;
	public static fun toString (Lorg/ton/cell/Cell;)Ljava/lang/String;
	public static fun toString (Lorg/ton/cell/Cell;Ljava/lang/Appendable;Ljava/lang/String;)V
	public fun treeWalk ()Lkotlin/sequences/Sequence;
	public abstract fun virtualize (I)Lorg/ton/cell/Cell;
	public static synthetic fun virtualize$default (Lorg/ton/cell/Cell;IILjava/lang/Object;)Lorg/ton/cell/Cell;
}

public final class org/ton/cell/Cell$Companion {
	public static final field DEPTH_BITS I
	public static final field DEPTH_BYTES I
	public static final field HASH_BITS I
	public static final field HASH_BYTES I
	public static final field MAX_BITS_SIZE I
	public static final field MAX_DEPTH I
	public static final field MAX_LEVEL I
	public final fun empty ()Lorg/ton/cell/Cell;
	public final fun getBitsDescriptor (Lorg/ton/bitstring/BitString;)B
	public final fun getRefsDescriptor-kgROruQ (IZI)B
	public final fun of (Ljava/lang/String;[Lorg/ton/cell/Cell;)Lorg/ton/cell/Cell;
	public final fun of (Lorg/ton/bitstring/BitString;[Lorg/ton/cell/Cell;)Lorg/ton/cell/Cell;
	public final fun toString (Lorg/ton/cell/Cell;)Ljava/lang/String;
	public final fun toString (Lorg/ton/cell/Cell;Ljava/lang/Appendable;Ljava/lang/String;)V
	public static synthetic fun toString$default (Lorg/ton/cell/Cell$Companion;Lorg/ton/cell/Cell;Ljava/lang/Appendable;Ljava/lang/String;ILjava/lang/Object;)V
}

public abstract interface class org/ton/cell/CellBuilder {
	public static final field Companion Lorg/ton/cell/CellBuilder$Companion;
	public static fun beginCell ()Lorg/ton/cell/CellBuilder;
	public abstract fun build ()Lorg/ton/cell/Cell;
	public static fun createCell (Lkotlin/jvm/functions/Function1;)Lorg/ton/cell/Cell;
	public static fun createPrunedBranch (Lorg/ton/cell/Cell;I)Lorg/ton/cell/Cell;
	public fun endCell ()Lorg/ton/cell/Cell;
	public abstract fun getBits ()Lorg/ton/bitstring/MutableBitString;
	public abstract fun getBitsPosition ()I
	public abstract fun getLevelMask-5JiA7ZA ()Lorg/ton/cell/LevelMask;
	public abstract fun getRefs ()Ljava/util/List;
	public abstract fun getRemainingBits ()I
	public abstract fun isExotic ()Z
	public static fun of (Lorg/ton/cell/Cell;)Lorg/ton/cell/CellBuilder;
	public abstract fun setBits (Lorg/ton/bitstring/MutableBitString;)V
	public abstract fun setExotic (Z)V
	public abstract fun setLevelMask-fuO3_sE (Lorg/ton/cell/LevelMask;)V
	public abstract fun setRefs (Ljava/util/List;)V
	public abstract fun storeBit (Z)Lorg/ton/cell/CellBuilder;
	public abstract fun storeBits (Ljava/lang/Iterable;)Lorg/ton/cell/CellBuilder;
	public abstract fun storeBits (Ljava/util/Collection;)Lorg/ton/cell/CellBuilder;
	public abstract fun storeBits (Lorg/ton/bitstring/BitString;)Lorg/ton/cell/CellBuilder;
	public abstract fun storeBits ([Z)Lorg/ton/cell/CellBuilder;
	public abstract fun storeByte (B)Lorg/ton/cell/CellBuilder;
	public abstract fun storeBytes ([B)Lorg/ton/cell/CellBuilder;
	public abstract fun storeBytes ([BI)Lorg/ton/cell/CellBuilder;
	public fun storeInt (BI)Lorg/ton/cell/CellBuilder;
	public fun storeInt (II)Lorg/ton/cell/CellBuilder;
	public fun storeInt (JI)Lorg/ton/cell/CellBuilder;
	public abstract fun storeInt (Ljava/math/BigInteger;I)Lorg/ton/cell/CellBuilder;
	public fun storeInt (SI)Lorg/ton/cell/CellBuilder;
	public abstract fun storeRef (Lorg/ton/cell/Cell;)Lorg/ton/cell/CellBuilder;
	public abstract fun storeRefs (Ljava/lang/Iterable;)Lorg/ton/cell/CellBuilder;
	public abstract fun storeRefs (Ljava/util/Collection;)Lorg/ton/cell/CellBuilder;
	public abstract fun storeRefs ([Lorg/ton/cell/Cell;)Lorg/ton/cell/CellBuilder;
	public abstract fun storeSlice (Lorg/ton/cell/CellSlice;)Lorg/ton/cell/CellBuilder;
	public fun storeUInt (BI)Lorg/ton/cell/CellBuilder;
	public fun storeUInt (II)Lorg/ton/cell/CellBuilder;
	public fun storeUInt (JI)Lorg/ton/cell/CellBuilder;
	public abstract fun storeUInt (Ljava/math/BigInteger;I)Lorg/ton/cell/CellBuilder;
	public fun storeUInt (SI)Lorg/ton/cell/CellBuilder;
	public fun storeUInt16-xj2QHRw (S)Lorg/ton/cell/CellBuilder;
	public fun storeUInt32-WZ4Q5Ns (I)Lorg/ton/cell/CellBuilder;
	public fun storeUInt64-VKZWuLQ (J)Lorg/ton/cell/CellBuilder;
	public fun storeUInt8-7apg3OU (B)Lorg/ton/cell/CellBuilder;
	public fun storeUIntLeq (BB)Lorg/ton/cell/CellBuilder;
	public fun storeUIntLeq (II)Lorg/ton/cell/CellBuilder;
	public fun storeUIntLeq (JJ)Lorg/ton/cell/CellBuilder;
	public fun storeUIntLeq (Ljava/math/BigInteger;Ljava/math/BigInteger;)Lorg/ton/cell/CellBuilder;
	public fun storeUIntLeq (SS)Lorg/ton/cell/CellBuilder;
	public fun storeUIntLes (BB)Lorg/ton/cell/CellBuilder;
	public fun storeUIntLes (II)Lorg/ton/cell/CellBuilder;
	public fun storeUIntLes (JJ)Lorg/ton/cell/CellBuilder;
	public fun storeUIntLes (Ljava/math/BigInteger;Ljava/math/BigInteger;)Lorg/ton/cell/CellBuilder;
	public fun storeUIntLes (SS)Lorg/ton/cell/CellBuilder;
}

public final class org/ton/cell/CellBuilder$Companion {
	public final fun beginCell ()Lorg/ton/cell/CellBuilder;
	public final fun createCell (Lkotlin/jvm/functions/Function1;)Lorg/ton/cell/Cell;
	public final fun createPrunedBranch (Lorg/ton/cell/Cell;I)Lorg/ton/cell/Cell;
	public final fun of (Lorg/ton/cell/Cell;)Lorg/ton/cell/CellBuilder;
}

public final class org/ton/cell/CellBuilderKt {
	public static final fun CellBuilder ()Lorg/ton/cell/CellBuilder;
	public static final fun CellBuilder (Lorg/ton/cell/Cell;)Lorg/ton/cell/CellBuilder;
	public static final fun buildCell (Lkotlin/jvm/functions/Function1;)Lorg/ton/cell/Cell;
	public static final fun invoke (Lorg/ton/cell/CellBuilder;Lkotlin/jvm/functions/Function1;)V
	public static final fun storeRef (Lorg/ton/cell/CellBuilder;Lkotlin/jvm/functions/Function1;)Lorg/ton/cell/CellBuilder;
}

public abstract interface class org/ton/cell/CellDescriptor {
	public static final field Companion Lorg/ton/cell/CellDescriptor$Companion;
	public static final field HAS_HASHES_MASK I
	public static final field IS_EXOTIC_MASK I
	public static final field LEVEL_MASK I
	public static final field REFERENCE_COUNT_MASK I
	public fun component1 ()B
	public fun component2 ()B
	public static fun computeD1-dYmMkqQ (IZI)B
	public static fun computeD2 (I)B
	public static fun from-XvCu8Xw (IZII)Lorg/ton/cell/CellDescriptor;
	public static fun fromBytes (BB)Lorg/ton/cell/CellDescriptor;
	public static fun fromBytes ([B)Lorg/ton/cell/CellDescriptor;
	public static fun fromBytes ([BI)Lorg/ton/cell/CellDescriptor;
	public abstract fun getCellType ()Lorg/ton/cell/CellType;
	public abstract fun getD1 ()B
	public abstract fun getD2 ()B
	public abstract fun getDataLength ()I
	public abstract fun getHasHashes ()Z
	public abstract fun getHashCount ()I
	public abstract fun getLevelMask-Kat384U ()I
	public abstract fun getReferenceCount ()I
	public abstract fun isAbsent ()Z
	public abstract fun isAligned ()Z
	public abstract fun isExotic ()Z
}

public final class org/ton/cell/CellDescriptor$Companion {
	public static final field HAS_HASHES_MASK I
	public static final field IS_EXOTIC_MASK I
	public static final field LEVEL_MASK I
	public static final field REFERENCE_COUNT_MASK I
	public final fun computeD1-dYmMkqQ (IZI)B
	public final fun computeD2 (I)B
	public final fun from-XvCu8Xw (IZII)Lorg/ton/cell/CellDescriptor;
	public final fun fromBytes (BB)Lorg/ton/cell/CellDescriptor;
	public final fun fromBytes ([B)Lorg/ton/cell/CellDescriptor;
	public final fun fromBytes ([BI)Lorg/ton/cell/CellDescriptor;
}

public final class org/ton/cell/CellDescriptorKt {
	public static final fun CellDescriptor (BB)Lorg/ton/cell/CellDescriptor;
	public static final fun CellDescriptor ([B)Lorg/ton/cell/CellDescriptor;
	public static final fun CellDescriptor ([BI)Lorg/ton/cell/CellDescriptor;
	public static final fun CellDescriptor-XvCu8Xw (IZII)Lorg/ton/cell/CellDescriptor;
}

public final class org/ton/cell/CellKt {
	public static final fun Cell ()Lorg/ton/cell/Cell;
	public static final fun Cell (Ljava/lang/String;[Lorg/ton/cell/Cell;)Lorg/ton/cell/Cell;
	public static final fun Cell (Lorg/ton/bitstring/BitString;[Lorg/ton/cell/Cell;)Lorg/ton/cell/Cell;
}

public abstract interface class org/ton/cell/CellSlice {
	public static final field Companion Lorg/ton/cell/CellSlice$Companion;
	public static fun beginParse (Lorg/ton/cell/Cell;)Lorg/ton/cell/CellSlice;
	public fun component1 ()Lorg/ton/bitstring/BitString;
	public fun component2 ()Ljava/util/List;
	public abstract fun endParse ()V
	public abstract fun getBits ()Lorg/ton/bitstring/BitString;
	public abstract fun getBitsPosition ()I
	public abstract fun getRefs ()Ljava/util/List;
	public abstract fun getRefsPosition ()I
	public fun getRemainingBits ()I
	public fun isEmpty ()Z
	public abstract fun loadBit ()Z
	public abstract fun loadBits (I)Lorg/ton/bitstring/BitString;
	public abstract fun loadInt (I)Ljava/math/BigInteger;
	public abstract fun loadRef ()Lorg/ton/cell/Cell;
	public abstract fun loadRefs (I)Ljava/util/List;
	public fun loadTinyInt (I)J
	public abstract fun loadUInt (I)Ljava/math/BigInteger;
	public fun loadUInt16-Mh2AYeg ()S
	public fun loadUInt32-pVg5ArA ()I
	public fun loadUInt64-s-VKNKU ()J
	public fun loadUInt8-w2LRezQ ()B
	public fun loadUIntLeq (I)Ljava/math/BigInteger;
	public fun loadUIntLes (I)Ljava/math/BigInteger;
	public static fun of (Lorg/ton/bitstring/BitString;Ljava/util/List;)Lorg/ton/cell/CellSlice;
	public abstract fun preloadBit ()Z
	public abstract fun preloadBits (I)Lorg/ton/bitstring/BitString;
	public abstract fun preloadInt (I)Ljava/math/BigInteger;
	public abstract fun preloadRef ()Lorg/ton/cell/Cell;
	public abstract fun preloadRef (Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public abstract fun preloadRefs (I)Ljava/util/List;
	public fun preloadTinyInt (I)J
	public abstract fun preloadUInt (I)Ljava/math/BigInteger;
	public fun preloadUIntLeq (I)Ljava/math/BigInteger;
	public fun preloadUIntLes (I)Ljava/math/BigInteger;
	public abstract fun setBitsPosition (I)V
	public abstract fun setRefsPosition (I)V
	public abstract fun skipBits (I)Lorg/ton/cell/CellSlice;
}

public final class org/ton/cell/CellSlice$Companion {
	public final fun beginParse (Lorg/ton/cell/Cell;)Lorg/ton/cell/CellSlice;
	public final fun of (Lorg/ton/bitstring/BitString;Ljava/util/List;)Lorg/ton/cell/CellSlice;
	public static synthetic fun of$default (Lorg/ton/cell/CellSlice$Companion;Lorg/ton/bitstring/BitString;Ljava/util/List;ILjava/lang/Object;)Lorg/ton/cell/CellSlice;
}

public final class org/ton/cell/CellSliceKt {
	public static final fun CellSlice (Lorg/ton/bitstring/BitString;Ljava/util/List;)Lorg/ton/cell/CellSlice;
	public static synthetic fun CellSlice$default (Lorg/ton/bitstring/BitString;Ljava/util/List;ILjava/lang/Object;)Lorg/ton/cell/CellSlice;
	public static final fun invoke (Lorg/ton/cell/CellSlice;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public static final fun loadRef (Lorg/ton/cell/CellSlice;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
}

public final class org/ton/cell/CellType : java/lang/Enum {
	public static final field Companion Lorg/ton/cell/CellType$Companion;
	public static final field LIBRARY_REFERENCE Lorg/ton/cell/CellType;
	public static final field MERKLE_PROOF Lorg/ton/cell/CellType;
	public static final field MERKLE_UPDATE Lorg/ton/cell/CellType;
	public static final field ORDINARY Lorg/ton/cell/CellType;
	public static final field PRUNED_BRANCH Lorg/ton/cell/CellType;
	public static final fun get (I)Lorg/ton/cell/CellType;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public final fun getValue ()I
	public final fun isExotic ()Z
	public final fun isMerkle ()Z
	public final fun isPruned ()Z
	public static fun valueOf (Ljava/lang/String;)Lorg/ton/cell/CellType;
	public static fun values ()[Lorg/ton/cell/CellType;
}

public final class org/ton/cell/CellType$Companion {
	public final fun get (I)Lorg/ton/cell/CellType;
}

public final class org/ton/cell/DataCell : org/ton/cell/Cell {
	public fun <init> (Lorg/ton/cell/CellDescriptor;Lorg/ton/bitstring/BitString;Ljava/util/List;Ljava/util/List;)V
	public fun depth (I)I
	public fun equals (Ljava/lang/Object;)Z
	public fun getBits ()Lorg/ton/bitstring/BitString;
	public fun getDescriptor ()Lorg/ton/cell/CellDescriptor;
	public fun getRefs ()Ljava/util/List;
	public fun hash (I)Lorg/ton/bitstring/BitString;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public fun virtualize (I)Lorg/ton/cell/Cell;
}

public final class org/ton/cell/LevelMask {
	public static final field Companion Lorg/ton/cell/LevelMask$Companion;
	public static final fun apply-spGXSBY (II)I
	public static final synthetic fun box-impl (I)Lorg/ton/cell/LevelMask;
	public static fun constructor-impl (I)I
	public static synthetic fun constructor-impl$default (IILkotlin/jvm/internal/DefaultConstructorMarker;)I
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (ILjava/lang/Object;)Z
	public static final fun equals-impl0 (II)Z
	public static final fun getHashCount-impl (I)I
	public static final fun getHashIndex-impl (I)I
	public static final fun getLevel-impl (I)I
	public final fun getMask ()I
	public fun hashCode ()I
	public static fun hashCode-impl (I)I
	public static final fun isEmpty-impl (I)Z
	public static final fun isSignificant-impl (II)Z
	public static final fun level-spGXSBY (I)I
	public static final fun or-Cd1l96I (II)I
	public static final fun shr-spGXSBY (II)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (I)Ljava/lang/String;
	public final synthetic fun unbox-impl ()I
	public static final fun virtualize-spGXSBY (II)I
	public static synthetic fun virtualize-spGXSBY$default (IIILjava/lang/Object;)I
}

public final class org/ton/cell/LevelMask$Companion {
	public final fun level-spGXSBY (I)I
}

public final class org/ton/cell/PrunedBranchCell : org/ton/cell/Cell {
	public fun <init> (Lorg/ton/bitstring/BitString;ILorg/ton/cell/CellDescriptor;Lorg/ton/bitstring/BitString;)V
	public fun depth (I)I
	public fun equals (Ljava/lang/Object;)Z
	public fun getBits ()Lorg/ton/bitstring/BitString;
	public fun getDescriptor ()Lorg/ton/cell/CellDescriptor;
	public fun getRefs ()Ljava/util/List;
	public fun hash (I)Lorg/ton/bitstring/BitString;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public fun virtualize (I)Lorg/ton/cell/Cell;
}

public final class org/ton/cell/exception/CellOverflowException : java/lang/RuntimeException {
	public fun <init> (Ljava/lang/String;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/Throwable;)V
	public fun <init> (Ljava/lang/Throwable;)V
}

public final class org/ton/cell/exception/CellUnderflowException : java/lang/RuntimeException {
	public fun <init> (Ljava/lang/String;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/Throwable;)V
	public fun <init> (Ljava/lang/Throwable;)V
}

