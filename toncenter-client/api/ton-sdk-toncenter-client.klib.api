// Klib ABI Dump
// Targets: [iosArm64, iosSimulatorArm64, iosX64, linuxArm64, linuxX64, macosArm64, macosX64, mingwX64, tvosArm64, tvosSimulatorArm64, tvosX64, watchosArm32, watchosArm64, watchosSimulatorArm64, watchosX64]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <org.ton.sdk:ton-sdk-toncenter-client>
abstract interface org.ton.sdk.toncenter.client/TonCenterV3Client { // org.ton.sdk.toncenter.client/TonCenterV3Client|null[0]
    abstract suspend fun accountStates(org.ton.sdk.toncenter.model/TonCenterAccountRequest): org.ton.sdk.toncenter.model/TonCenterAccountStatesResponse // org.ton.sdk.toncenter.client/TonCenterV3Client.accountStates|accountStates(org.ton.sdk.toncenter.model.TonCenterAccountRequest){}[0]
    abstract suspend fun addressBook(org.ton.sdk.toncenter.model/TonCenterAddressBookRequest): org.ton.sdk.toncenter.model/TonCenterAddressBook // org.ton.sdk.toncenter.client/TonCenterV3Client.addressBook|addressBook(org.ton.sdk.toncenter.model.TonCenterAddressBookRequest){}[0]
    abstract suspend fun blocks(org.ton.sdk.toncenter.model/TonCenterBlocksRequestBuilder): org.ton.sdk.toncenter.model/TonCenterBlocksResponse // org.ton.sdk.toncenter.client/TonCenterV3Client.blocks|blocks(org.ton.sdk.toncenter.model.TonCenterBlocksRequestBuilder){}[0]
    abstract suspend fun masterchainBlockShardState(org.ton.sdk.toncenter.model/TonCenterBlocksRequestBuilder): org.ton.sdk.toncenter.model/TonCenterBlocksResponse // org.ton.sdk.toncenter.client/TonCenterV3Client.masterchainBlockShardState|masterchainBlockShardState(org.ton.sdk.toncenter.model.TonCenterBlocksRequestBuilder){}[0]
    abstract suspend fun masterchainBlockShards(org.ton.sdk.toncenter.model/TonCenterBlocksRequestBuilder): org.ton.sdk.toncenter.model/TonCenterBlocksResponse // org.ton.sdk.toncenter.client/TonCenterV3Client.masterchainBlockShards|masterchainBlockShards(org.ton.sdk.toncenter.model.TonCenterBlocksRequestBuilder){}[0]
    abstract suspend fun masterchainInfo(): org.ton.sdk.toncenter.model/TonCenterMasterchainInfo // org.ton.sdk.toncenter.client/TonCenterV3Client.masterchainInfo|masterchainInfo(){}[0]
    abstract suspend fun message(org.ton.sdk.toncenter.model/TonCenterSendMessageRequest): org.ton.sdk.toncenter.model/TonCenterSendMessageResult // org.ton.sdk.toncenter.client/TonCenterV3Client.message|message(org.ton.sdk.toncenter.model.TonCenterSendMessageRequest){}[0]
    abstract suspend fun metadata(org.ton.sdk.toncenter.model/TonCenterMetadataRequest): org.ton.sdk.toncenter.model/TonCenterMetadata // org.ton.sdk.toncenter.client/TonCenterV3Client.metadata|metadata(org.ton.sdk.toncenter.model.TonCenterMetadataRequest){}[0]
    abstract suspend fun runGetMethod(org.ton.sdk.toncenter.model/TonCenterRunGetMethodRequest): org.ton.sdk.toncenter.model/TonCenterRunGetMethodResult // org.ton.sdk.toncenter.client/TonCenterV3Client.runGetMethod|runGetMethod(org.ton.sdk.toncenter.model.TonCenterRunGetMethodRequest){}[0]
    abstract suspend fun transactions(org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder): org.ton.sdk.toncenter.model/TonCenterTransactionsResponse // org.ton.sdk.toncenter.client/TonCenterV3Client.transactions|transactions(org.ton.sdk.toncenter.model.TonCenterTransactionsRequestBuilder){}[0]
    abstract suspend fun walletStates(org.ton.sdk.toncenter.model/TonCenterAccountRequest): org.ton.sdk.toncenter.model/TonCenterWalletStatesResponse // org.ton.sdk.toncenter.client/TonCenterV3Client.walletStates|walletStates(org.ton.sdk.toncenter.model.TonCenterAccountRequest){}[0]

    final object Companion { // org.ton.sdk.toncenter.client/TonCenterV3Client.Companion|null[0]
        final fun create(): org.ton.sdk.toncenter.client/TonCenterV3Client // org.ton.sdk.toncenter.client/TonCenterV3Client.Companion.create|create(){}[0]
        final fun create(io.ktor.client/HttpClient): org.ton.sdk.toncenter.client/TonCenterV3Client // org.ton.sdk.toncenter.client/TonCenterV3Client.Companion.create|create(io.ktor.client.HttpClient){}[0]
        final fun create(io.ktor.client/HttpClient, kotlin/String): org.ton.sdk.toncenter.client/TonCenterV3Client // org.ton.sdk.toncenter.client/TonCenterV3Client.Companion.create|create(io.ktor.client.HttpClient;kotlin.String){}[0]
        final fun create(kotlin/String): org.ton.sdk.toncenter.client/TonCenterV3Client // org.ton.sdk.toncenter.client/TonCenterV3Client.Companion.create|create(kotlin.String){}[0]
    }
}

abstract interface org.ton.sdk.toncenter.model/TonCenterLimitRequestBuilder { // org.ton.sdk.toncenter.model/TonCenterLimitRequestBuilder|null[0]
    abstract var limit // org.ton.sdk.toncenter.model/TonCenterLimitRequestBuilder.limit|{}limit[0]
        abstract fun <get-limit>(): kotlin/Int? // org.ton.sdk.toncenter.model/TonCenterLimitRequestBuilder.limit.<get-limit>|<get-limit>(){}[0]
        abstract fun <set-limit>(kotlin/Int?) // org.ton.sdk.toncenter.model/TonCenterLimitRequestBuilder.limit.<set-limit>|<set-limit>(kotlin.Int?){}[0]
    abstract var offset // org.ton.sdk.toncenter.model/TonCenterLimitRequestBuilder.offset|{}offset[0]
        abstract fun <get-offset>(): kotlin/Int? // org.ton.sdk.toncenter.model/TonCenterLimitRequestBuilder.offset.<get-offset>|<get-offset>(){}[0]
        abstract fun <set-offset>(kotlin/Int?) // org.ton.sdk.toncenter.model/TonCenterLimitRequestBuilder.offset.<set-offset>|<set-offset>(kotlin.Int?){}[0]
}

abstract interface org.ton.sdk.toncenter.model/TonCenterRequestBuilder { // org.ton.sdk.toncenter.model/TonCenterRequestBuilder|null[0]
    abstract var noAddressBook // org.ton.sdk.toncenter.model/TonCenterRequestBuilder.noAddressBook|{}noAddressBook[0]
        abstract fun <get-noAddressBook>(): kotlin/Boolean? // org.ton.sdk.toncenter.model/TonCenterRequestBuilder.noAddressBook.<get-noAddressBook>|<get-noAddressBook>(){}[0]
        abstract fun <set-noAddressBook>(kotlin/Boolean?) // org.ton.sdk.toncenter.model/TonCenterRequestBuilder.noAddressBook.<set-noAddressBook>|<set-noAddressBook>(kotlin.Boolean?){}[0]
    abstract var noMetadata // org.ton.sdk.toncenter.model/TonCenterRequestBuilder.noMetadata|{}noMetadata[0]
        abstract fun <get-noMetadata>(): kotlin/Boolean? // org.ton.sdk.toncenter.model/TonCenterRequestBuilder.noMetadata.<get-noMetadata>|<get-noMetadata>(){}[0]
        abstract fun <set-noMetadata>(kotlin/Boolean?) // org.ton.sdk.toncenter.model/TonCenterRequestBuilder.noMetadata.<set-noMetadata>|<set-noMetadata>(kotlin.Boolean?){}[0]
    abstract var timeout // org.ton.sdk.toncenter.model/TonCenterRequestBuilder.timeout|{}timeout[0]
        abstract fun <get-timeout>(): kotlin/Long? // org.ton.sdk.toncenter.model/TonCenterRequestBuilder.timeout.<get-timeout>|<get-timeout>(){}[0]
        abstract fun <set-timeout>(kotlin/Long?) // org.ton.sdk.toncenter.model/TonCenterRequestBuilder.timeout.<set-timeout>|<set-timeout>(kotlin.Long?){}[0]
}

final class org.ton.sdk.toncenter.model/TonCenterAccountRequest { // org.ton.sdk.toncenter.model/TonCenterAccountRequest|null[0]
    constructor <init>(kotlin.collections/List<org.ton.sdk.blockchain.address/AddressStd>, kotlin.collections/List<org.ton.sdk.crypto/HashBytes>, kotlin/Boolean) // org.ton.sdk.toncenter.model/TonCenterAccountRequest.<init>|<init>(kotlin.collections.List<org.ton.sdk.blockchain.address.AddressStd>;kotlin.collections.List<org.ton.sdk.crypto.HashBytes>;kotlin.Boolean){}[0]

    final val address // org.ton.sdk.toncenter.model/TonCenterAccountRequest.address|{}address[0]
        final fun <get-address>(): kotlin.collections/List<org.ton.sdk.blockchain.address/AddressStd> // org.ton.sdk.toncenter.model/TonCenterAccountRequest.address.<get-address>|<get-address>(){}[0]
    final val codeHash // org.ton.sdk.toncenter.model/TonCenterAccountRequest.codeHash|{}codeHash[0]
        final fun <get-codeHash>(): kotlin.collections/List<org.ton.sdk.crypto/HashBytes> // org.ton.sdk.toncenter.model/TonCenterAccountRequest.codeHash.<get-codeHash>|<get-codeHash>(){}[0]
    final val includeBoc // org.ton.sdk.toncenter.model/TonCenterAccountRequest.includeBoc|{}includeBoc[0]
        final fun <get-includeBoc>(): kotlin/Boolean // org.ton.sdk.toncenter.model/TonCenterAccountRequest.includeBoc.<get-includeBoc>|<get-includeBoc>(){}[0]

    final class Builder { // org.ton.sdk.toncenter.model/TonCenterAccountRequest.Builder|null[0]
        constructor <init>() // org.ton.sdk.toncenter.model/TonCenterAccountRequest.Builder.<init>|<init>(){}[0]

        final var address // org.ton.sdk.toncenter.model/TonCenterAccountRequest.Builder.address|{}address[0]
            final fun <get-address>(): kotlin.collections/MutableList<org.ton.sdk.blockchain.address/AddressStd> // org.ton.sdk.toncenter.model/TonCenterAccountRequest.Builder.address.<get-address>|<get-address>(){}[0]
            final fun <set-address>(kotlin.collections/MutableList<org.ton.sdk.blockchain.address/AddressStd>) // org.ton.sdk.toncenter.model/TonCenterAccountRequest.Builder.address.<set-address>|<set-address>(kotlin.collections.MutableList<org.ton.sdk.blockchain.address.AddressStd>){}[0]
        final var codeHash // org.ton.sdk.toncenter.model/TonCenterAccountRequest.Builder.codeHash|{}codeHash[0]
            final fun <get-codeHash>(): kotlin.collections/MutableList<org.ton.sdk.crypto/HashBytes> // org.ton.sdk.toncenter.model/TonCenterAccountRequest.Builder.codeHash.<get-codeHash>|<get-codeHash>(){}[0]
            final fun <set-codeHash>(kotlin.collections/MutableList<org.ton.sdk.crypto/HashBytes>) // org.ton.sdk.toncenter.model/TonCenterAccountRequest.Builder.codeHash.<set-codeHash>|<set-codeHash>(kotlin.collections.MutableList<org.ton.sdk.crypto.HashBytes>){}[0]
        final var includeBoc // org.ton.sdk.toncenter.model/TonCenterAccountRequest.Builder.includeBoc|{}includeBoc[0]
            final fun <get-includeBoc>(): kotlin/Boolean // org.ton.sdk.toncenter.model/TonCenterAccountRequest.Builder.includeBoc.<get-includeBoc>|<get-includeBoc>(){}[0]
            final fun <set-includeBoc>(kotlin/Boolean) // org.ton.sdk.toncenter.model/TonCenterAccountRequest.Builder.includeBoc.<set-includeBoc>|<set-includeBoc>(kotlin.Boolean){}[0]

        final fun address(kotlin.collections/Collection<org.ton.sdk.blockchain.address/AddressStd>): org.ton.sdk.toncenter.model/TonCenterAccountRequest.Builder // org.ton.sdk.toncenter.model/TonCenterAccountRequest.Builder.address|address(kotlin.collections.Collection<org.ton.sdk.blockchain.address.AddressStd>){}[0]
        final fun address(kotlin/Array<out org.ton.sdk.blockchain.address/AddressStd>...): org.ton.sdk.toncenter.model/TonCenterAccountRequest.Builder // org.ton.sdk.toncenter.model/TonCenterAccountRequest.Builder.address|address(kotlin.Array<out|org.ton.sdk.blockchain.address.AddressStd>...){}[0]
        final fun build(): org.ton.sdk.toncenter.model/TonCenterAccountRequest // org.ton.sdk.toncenter.model/TonCenterAccountRequest.Builder.build|build(){}[0]
        final fun includeBoc(kotlin/Boolean): org.ton.sdk.toncenter.model/TonCenterAccountRequest.Builder // org.ton.sdk.toncenter.model/TonCenterAccountRequest.Builder.includeBoc|includeBoc(kotlin.Boolean){}[0]
    }

    final object Companion { // org.ton.sdk.toncenter.model/TonCenterAccountRequest.Companion|null[0]
        final fun builder(): org.ton.sdk.toncenter.model/TonCenterAccountRequest.Builder // org.ton.sdk.toncenter.model/TonCenterAccountRequest.Companion.builder|builder(){}[0]
    }
}

final class org.ton.sdk.toncenter.model/TonCenterAccountState { // org.ton.sdk.toncenter.model/TonCenterAccountState|null[0]
    constructor <init>(org.ton.sdk.crypto/HashBytes, org.ton.sdk.blockchain.currency/Coins?, org.ton.sdk.blockchain.currency/ExtraCurrencyCollection?, org.ton.sdk.blockchain.account/AccountStatus?, org.ton.sdk.crypto/HashBytes?, org.ton.sdk.crypto/HashBytes?, org.ton.sdk.crypto/HashBytes?, kotlinx.io.bytestring/ByteString? = ..., kotlinx.io.bytestring/ByteString? = ...) // org.ton.sdk.toncenter.model/TonCenterAccountState.<init>|<init>(org.ton.sdk.crypto.HashBytes;org.ton.sdk.blockchain.currency.Coins?;org.ton.sdk.blockchain.currency.ExtraCurrencyCollection?;org.ton.sdk.blockchain.account.AccountStatus?;org.ton.sdk.crypto.HashBytes?;org.ton.sdk.crypto.HashBytes?;org.ton.sdk.crypto.HashBytes?;kotlinx.io.bytestring.ByteString?;kotlinx.io.bytestring.ByteString?){}[0]

    final val accountStatus // org.ton.sdk.toncenter.model/TonCenterAccountState.accountStatus|{}accountStatus[0]
        final fun <get-accountStatus>(): org.ton.sdk.blockchain.account/AccountStatus? // org.ton.sdk.toncenter.model/TonCenterAccountState.accountStatus.<get-accountStatus>|<get-accountStatus>(){}[0]
    final val balance // org.ton.sdk.toncenter.model/TonCenterAccountState.balance|{}balance[0]
        final fun <get-balance>(): org.ton.sdk.blockchain.currency/Coins? // org.ton.sdk.toncenter.model/TonCenterAccountState.balance.<get-balance>|<get-balance>(){}[0]
    final val codeBoc // org.ton.sdk.toncenter.model/TonCenterAccountState.codeBoc|{}codeBoc[0]
        final fun <get-codeBoc>(): kotlinx.io.bytestring/ByteString? // org.ton.sdk.toncenter.model/TonCenterAccountState.codeBoc.<get-codeBoc>|<get-codeBoc>(){}[0]
    final val codeHash // org.ton.sdk.toncenter.model/TonCenterAccountState.codeHash|{}codeHash[0]
        final fun <get-codeHash>(): org.ton.sdk.crypto/HashBytes? // org.ton.sdk.toncenter.model/TonCenterAccountState.codeHash.<get-codeHash>|<get-codeHash>(){}[0]
    final val dataBoc // org.ton.sdk.toncenter.model/TonCenterAccountState.dataBoc|{}dataBoc[0]
        final fun <get-dataBoc>(): kotlinx.io.bytestring/ByteString? // org.ton.sdk.toncenter.model/TonCenterAccountState.dataBoc.<get-dataBoc>|<get-dataBoc>(){}[0]
    final val dataHash // org.ton.sdk.toncenter.model/TonCenterAccountState.dataHash|{}dataHash[0]
        final fun <get-dataHash>(): org.ton.sdk.crypto/HashBytes? // org.ton.sdk.toncenter.model/TonCenterAccountState.dataHash.<get-dataHash>|<get-dataHash>(){}[0]
    final val extraCurrencies // org.ton.sdk.toncenter.model/TonCenterAccountState.extraCurrencies|{}extraCurrencies[0]
        final fun <get-extraCurrencies>(): org.ton.sdk.blockchain.currency/ExtraCurrencyCollection? // org.ton.sdk.toncenter.model/TonCenterAccountState.extraCurrencies.<get-extraCurrencies>|<get-extraCurrencies>(){}[0]
    final val frozenHash // org.ton.sdk.toncenter.model/TonCenterAccountState.frozenHash|{}frozenHash[0]
        final fun <get-frozenHash>(): org.ton.sdk.crypto/HashBytes? // org.ton.sdk.toncenter.model/TonCenterAccountState.frozenHash.<get-frozenHash>|<get-frozenHash>(){}[0]
    final val hash // org.ton.sdk.toncenter.model/TonCenterAccountState.hash|{}hash[0]
        final fun <get-hash>(): org.ton.sdk.crypto/HashBytes // org.ton.sdk.toncenter.model/TonCenterAccountState.hash.<get-hash>|<get-hash>(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<org.ton.sdk.toncenter.model/TonCenterAccountState> { // org.ton.sdk.toncenter.model/TonCenterAccountState.$serializer|null[0]
        final val descriptor // org.ton.sdk.toncenter.model/TonCenterAccountState.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // org.ton.sdk.toncenter.model/TonCenterAccountState.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // org.ton.sdk.toncenter.model/TonCenterAccountState.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): org.ton.sdk.toncenter.model/TonCenterAccountState // org.ton.sdk.toncenter.model/TonCenterAccountState.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, org.ton.sdk.toncenter.model/TonCenterAccountState) // org.ton.sdk.toncenter.model/TonCenterAccountState.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;org.ton.sdk.toncenter.model.TonCenterAccountState){}[0]
    }

    final object Companion { // org.ton.sdk.toncenter.model/TonCenterAccountState.Companion|null[0]
        final val $childSerializers // org.ton.sdk.toncenter.model/TonCenterAccountState.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<org.ton.sdk.toncenter.model/TonCenterAccountState> // org.ton.sdk.toncenter.model/TonCenterAccountState.Companion.serializer|serializer(){}[0]
    }
}

final class org.ton.sdk.toncenter.model/TonCenterAccountStateFull { // org.ton.sdk.toncenter.model/TonCenterAccountStateFull|null[0]
    constructor <init>(kotlin/String, org.ton.sdk.crypto/HashBytes, org.ton.sdk.blockchain.currency/Coins, org.ton.sdk.blockchain.currency/ExtraCurrencyCollection, kotlin/String, org.ton.sdk.crypto/HashBytes, kotlin/Long, org.ton.sdk.crypto/HashBytes, org.ton.sdk.crypto/HashBytes, kotlinx.io.bytestring/ByteString, kotlinx.io.bytestring/ByteString, kotlin.collections/List<kotlin/Int>?, kotlin.collections/List<kotlin/String>) // org.ton.sdk.toncenter.model/TonCenterAccountStateFull.<init>|<init>(kotlin.String;org.ton.sdk.crypto.HashBytes;org.ton.sdk.blockchain.currency.Coins;org.ton.sdk.blockchain.currency.ExtraCurrencyCollection;kotlin.String;org.ton.sdk.crypto.HashBytes;kotlin.Long;org.ton.sdk.crypto.HashBytes;org.ton.sdk.crypto.HashBytes;kotlinx.io.bytestring.ByteString;kotlinx.io.bytestring.ByteString;kotlin.collections.List<kotlin.Int>?;kotlin.collections.List<kotlin.String>){}[0]

    final val accountStateHash // org.ton.sdk.toncenter.model/TonCenterAccountStateFull.accountStateHash|{}accountStateHash[0]
        final fun <get-accountStateHash>(): org.ton.sdk.crypto/HashBytes // org.ton.sdk.toncenter.model/TonCenterAccountStateFull.accountStateHash.<get-accountStateHash>|<get-accountStateHash>(){}[0]
    final val address // org.ton.sdk.toncenter.model/TonCenterAccountStateFull.address|{}address[0]
        final fun <get-address>(): kotlin/String // org.ton.sdk.toncenter.model/TonCenterAccountStateFull.address.<get-address>|<get-address>(){}[0]
    final val balance // org.ton.sdk.toncenter.model/TonCenterAccountStateFull.balance|{}balance[0]
        final fun <get-balance>(): org.ton.sdk.blockchain.currency/Coins // org.ton.sdk.toncenter.model/TonCenterAccountStateFull.balance.<get-balance>|<get-balance>(){}[0]
    final val codeBoc // org.ton.sdk.toncenter.model/TonCenterAccountStateFull.codeBoc|{}codeBoc[0]
        final fun <get-codeBoc>(): kotlinx.io.bytestring/ByteString // org.ton.sdk.toncenter.model/TonCenterAccountStateFull.codeBoc.<get-codeBoc>|<get-codeBoc>(){}[0]
    final val codeHash // org.ton.sdk.toncenter.model/TonCenterAccountStateFull.codeHash|{}codeHash[0]
        final fun <get-codeHash>(): org.ton.sdk.crypto/HashBytes // org.ton.sdk.toncenter.model/TonCenterAccountStateFull.codeHash.<get-codeHash>|<get-codeHash>(){}[0]
    final val contractMethods // org.ton.sdk.toncenter.model/TonCenterAccountStateFull.contractMethods|{}contractMethods[0]
        final fun <get-contractMethods>(): kotlin.collections/List<kotlin/Int>? // org.ton.sdk.toncenter.model/TonCenterAccountStateFull.contractMethods.<get-contractMethods>|<get-contractMethods>(){}[0]
    final val dataBoc // org.ton.sdk.toncenter.model/TonCenterAccountStateFull.dataBoc|{}dataBoc[0]
        final fun <get-dataBoc>(): kotlinx.io.bytestring/ByteString // org.ton.sdk.toncenter.model/TonCenterAccountStateFull.dataBoc.<get-dataBoc>|<get-dataBoc>(){}[0]
    final val dataHash // org.ton.sdk.toncenter.model/TonCenterAccountStateFull.dataHash|{}dataHash[0]
        final fun <get-dataHash>(): org.ton.sdk.crypto/HashBytes // org.ton.sdk.toncenter.model/TonCenterAccountStateFull.dataHash.<get-dataHash>|<get-dataHash>(){}[0]
    final val extraCurrencies // org.ton.sdk.toncenter.model/TonCenterAccountStateFull.extraCurrencies|{}extraCurrencies[0]
        final fun <get-extraCurrencies>(): org.ton.sdk.blockchain.currency/ExtraCurrencyCollection // org.ton.sdk.toncenter.model/TonCenterAccountStateFull.extraCurrencies.<get-extraCurrencies>|<get-extraCurrencies>(){}[0]
    final val interfaces // org.ton.sdk.toncenter.model/TonCenterAccountStateFull.interfaces|{}interfaces[0]
        final fun <get-interfaces>(): kotlin.collections/List<kotlin/String> // org.ton.sdk.toncenter.model/TonCenterAccountStateFull.interfaces.<get-interfaces>|<get-interfaces>(){}[0]
    final val lastTransactionHash // org.ton.sdk.toncenter.model/TonCenterAccountStateFull.lastTransactionHash|{}lastTransactionHash[0]
        final fun <get-lastTransactionHash>(): org.ton.sdk.crypto/HashBytes // org.ton.sdk.toncenter.model/TonCenterAccountStateFull.lastTransactionHash.<get-lastTransactionHash>|<get-lastTransactionHash>(){}[0]
    final val lastTransactionLt // org.ton.sdk.toncenter.model/TonCenterAccountStateFull.lastTransactionLt|{}lastTransactionLt[0]
        final fun <get-lastTransactionLt>(): kotlin/Long // org.ton.sdk.toncenter.model/TonCenterAccountStateFull.lastTransactionLt.<get-lastTransactionLt>|<get-lastTransactionLt>(){}[0]
    final val status // org.ton.sdk.toncenter.model/TonCenterAccountStateFull.status|{}status[0]
        final fun <get-status>(): kotlin/String // org.ton.sdk.toncenter.model/TonCenterAccountStateFull.status.<get-status>|<get-status>(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<org.ton.sdk.toncenter.model/TonCenterAccountStateFull> { // org.ton.sdk.toncenter.model/TonCenterAccountStateFull.$serializer|null[0]
        final val descriptor // org.ton.sdk.toncenter.model/TonCenterAccountStateFull.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // org.ton.sdk.toncenter.model/TonCenterAccountStateFull.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // org.ton.sdk.toncenter.model/TonCenterAccountStateFull.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): org.ton.sdk.toncenter.model/TonCenterAccountStateFull // org.ton.sdk.toncenter.model/TonCenterAccountStateFull.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, org.ton.sdk.toncenter.model/TonCenterAccountStateFull) // org.ton.sdk.toncenter.model/TonCenterAccountStateFull.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;org.ton.sdk.toncenter.model.TonCenterAccountStateFull){}[0]
    }

    final object Companion { // org.ton.sdk.toncenter.model/TonCenterAccountStateFull.Companion|null[0]
        final val $childSerializers // org.ton.sdk.toncenter.model/TonCenterAccountStateFull.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<org.ton.sdk.toncenter.model/TonCenterAccountStateFull> // org.ton.sdk.toncenter.model/TonCenterAccountStateFull.Companion.serializer|serializer(){}[0]
    }
}

final class org.ton.sdk.toncenter.model/TonCenterAccountStatesResponse { // org.ton.sdk.toncenter.model/TonCenterAccountStatesResponse|null[0]
    constructor <init>(kotlin.collections/List<org.ton.sdk.toncenter.model/TonCenterAccountStateFull>, kotlin.collections/Map<kotlin/String, org.ton.sdk.toncenter.model/TonCenterAddressBookRow>, kotlin.collections/Map<kotlin/String, org.ton.sdk.toncenter.model/TonCenterAddressMetadata>) // org.ton.sdk.toncenter.model/TonCenterAccountStatesResponse.<init>|<init>(kotlin.collections.List<org.ton.sdk.toncenter.model.TonCenterAccountStateFull>;kotlin.collections.Map<kotlin.String,org.ton.sdk.toncenter.model.TonCenterAddressBookRow>;kotlin.collections.Map<kotlin.String,org.ton.sdk.toncenter.model.TonCenterAddressMetadata>){}[0]

    final val accounts // org.ton.sdk.toncenter.model/TonCenterAccountStatesResponse.accounts|{}accounts[0]
        final fun <get-accounts>(): kotlin.collections/List<org.ton.sdk.toncenter.model/TonCenterAccountStateFull> // org.ton.sdk.toncenter.model/TonCenterAccountStatesResponse.accounts.<get-accounts>|<get-accounts>(){}[0]
    final val addressBook // org.ton.sdk.toncenter.model/TonCenterAccountStatesResponse.addressBook|{}addressBook[0]
        final fun <get-addressBook>(): kotlin.collections/Map<kotlin/String, org.ton.sdk.toncenter.model/TonCenterAddressBookRow> // org.ton.sdk.toncenter.model/TonCenterAccountStatesResponse.addressBook.<get-addressBook>|<get-addressBook>(){}[0]
    final val metadata // org.ton.sdk.toncenter.model/TonCenterAccountStatesResponse.metadata|{}metadata[0]
        final fun <get-metadata>(): kotlin.collections/Map<kotlin/String, org.ton.sdk.toncenter.model/TonCenterAddressMetadata> // org.ton.sdk.toncenter.model/TonCenterAccountStatesResponse.metadata.<get-metadata>|<get-metadata>(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<org.ton.sdk.toncenter.model/TonCenterAccountStatesResponse> { // org.ton.sdk.toncenter.model/TonCenterAccountStatesResponse.$serializer|null[0]
        final val descriptor // org.ton.sdk.toncenter.model/TonCenterAccountStatesResponse.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // org.ton.sdk.toncenter.model/TonCenterAccountStatesResponse.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // org.ton.sdk.toncenter.model/TonCenterAccountStatesResponse.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): org.ton.sdk.toncenter.model/TonCenterAccountStatesResponse // org.ton.sdk.toncenter.model/TonCenterAccountStatesResponse.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, org.ton.sdk.toncenter.model/TonCenterAccountStatesResponse) // org.ton.sdk.toncenter.model/TonCenterAccountStatesResponse.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;org.ton.sdk.toncenter.model.TonCenterAccountStatesResponse){}[0]
    }

    final object Companion { // org.ton.sdk.toncenter.model/TonCenterAccountStatesResponse.Companion|null[0]
        final val $childSerializers // org.ton.sdk.toncenter.model/TonCenterAccountStatesResponse.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<org.ton.sdk.toncenter.model/TonCenterAccountStatesResponse> // org.ton.sdk.toncenter.model/TonCenterAccountStatesResponse.Companion.serializer|serializer(){}[0]
    }
}

final class org.ton.sdk.toncenter.model/TonCenterAddressBook : kotlin.collections/Map<org.ton.sdk.blockchain.address/AddressStd, org.ton.sdk.toncenter.model/TonCenterAddressBookRow> { // org.ton.sdk.toncenter.model/TonCenterAddressBook|null[0]
    constructor <init>(kotlin.collections/Map<org.ton.sdk.blockchain.address/AddressStd, org.ton.sdk.toncenter.model/TonCenterAddressBookRow>) // org.ton.sdk.toncenter.model/TonCenterAddressBook.<init>|<init>(kotlin.collections.Map<org.ton.sdk.blockchain.address.AddressStd,org.ton.sdk.toncenter.model.TonCenterAddressBookRow>){}[0]

    final val entries // org.ton.sdk.toncenter.model/TonCenterAddressBook.entries|{}entries[0]
        final fun <get-entries>(): kotlin.collections/Set<kotlin.collections/Map.Entry<org.ton.sdk.blockchain.address/AddressStd, org.ton.sdk.toncenter.model/TonCenterAddressBookRow>> // org.ton.sdk.toncenter.model/TonCenterAddressBook.entries.<get-entries>|<get-entries>(){}[0]
    final val keys // org.ton.sdk.toncenter.model/TonCenterAddressBook.keys|{}keys[0]
        final fun <get-keys>(): kotlin.collections/Set<org.ton.sdk.blockchain.address/AddressStd> // org.ton.sdk.toncenter.model/TonCenterAddressBook.keys.<get-keys>|<get-keys>(){}[0]
    final val map // org.ton.sdk.toncenter.model/TonCenterAddressBook.map|{}map[0]
        final fun <get-map>(): kotlin.collections/Map<org.ton.sdk.blockchain.address/AddressStd, org.ton.sdk.toncenter.model/TonCenterAddressBookRow> // org.ton.sdk.toncenter.model/TonCenterAddressBook.map.<get-map>|<get-map>(){}[0]
    final val size // org.ton.sdk.toncenter.model/TonCenterAddressBook.size|{}size[0]
        final fun <get-size>(): kotlin/Int // org.ton.sdk.toncenter.model/TonCenterAddressBook.size.<get-size>|<get-size>(){}[0]
    final val values // org.ton.sdk.toncenter.model/TonCenterAddressBook.values|{}values[0]
        final fun <get-values>(): kotlin.collections/Collection<org.ton.sdk.toncenter.model/TonCenterAddressBookRow> // org.ton.sdk.toncenter.model/TonCenterAddressBook.values.<get-values>|<get-values>(){}[0]

    final fun containsKey(org.ton.sdk.blockchain.address/AddressStd): kotlin/Boolean // org.ton.sdk.toncenter.model/TonCenterAddressBook.containsKey|containsKey(org.ton.sdk.blockchain.address.AddressStd){}[0]
    final fun containsValue(org.ton.sdk.toncenter.model/TonCenterAddressBookRow): kotlin/Boolean // org.ton.sdk.toncenter.model/TonCenterAddressBook.containsValue|containsValue(org.ton.sdk.toncenter.model.TonCenterAddressBookRow){}[0]
    final fun get(org.ton.sdk.blockchain.address/AddressStd): org.ton.sdk.toncenter.model/TonCenterAddressBookRow? // org.ton.sdk.toncenter.model/TonCenterAddressBook.get|get(org.ton.sdk.blockchain.address.AddressStd){}[0]
    final fun isEmpty(): kotlin/Boolean // org.ton.sdk.toncenter.model/TonCenterAddressBook.isEmpty|isEmpty(){}[0]
    final fun toString(): kotlin/String // org.ton.sdk.toncenter.model/TonCenterAddressBook.toString|toString(){}[0]

    final object Companion { // org.ton.sdk.toncenter.model/TonCenterAddressBook.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<org.ton.sdk.toncenter.model/TonCenterAddressBook> // org.ton.sdk.toncenter.model/TonCenterAddressBook.Companion.serializer|serializer(){}[0]
    }
}

final class org.ton.sdk.toncenter.model/TonCenterAddressBookRequest { // org.ton.sdk.toncenter.model/TonCenterAddressBookRequest|null[0]
    constructor <init>(kotlin.collections/List<org.ton.sdk.blockchain.address/AddressStd>) // org.ton.sdk.toncenter.model/TonCenterAddressBookRequest.<init>|<init>(kotlin.collections.List<org.ton.sdk.blockchain.address.AddressStd>){}[0]

    final val address // org.ton.sdk.toncenter.model/TonCenterAddressBookRequest.address|{}address[0]
        final fun <get-address>(): kotlin.collections/List<org.ton.sdk.blockchain.address/AddressStd> // org.ton.sdk.toncenter.model/TonCenterAddressBookRequest.address.<get-address>|<get-address>(){}[0]

    final class Builder { // org.ton.sdk.toncenter.model/TonCenterAddressBookRequest.Builder|null[0]
        constructor <init>() // org.ton.sdk.toncenter.model/TonCenterAddressBookRequest.Builder.<init>|<init>(){}[0]

        final var address // org.ton.sdk.toncenter.model/TonCenterAddressBookRequest.Builder.address|{}address[0]
            final fun <get-address>(): kotlin.collections/MutableList<org.ton.sdk.blockchain.address/AddressStd> // org.ton.sdk.toncenter.model/TonCenterAddressBookRequest.Builder.address.<get-address>|<get-address>(){}[0]
            final fun <set-address>(kotlin.collections/MutableList<org.ton.sdk.blockchain.address/AddressStd>) // org.ton.sdk.toncenter.model/TonCenterAddressBookRequest.Builder.address.<set-address>|<set-address>(kotlin.collections.MutableList<org.ton.sdk.blockchain.address.AddressStd>){}[0]

        final fun address(kotlin.collections/Collection<org.ton.sdk.blockchain.address/AddressStd>): org.ton.sdk.toncenter.model/TonCenterAddressBookRequest.Builder // org.ton.sdk.toncenter.model/TonCenterAddressBookRequest.Builder.address|address(kotlin.collections.Collection<org.ton.sdk.blockchain.address.AddressStd>){}[0]
        final fun address(kotlin/Array<out org.ton.sdk.blockchain.address/AddressStd>...): org.ton.sdk.toncenter.model/TonCenterAddressBookRequest.Builder // org.ton.sdk.toncenter.model/TonCenterAddressBookRequest.Builder.address|address(kotlin.Array<out|org.ton.sdk.blockchain.address.AddressStd>...){}[0]
        final fun build(): org.ton.sdk.toncenter.model/TonCenterAddressBookRequest // org.ton.sdk.toncenter.model/TonCenterAddressBookRequest.Builder.build|build(){}[0]
    }

    final object Companion { // org.ton.sdk.toncenter.model/TonCenterAddressBookRequest.Companion|null[0]
        final fun builder(): org.ton.sdk.toncenter.model/TonCenterAddressBookRequest.Builder // org.ton.sdk.toncenter.model/TonCenterAddressBookRequest.Companion.builder|builder(){}[0]
    }
}

final class org.ton.sdk.toncenter.model/TonCenterAddressBookRow { // org.ton.sdk.toncenter.model/TonCenterAddressBookRow|null[0]
    constructor <init>(kotlin/String, kotlin/String?) // org.ton.sdk.toncenter.model/TonCenterAddressBookRow.<init>|<init>(kotlin.String;kotlin.String?){}[0]

    final val domain // org.ton.sdk.toncenter.model/TonCenterAddressBookRow.domain|{}domain[0]
        final fun <get-domain>(): kotlin/String? // org.ton.sdk.toncenter.model/TonCenterAddressBookRow.domain.<get-domain>|<get-domain>(){}[0]
    final val userFriendly // org.ton.sdk.toncenter.model/TonCenterAddressBookRow.userFriendly|{}userFriendly[0]
        final fun <get-userFriendly>(): kotlin/String // org.ton.sdk.toncenter.model/TonCenterAddressBookRow.userFriendly.<get-userFriendly>|<get-userFriendly>(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<org.ton.sdk.toncenter.model/TonCenterAddressBookRow> { // org.ton.sdk.toncenter.model/TonCenterAddressBookRow.$serializer|null[0]
        final val descriptor // org.ton.sdk.toncenter.model/TonCenterAddressBookRow.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // org.ton.sdk.toncenter.model/TonCenterAddressBookRow.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // org.ton.sdk.toncenter.model/TonCenterAddressBookRow.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): org.ton.sdk.toncenter.model/TonCenterAddressBookRow // org.ton.sdk.toncenter.model/TonCenterAddressBookRow.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, org.ton.sdk.toncenter.model/TonCenterAddressBookRow) // org.ton.sdk.toncenter.model/TonCenterAddressBookRow.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;org.ton.sdk.toncenter.model.TonCenterAddressBookRow){}[0]
    }

    final object Companion { // org.ton.sdk.toncenter.model/TonCenterAddressBookRow.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<org.ton.sdk.toncenter.model/TonCenterAddressBookRow> // org.ton.sdk.toncenter.model/TonCenterAddressBookRow.Companion.serializer|serializer(){}[0]
    }
}

final class org.ton.sdk.toncenter.model/TonCenterAddressMetadata { // org.ton.sdk.toncenter.model/TonCenterAddressMetadata|null[0]
    constructor <init>(kotlin/Boolean, kotlin.collections/List<org.ton.sdk.toncenter.model/TonCenterTokenInfo>) // org.ton.sdk.toncenter.model/TonCenterAddressMetadata.<init>|<init>(kotlin.Boolean;kotlin.collections.List<org.ton.sdk.toncenter.model.TonCenterTokenInfo>){}[0]

    final val isIndexed // org.ton.sdk.toncenter.model/TonCenterAddressMetadata.isIndexed|{}isIndexed[0]
        final fun <get-isIndexed>(): kotlin/Boolean // org.ton.sdk.toncenter.model/TonCenterAddressMetadata.isIndexed.<get-isIndexed>|<get-isIndexed>(){}[0]
    final val tokenInfo // org.ton.sdk.toncenter.model/TonCenterAddressMetadata.tokenInfo|{}tokenInfo[0]
        final fun <get-tokenInfo>(): kotlin.collections/List<org.ton.sdk.toncenter.model/TonCenterTokenInfo> // org.ton.sdk.toncenter.model/TonCenterAddressMetadata.tokenInfo.<get-tokenInfo>|<get-tokenInfo>(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<org.ton.sdk.toncenter.model/TonCenterAddressMetadata> { // org.ton.sdk.toncenter.model/TonCenterAddressMetadata.$serializer|null[0]
        final val descriptor // org.ton.sdk.toncenter.model/TonCenterAddressMetadata.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // org.ton.sdk.toncenter.model/TonCenterAddressMetadata.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // org.ton.sdk.toncenter.model/TonCenterAddressMetadata.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): org.ton.sdk.toncenter.model/TonCenterAddressMetadata // org.ton.sdk.toncenter.model/TonCenterAddressMetadata.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, org.ton.sdk.toncenter.model/TonCenterAddressMetadata) // org.ton.sdk.toncenter.model/TonCenterAddressMetadata.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;org.ton.sdk.toncenter.model.TonCenterAddressMetadata){}[0]
    }

    final object Companion { // org.ton.sdk.toncenter.model/TonCenterAddressMetadata.Companion|null[0]
        final val $childSerializers // org.ton.sdk.toncenter.model/TonCenterAddressMetadata.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<org.ton.sdk.toncenter.model/TonCenterAddressMetadata> // org.ton.sdk.toncenter.model/TonCenterAddressMetadata.Companion.serializer|serializer(){}[0]
    }
}

final class org.ton.sdk.toncenter.model/TonCenterBlock { // org.ton.sdk.toncenter.model/TonCenterBlock|null[0]
    constructor <init>(kotlin/Int, kotlin/Long, kotlin/Int, org.ton.sdk.crypto/HashBytes, org.ton.sdk.crypto/HashBytes, kotlin/Int, kotlin/Int, kotlin/Boolean, kotlin/Boolean, kotlin/Boolean, kotlin/Boolean, kotlin/Boolean, kotlin/Boolean, kotlin/Boolean, kotlin/Int, kotlin/Long, kotlin/Long, kotlin/Long, kotlin/Int, kotlin/Int, kotlin/Int, kotlin/Int, kotlin/Int, kotlin/Int, org.ton.sdk.crypto/HashBytes, org.ton.sdk.crypto/HashBytes, kotlin/Int, org.ton.sdk.toncenter.model/TonCenterBlockId, kotlin.collections/List<org.ton.sdk.toncenter.model/TonCenterBlockId>) // org.ton.sdk.toncenter.model/TonCenterBlock.<init>|<init>(kotlin.Int;kotlin.Long;kotlin.Int;org.ton.sdk.crypto.HashBytes;org.ton.sdk.crypto.HashBytes;kotlin.Int;kotlin.Int;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Int;kotlin.Long;kotlin.Long;kotlin.Long;kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int;org.ton.sdk.crypto.HashBytes;org.ton.sdk.crypto.HashBytes;kotlin.Int;org.ton.sdk.toncenter.model.TonCenterBlockId;kotlin.collections.List<org.ton.sdk.toncenter.model.TonCenterBlockId>){}[0]

    final val afterMerge // org.ton.sdk.toncenter.model/TonCenterBlock.afterMerge|{}afterMerge[0]
        final fun <get-afterMerge>(): kotlin/Boolean // org.ton.sdk.toncenter.model/TonCenterBlock.afterMerge.<get-afterMerge>|<get-afterMerge>(){}[0]
    final val afterSplit // org.ton.sdk.toncenter.model/TonCenterBlock.afterSplit|{}afterSplit[0]
        final fun <get-afterSplit>(): kotlin/Boolean // org.ton.sdk.toncenter.model/TonCenterBlock.afterSplit.<get-afterSplit>|<get-afterSplit>(){}[0]
    final val beforeSplit // org.ton.sdk.toncenter.model/TonCenterBlock.beforeSplit|{}beforeSplit[0]
        final fun <get-beforeSplit>(): kotlin/Boolean // org.ton.sdk.toncenter.model/TonCenterBlock.beforeSplit.<get-beforeSplit>|<get-beforeSplit>(){}[0]
    final val createdBy // org.ton.sdk.toncenter.model/TonCenterBlock.createdBy|{}createdBy[0]
        final fun <get-createdBy>(): org.ton.sdk.crypto/HashBytes // org.ton.sdk.toncenter.model/TonCenterBlock.createdBy.<get-createdBy>|<get-createdBy>(){}[0]
    final val endLt // org.ton.sdk.toncenter.model/TonCenterBlock.endLt|{}endLt[0]
        final fun <get-endLt>(): kotlin/Long // org.ton.sdk.toncenter.model/TonCenterBlock.endLt.<get-endLt>|<get-endLt>(){}[0]
    final val fileHash // org.ton.sdk.toncenter.model/TonCenterBlock.fileHash|{}fileHash[0]
        final fun <get-fileHash>(): org.ton.sdk.crypto/HashBytes // org.ton.sdk.toncenter.model/TonCenterBlock.fileHash.<get-fileHash>|<get-fileHash>(){}[0]
    final val flags // org.ton.sdk.toncenter.model/TonCenterBlock.flags|{}flags[0]
        final fun <get-flags>(): kotlin/Int // org.ton.sdk.toncenter.model/TonCenterBlock.flags.<get-flags>|<get-flags>(){}[0]
    final val genCatchainSeqno // org.ton.sdk.toncenter.model/TonCenterBlock.genCatchainSeqno|{}genCatchainSeqno[0]
        final fun <get-genCatchainSeqno>(): kotlin/Int // org.ton.sdk.toncenter.model/TonCenterBlock.genCatchainSeqno.<get-genCatchainSeqno>|<get-genCatchainSeqno>(){}[0]
    final val genUtime // org.ton.sdk.toncenter.model/TonCenterBlock.genUtime|{}genUtime[0]
        final fun <get-genUtime>(): kotlin/Long // org.ton.sdk.toncenter.model/TonCenterBlock.genUtime.<get-genUtime>|<get-genUtime>(){}[0]
    final val globalId // org.ton.sdk.toncenter.model/TonCenterBlock.globalId|{}globalId[0]
        final fun <get-globalId>(): kotlin/Int // org.ton.sdk.toncenter.model/TonCenterBlock.globalId.<get-globalId>|<get-globalId>(){}[0]
    final val keyBlock // org.ton.sdk.toncenter.model/TonCenterBlock.keyBlock|{}keyBlock[0]
        final fun <get-keyBlock>(): kotlin/Boolean // org.ton.sdk.toncenter.model/TonCenterBlock.keyBlock.<get-keyBlock>|<get-keyBlock>(){}[0]
    final val masterRefSeqno // org.ton.sdk.toncenter.model/TonCenterBlock.masterRefSeqno|{}masterRefSeqno[0]
        final fun <get-masterRefSeqno>(): kotlin/Int // org.ton.sdk.toncenter.model/TonCenterBlock.masterRefSeqno.<get-masterRefSeqno>|<get-masterRefSeqno>(){}[0]
    final val masterchainBlockRef // org.ton.sdk.toncenter.model/TonCenterBlock.masterchainBlockRef|{}masterchainBlockRef[0]
        final fun <get-masterchainBlockRef>(): org.ton.sdk.toncenter.model/TonCenterBlockId // org.ton.sdk.toncenter.model/TonCenterBlock.masterchainBlockRef.<get-masterchainBlockRef>|<get-masterchainBlockRef>(){}[0]
    final val minRefMcSeqno // org.ton.sdk.toncenter.model/TonCenterBlock.minRefMcSeqno|{}minRefMcSeqno[0]
        final fun <get-minRefMcSeqno>(): kotlin/Int // org.ton.sdk.toncenter.model/TonCenterBlock.minRefMcSeqno.<get-minRefMcSeqno>|<get-minRefMcSeqno>(){}[0]
    final val prevBlocks // org.ton.sdk.toncenter.model/TonCenterBlock.prevBlocks|{}prevBlocks[0]
        final fun <get-prevBlocks>(): kotlin.collections/List<org.ton.sdk.toncenter.model/TonCenterBlockId> // org.ton.sdk.toncenter.model/TonCenterBlock.prevBlocks.<get-prevBlocks>|<get-prevBlocks>(){}[0]
    final val prevKeyBlockSeqno // org.ton.sdk.toncenter.model/TonCenterBlock.prevKeyBlockSeqno|{}prevKeyBlockSeqno[0]
        final fun <get-prevKeyBlockSeqno>(): kotlin/Int // org.ton.sdk.toncenter.model/TonCenterBlock.prevKeyBlockSeqno.<get-prevKeyBlockSeqno>|<get-prevKeyBlockSeqno>(){}[0]
    final val randSeed // org.ton.sdk.toncenter.model/TonCenterBlock.randSeed|{}randSeed[0]
        final fun <get-randSeed>(): org.ton.sdk.crypto/HashBytes // org.ton.sdk.toncenter.model/TonCenterBlock.randSeed.<get-randSeed>|<get-randSeed>(){}[0]
    final val rootHash // org.ton.sdk.toncenter.model/TonCenterBlock.rootHash|{}rootHash[0]
        final fun <get-rootHash>(): org.ton.sdk.crypto/HashBytes // org.ton.sdk.toncenter.model/TonCenterBlock.rootHash.<get-rootHash>|<get-rootHash>(){}[0]
    final val seqno // org.ton.sdk.toncenter.model/TonCenterBlock.seqno|{}seqno[0]
        final fun <get-seqno>(): kotlin/Int // org.ton.sdk.toncenter.model/TonCenterBlock.seqno.<get-seqno>|<get-seqno>(){}[0]
    final val shard // org.ton.sdk.toncenter.model/TonCenterBlock.shard|{}shard[0]
        final fun <get-shard>(): kotlin/Long // org.ton.sdk.toncenter.model/TonCenterBlock.shard.<get-shard>|<get-shard>(){}[0]
    final val startLt // org.ton.sdk.toncenter.model/TonCenterBlock.startLt|{}startLt[0]
        final fun <get-startLt>(): kotlin/Long // org.ton.sdk.toncenter.model/TonCenterBlock.startLt.<get-startLt>|<get-startLt>(){}[0]
    final val txCount // org.ton.sdk.toncenter.model/TonCenterBlock.txCount|{}txCount[0]
        final fun <get-txCount>(): kotlin/Int // org.ton.sdk.toncenter.model/TonCenterBlock.txCount.<get-txCount>|<get-txCount>(){}[0]
    final val validatorListHashShort // org.ton.sdk.toncenter.model/TonCenterBlock.validatorListHashShort|{}validatorListHashShort[0]
        final fun <get-validatorListHashShort>(): kotlin/Int // org.ton.sdk.toncenter.model/TonCenterBlock.validatorListHashShort.<get-validatorListHashShort>|<get-validatorListHashShort>(){}[0]
    final val version // org.ton.sdk.toncenter.model/TonCenterBlock.version|{}version[0]
        final fun <get-version>(): kotlin/Int // org.ton.sdk.toncenter.model/TonCenterBlock.version.<get-version>|<get-version>(){}[0]
    final val vertSeqno // org.ton.sdk.toncenter.model/TonCenterBlock.vertSeqno|{}vertSeqno[0]
        final fun <get-vertSeqno>(): kotlin/Int // org.ton.sdk.toncenter.model/TonCenterBlock.vertSeqno.<get-vertSeqno>|<get-vertSeqno>(){}[0]
    final val vertSeqnoIncr // org.ton.sdk.toncenter.model/TonCenterBlock.vertSeqnoIncr|{}vertSeqnoIncr[0]
        final fun <get-vertSeqnoIncr>(): kotlin/Boolean // org.ton.sdk.toncenter.model/TonCenterBlock.vertSeqnoIncr.<get-vertSeqnoIncr>|<get-vertSeqnoIncr>(){}[0]
    final val wantMerge // org.ton.sdk.toncenter.model/TonCenterBlock.wantMerge|{}wantMerge[0]
        final fun <get-wantMerge>(): kotlin/Boolean // org.ton.sdk.toncenter.model/TonCenterBlock.wantMerge.<get-wantMerge>|<get-wantMerge>(){}[0]
    final val wantSplit // org.ton.sdk.toncenter.model/TonCenterBlock.wantSplit|{}wantSplit[0]
        final fun <get-wantSplit>(): kotlin/Boolean // org.ton.sdk.toncenter.model/TonCenterBlock.wantSplit.<get-wantSplit>|<get-wantSplit>(){}[0]
    final val workchain // org.ton.sdk.toncenter.model/TonCenterBlock.workchain|{}workchain[0]
        final fun <get-workchain>(): kotlin/Int // org.ton.sdk.toncenter.model/TonCenterBlock.workchain.<get-workchain>|<get-workchain>(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<org.ton.sdk.toncenter.model/TonCenterBlock> { // org.ton.sdk.toncenter.model/TonCenterBlock.$serializer|null[0]
        final val descriptor // org.ton.sdk.toncenter.model/TonCenterBlock.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // org.ton.sdk.toncenter.model/TonCenterBlock.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // org.ton.sdk.toncenter.model/TonCenterBlock.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): org.ton.sdk.toncenter.model/TonCenterBlock // org.ton.sdk.toncenter.model/TonCenterBlock.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, org.ton.sdk.toncenter.model/TonCenterBlock) // org.ton.sdk.toncenter.model/TonCenterBlock.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;org.ton.sdk.toncenter.model.TonCenterBlock){}[0]
    }

    final object Companion { // org.ton.sdk.toncenter.model/TonCenterBlock.Companion|null[0]
        final val $childSerializers // org.ton.sdk.toncenter.model/TonCenterBlock.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<org.ton.sdk.toncenter.model/TonCenterBlock> // org.ton.sdk.toncenter.model/TonCenterBlock.Companion.serializer|serializer(){}[0]
    }
}

final class org.ton.sdk.toncenter.model/TonCenterBlockId { // org.ton.sdk.toncenter.model/TonCenterBlockId|null[0]
    constructor <init>(kotlin/Int, kotlin/Long, kotlin/Int) // org.ton.sdk.toncenter.model/TonCenterBlockId.<init>|<init>(kotlin.Int;kotlin.Long;kotlin.Int){}[0]

    final val seqno // org.ton.sdk.toncenter.model/TonCenterBlockId.seqno|{}seqno[0]
        final fun <get-seqno>(): kotlin/Int // org.ton.sdk.toncenter.model/TonCenterBlockId.seqno.<get-seqno>|<get-seqno>(){}[0]
    final val shard // org.ton.sdk.toncenter.model/TonCenterBlockId.shard|{}shard[0]
        final fun <get-shard>(): kotlin/Long // org.ton.sdk.toncenter.model/TonCenterBlockId.shard.<get-shard>|<get-shard>(){}[0]
    final val workchain // org.ton.sdk.toncenter.model/TonCenterBlockId.workchain|{}workchain[0]
        final fun <get-workchain>(): kotlin/Int // org.ton.sdk.toncenter.model/TonCenterBlockId.workchain.<get-workchain>|<get-workchain>(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<org.ton.sdk.toncenter.model/TonCenterBlockId> { // org.ton.sdk.toncenter.model/TonCenterBlockId.$serializer|null[0]
        final val descriptor // org.ton.sdk.toncenter.model/TonCenterBlockId.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // org.ton.sdk.toncenter.model/TonCenterBlockId.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // org.ton.sdk.toncenter.model/TonCenterBlockId.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): org.ton.sdk.toncenter.model/TonCenterBlockId // org.ton.sdk.toncenter.model/TonCenterBlockId.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, org.ton.sdk.toncenter.model/TonCenterBlockId) // org.ton.sdk.toncenter.model/TonCenterBlockId.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;org.ton.sdk.toncenter.model.TonCenterBlockId){}[0]
    }

    final object Companion { // org.ton.sdk.toncenter.model/TonCenterBlockId.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<org.ton.sdk.toncenter.model/TonCenterBlockId> // org.ton.sdk.toncenter.model/TonCenterBlockId.Companion.serializer|serializer(){}[0]
    }
}

final class org.ton.sdk.toncenter.model/TonCenterBlocksRequestBuilder { // org.ton.sdk.toncenter.model/TonCenterBlocksRequestBuilder|null[0]
    constructor <init>(kotlin/Int? = ..., kotlin/Long? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Long? = ..., kotlin/Long? = ..., kotlin/Long? = ..., kotlin/Long? = ..., kotlin/Int? = ..., kotlin/Int? = ...) // org.ton.sdk.toncenter.model/TonCenterBlocksRequestBuilder.<init>|<init>(kotlin.Int?;kotlin.Long?;kotlin.Int?;kotlin.Int?;kotlin.Long?;kotlin.Long?;kotlin.Long?;kotlin.Long?;kotlin.Int?;kotlin.Int?){}[0]

    final var endLt // org.ton.sdk.toncenter.model/TonCenterBlocksRequestBuilder.endLt|{}endLt[0]
        final fun <get-endLt>(): kotlin/Long? // org.ton.sdk.toncenter.model/TonCenterBlocksRequestBuilder.endLt.<get-endLt>|<get-endLt>(){}[0]
        final fun <set-endLt>(kotlin/Long?) // org.ton.sdk.toncenter.model/TonCenterBlocksRequestBuilder.endLt.<set-endLt>|<set-endLt>(kotlin.Long?){}[0]
    final var endUTime // org.ton.sdk.toncenter.model/TonCenterBlocksRequestBuilder.endUTime|{}endUTime[0]
        final fun <get-endUTime>(): kotlin/Long? // org.ton.sdk.toncenter.model/TonCenterBlocksRequestBuilder.endUTime.<get-endUTime>|<get-endUTime>(){}[0]
        final fun <set-endUTime>(kotlin/Long?) // org.ton.sdk.toncenter.model/TonCenterBlocksRequestBuilder.endUTime.<set-endUTime>|<set-endUTime>(kotlin.Long?){}[0]
    final var limit // org.ton.sdk.toncenter.model/TonCenterBlocksRequestBuilder.limit|{}limit[0]
        final fun <get-limit>(): kotlin/Int? // org.ton.sdk.toncenter.model/TonCenterBlocksRequestBuilder.limit.<get-limit>|<get-limit>(){}[0]
        final fun <set-limit>(kotlin/Int?) // org.ton.sdk.toncenter.model/TonCenterBlocksRequestBuilder.limit.<set-limit>|<set-limit>(kotlin.Int?){}[0]
    final var mcSeqno // org.ton.sdk.toncenter.model/TonCenterBlocksRequestBuilder.mcSeqno|{}mcSeqno[0]
        final fun <get-mcSeqno>(): kotlin/Int? // org.ton.sdk.toncenter.model/TonCenterBlocksRequestBuilder.mcSeqno.<get-mcSeqno>|<get-mcSeqno>(){}[0]
        final fun <set-mcSeqno>(kotlin/Int?) // org.ton.sdk.toncenter.model/TonCenterBlocksRequestBuilder.mcSeqno.<set-mcSeqno>|<set-mcSeqno>(kotlin.Int?){}[0]
    final var offset // org.ton.sdk.toncenter.model/TonCenterBlocksRequestBuilder.offset|{}offset[0]
        final fun <get-offset>(): kotlin/Int? // org.ton.sdk.toncenter.model/TonCenterBlocksRequestBuilder.offset.<get-offset>|<get-offset>(){}[0]
        final fun <set-offset>(kotlin/Int?) // org.ton.sdk.toncenter.model/TonCenterBlocksRequestBuilder.offset.<set-offset>|<set-offset>(kotlin.Int?){}[0]
    final var seqno // org.ton.sdk.toncenter.model/TonCenterBlocksRequestBuilder.seqno|{}seqno[0]
        final fun <get-seqno>(): kotlin/Int? // org.ton.sdk.toncenter.model/TonCenterBlocksRequestBuilder.seqno.<get-seqno>|<get-seqno>(){}[0]
        final fun <set-seqno>(kotlin/Int?) // org.ton.sdk.toncenter.model/TonCenterBlocksRequestBuilder.seqno.<set-seqno>|<set-seqno>(kotlin.Int?){}[0]
    final var shard // org.ton.sdk.toncenter.model/TonCenterBlocksRequestBuilder.shard|{}shard[0]
        final fun <get-shard>(): kotlin/Long? // org.ton.sdk.toncenter.model/TonCenterBlocksRequestBuilder.shard.<get-shard>|<get-shard>(){}[0]
        final fun <set-shard>(kotlin/Long?) // org.ton.sdk.toncenter.model/TonCenterBlocksRequestBuilder.shard.<set-shard>|<set-shard>(kotlin.Long?){}[0]
    final var startLt // org.ton.sdk.toncenter.model/TonCenterBlocksRequestBuilder.startLt|{}startLt[0]
        final fun <get-startLt>(): kotlin/Long? // org.ton.sdk.toncenter.model/TonCenterBlocksRequestBuilder.startLt.<get-startLt>|<get-startLt>(){}[0]
        final fun <set-startLt>(kotlin/Long?) // org.ton.sdk.toncenter.model/TonCenterBlocksRequestBuilder.startLt.<set-startLt>|<set-startLt>(kotlin.Long?){}[0]
    final var startUTime // org.ton.sdk.toncenter.model/TonCenterBlocksRequestBuilder.startUTime|{}startUTime[0]
        final fun <get-startUTime>(): kotlin/Long? // org.ton.sdk.toncenter.model/TonCenterBlocksRequestBuilder.startUTime.<get-startUTime>|<get-startUTime>(){}[0]
        final fun <set-startUTime>(kotlin/Long?) // org.ton.sdk.toncenter.model/TonCenterBlocksRequestBuilder.startUTime.<set-startUTime>|<set-startUTime>(kotlin.Long?){}[0]
    final var workchain // org.ton.sdk.toncenter.model/TonCenterBlocksRequestBuilder.workchain|{}workchain[0]
        final fun <get-workchain>(): kotlin/Int? // org.ton.sdk.toncenter.model/TonCenterBlocksRequestBuilder.workchain.<get-workchain>|<get-workchain>(){}[0]
        final fun <set-workchain>(kotlin/Int?) // org.ton.sdk.toncenter.model/TonCenterBlocksRequestBuilder.workchain.<set-workchain>|<set-workchain>(kotlin.Int?){}[0]
}

final class org.ton.sdk.toncenter.model/TonCenterBlocksResponse { // org.ton.sdk.toncenter.model/TonCenterBlocksResponse|null[0]
    constructor <init>(kotlin.collections/List<org.ton.sdk.toncenter.model/TonCenterBlock>) // org.ton.sdk.toncenter.model/TonCenterBlocksResponse.<init>|<init>(kotlin.collections.List<org.ton.sdk.toncenter.model.TonCenterBlock>){}[0]

    final val blocks // org.ton.sdk.toncenter.model/TonCenterBlocksResponse.blocks|{}blocks[0]
        final fun <get-blocks>(): kotlin.collections/List<org.ton.sdk.toncenter.model/TonCenterBlock> // org.ton.sdk.toncenter.model/TonCenterBlocksResponse.blocks.<get-blocks>|<get-blocks>(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<org.ton.sdk.toncenter.model/TonCenterBlocksResponse> { // org.ton.sdk.toncenter.model/TonCenterBlocksResponse.$serializer|null[0]
        final val descriptor // org.ton.sdk.toncenter.model/TonCenterBlocksResponse.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // org.ton.sdk.toncenter.model/TonCenterBlocksResponse.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // org.ton.sdk.toncenter.model/TonCenterBlocksResponse.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): org.ton.sdk.toncenter.model/TonCenterBlocksResponse // org.ton.sdk.toncenter.model/TonCenterBlocksResponse.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, org.ton.sdk.toncenter.model/TonCenterBlocksResponse) // org.ton.sdk.toncenter.model/TonCenterBlocksResponse.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;org.ton.sdk.toncenter.model.TonCenterBlocksResponse){}[0]
    }

    final object Companion { // org.ton.sdk.toncenter.model/TonCenterBlocksResponse.Companion|null[0]
        final val $childSerializers // org.ton.sdk.toncenter.model/TonCenterBlocksResponse.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<org.ton.sdk.toncenter.model/TonCenterBlocksResponse> // org.ton.sdk.toncenter.model/TonCenterBlocksResponse.Companion.serializer|serializer(){}[0]
    }
}

final class org.ton.sdk.toncenter.model/TonCenterDecodedContent { // org.ton.sdk.toncenter.model/TonCenterDecodedContent|null[0]
    constructor <init>(kotlin/String, kotlin/String? = ...) // org.ton.sdk.toncenter.model/TonCenterDecodedContent.<init>|<init>(kotlin.String;kotlin.String?){}[0]

    final val comment // org.ton.sdk.toncenter.model/TonCenterDecodedContent.comment|{}comment[0]
        final fun <get-comment>(): kotlin/String? // org.ton.sdk.toncenter.model/TonCenterDecodedContent.comment.<get-comment>|<get-comment>(){}[0]
    final val type // org.ton.sdk.toncenter.model/TonCenterDecodedContent.type|{}type[0]
        final fun <get-type>(): kotlin/String // org.ton.sdk.toncenter.model/TonCenterDecodedContent.type.<get-type>|<get-type>(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<org.ton.sdk.toncenter.model/TonCenterDecodedContent> { // org.ton.sdk.toncenter.model/TonCenterDecodedContent.$serializer|null[0]
        final val descriptor // org.ton.sdk.toncenter.model/TonCenterDecodedContent.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // org.ton.sdk.toncenter.model/TonCenterDecodedContent.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // org.ton.sdk.toncenter.model/TonCenterDecodedContent.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): org.ton.sdk.toncenter.model/TonCenterDecodedContent // org.ton.sdk.toncenter.model/TonCenterDecodedContent.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, org.ton.sdk.toncenter.model/TonCenterDecodedContent) // org.ton.sdk.toncenter.model/TonCenterDecodedContent.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;org.ton.sdk.toncenter.model.TonCenterDecodedContent){}[0]
    }

    final object Companion { // org.ton.sdk.toncenter.model/TonCenterDecodedContent.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<org.ton.sdk.toncenter.model/TonCenterDecodedContent> // org.ton.sdk.toncenter.model/TonCenterDecodedContent.Companion.serializer|serializer(){}[0]
    }
}

final class org.ton.sdk.toncenter.model/TonCenterMasterchainBlockShardStateRequest { // org.ton.sdk.toncenter.model/TonCenterMasterchainBlockShardStateRequest|null[0]
    constructor <init>(kotlin/Int, kotlin/Int?, kotlin/Int?) // org.ton.sdk.toncenter.model/TonCenterMasterchainBlockShardStateRequest.<init>|<init>(kotlin.Int;kotlin.Int?;kotlin.Int?){}[0]

    final val seqno // org.ton.sdk.toncenter.model/TonCenterMasterchainBlockShardStateRequest.seqno|{}seqno[0]
        final fun <get-seqno>(): kotlin/Int // org.ton.sdk.toncenter.model/TonCenterMasterchainBlockShardStateRequest.seqno.<get-seqno>|<get-seqno>(){}[0]

    final var limit // org.ton.sdk.toncenter.model/TonCenterMasterchainBlockShardStateRequest.limit|{}limit[0]
        final fun <get-limit>(): kotlin/Int? // org.ton.sdk.toncenter.model/TonCenterMasterchainBlockShardStateRequest.limit.<get-limit>|<get-limit>(){}[0]
        final fun <set-limit>(kotlin/Int?) // org.ton.sdk.toncenter.model/TonCenterMasterchainBlockShardStateRequest.limit.<set-limit>|<set-limit>(kotlin.Int?){}[0]
    final var offset // org.ton.sdk.toncenter.model/TonCenterMasterchainBlockShardStateRequest.offset|{}offset[0]
        final fun <get-offset>(): kotlin/Int? // org.ton.sdk.toncenter.model/TonCenterMasterchainBlockShardStateRequest.offset.<get-offset>|<get-offset>(){}[0]
        final fun <set-offset>(kotlin/Int?) // org.ton.sdk.toncenter.model/TonCenterMasterchainBlockShardStateRequest.offset.<set-offset>|<set-offset>(kotlin.Int?){}[0]

    final class Builder { // org.ton.sdk.toncenter.model/TonCenterMasterchainBlockShardStateRequest.Builder|null[0]
        constructor <init>(kotlin/Int) // org.ton.sdk.toncenter.model/TonCenterMasterchainBlockShardStateRequest.Builder.<init>|<init>(kotlin.Int){}[0]

        final var limit // org.ton.sdk.toncenter.model/TonCenterMasterchainBlockShardStateRequest.Builder.limit|{}limit[0]
            final fun <get-limit>(): kotlin/Int? // org.ton.sdk.toncenter.model/TonCenterMasterchainBlockShardStateRequest.Builder.limit.<get-limit>|<get-limit>(){}[0]
            final fun <set-limit>(kotlin/Int?) // org.ton.sdk.toncenter.model/TonCenterMasterchainBlockShardStateRequest.Builder.limit.<set-limit>|<set-limit>(kotlin.Int?){}[0]
        final var offset // org.ton.sdk.toncenter.model/TonCenterMasterchainBlockShardStateRequest.Builder.offset|{}offset[0]
            final fun <get-offset>(): kotlin/Int? // org.ton.sdk.toncenter.model/TonCenterMasterchainBlockShardStateRequest.Builder.offset.<get-offset>|<get-offset>(){}[0]
            final fun <set-offset>(kotlin/Int?) // org.ton.sdk.toncenter.model/TonCenterMasterchainBlockShardStateRequest.Builder.offset.<set-offset>|<set-offset>(kotlin.Int?){}[0]
        final var seqno // org.ton.sdk.toncenter.model/TonCenterMasterchainBlockShardStateRequest.Builder.seqno|{}seqno[0]
            final fun <get-seqno>(): kotlin/Int // org.ton.sdk.toncenter.model/TonCenterMasterchainBlockShardStateRequest.Builder.seqno.<get-seqno>|<get-seqno>(){}[0]
            final fun <set-seqno>(kotlin/Int) // org.ton.sdk.toncenter.model/TonCenterMasterchainBlockShardStateRequest.Builder.seqno.<set-seqno>|<set-seqno>(kotlin.Int){}[0]

        final fun build(): org.ton.sdk.toncenter.model/TonCenterMasterchainBlockShardStateRequest // org.ton.sdk.toncenter.model/TonCenterMasterchainBlockShardStateRequest.Builder.build|build(){}[0]
    }
}

final class org.ton.sdk.toncenter.model/TonCenterMasterchainInfo { // org.ton.sdk.toncenter.model/TonCenterMasterchainInfo|null[0]
    constructor <init>(org.ton.sdk.toncenter.model/TonCenterBlock, org.ton.sdk.toncenter.model/TonCenterBlock) // org.ton.sdk.toncenter.model/TonCenterMasterchainInfo.<init>|<init>(org.ton.sdk.toncenter.model.TonCenterBlock;org.ton.sdk.toncenter.model.TonCenterBlock){}[0]

    final val first // org.ton.sdk.toncenter.model/TonCenterMasterchainInfo.first|{}first[0]
        final fun <get-first>(): org.ton.sdk.toncenter.model/TonCenterBlock // org.ton.sdk.toncenter.model/TonCenterMasterchainInfo.first.<get-first>|<get-first>(){}[0]
    final val last // org.ton.sdk.toncenter.model/TonCenterMasterchainInfo.last|{}last[0]
        final fun <get-last>(): org.ton.sdk.toncenter.model/TonCenterBlock // org.ton.sdk.toncenter.model/TonCenterMasterchainInfo.last.<get-last>|<get-last>(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<org.ton.sdk.toncenter.model/TonCenterMasterchainInfo> { // org.ton.sdk.toncenter.model/TonCenterMasterchainInfo.$serializer|null[0]
        final val descriptor // org.ton.sdk.toncenter.model/TonCenterMasterchainInfo.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // org.ton.sdk.toncenter.model/TonCenterMasterchainInfo.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // org.ton.sdk.toncenter.model/TonCenterMasterchainInfo.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): org.ton.sdk.toncenter.model/TonCenterMasterchainInfo // org.ton.sdk.toncenter.model/TonCenterMasterchainInfo.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, org.ton.sdk.toncenter.model/TonCenterMasterchainInfo) // org.ton.sdk.toncenter.model/TonCenterMasterchainInfo.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;org.ton.sdk.toncenter.model.TonCenterMasterchainInfo){}[0]
    }

    final object Companion { // org.ton.sdk.toncenter.model/TonCenterMasterchainInfo.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<org.ton.sdk.toncenter.model/TonCenterMasterchainInfo> // org.ton.sdk.toncenter.model/TonCenterMasterchainInfo.Companion.serializer|serializer(){}[0]
    }
}

final class org.ton.sdk.toncenter.model/TonCenterMessage { // org.ton.sdk.toncenter.model/TonCenterMessage|null[0]
    constructor <init>(org.ton.sdk.crypto/HashBytes, org.ton.sdk.crypto/HashBytes? = ..., org.ton.sdk.blockchain.address/AddressStd?, org.ton.sdk.blockchain.address/AddressStd?, org.ton.sdk.blockchain.currency/Coins?, org.ton.sdk.blockchain.currency/ExtraCurrencyCollection?, org.ton.sdk.blockchain.currency/Coins?, org.ton.sdk.blockchain.currency/Coins?, kotlin/Long?, kotlin/Long?, kotlin/Int?, kotlin/String?, kotlin/Boolean?, kotlin/Boolean?, kotlin/Boolean?, org.ton.sdk.blockchain.currency/Coins?, org.ton.sdk.crypto/HashBytes? = ..., org.ton.sdk.crypto/HashBytes? = ..., org.ton.sdk.toncenter.model/TonCenterMessageContent, org.ton.sdk.toncenter.model/TonCenterMessageContent?, kotlin/String? = ...) // org.ton.sdk.toncenter.model/TonCenterMessage.<init>|<init>(org.ton.sdk.crypto.HashBytes;org.ton.sdk.crypto.HashBytes?;org.ton.sdk.blockchain.address.AddressStd?;org.ton.sdk.blockchain.address.AddressStd?;org.ton.sdk.blockchain.currency.Coins?;org.ton.sdk.blockchain.currency.ExtraCurrencyCollection?;org.ton.sdk.blockchain.currency.Coins?;org.ton.sdk.blockchain.currency.Coins?;kotlin.Long?;kotlin.Long?;kotlin.Int?;kotlin.String?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;org.ton.sdk.blockchain.currency.Coins?;org.ton.sdk.crypto.HashBytes?;org.ton.sdk.crypto.HashBytes?;org.ton.sdk.toncenter.model.TonCenterMessageContent;org.ton.sdk.toncenter.model.TonCenterMessageContent?;kotlin.String?){}[0]

    final val bounce // org.ton.sdk.toncenter.model/TonCenterMessage.bounce|{}bounce[0]
        final fun <get-bounce>(): kotlin/Boolean? // org.ton.sdk.toncenter.model/TonCenterMessage.bounce.<get-bounce>|<get-bounce>(){}[0]
    final val bounced // org.ton.sdk.toncenter.model/TonCenterMessage.bounced|{}bounced[0]
        final fun <get-bounced>(): kotlin/Boolean? // org.ton.sdk.toncenter.model/TonCenterMessage.bounced.<get-bounced>|<get-bounced>(){}[0]
    final val createdAt // org.ton.sdk.toncenter.model/TonCenterMessage.createdAt|{}createdAt[0]
        final fun <get-createdAt>(): kotlin/Long? // org.ton.sdk.toncenter.model/TonCenterMessage.createdAt.<get-createdAt>|<get-createdAt>(){}[0]
    final val createdLt // org.ton.sdk.toncenter.model/TonCenterMessage.createdLt|{}createdLt[0]
        final fun <get-createdLt>(): kotlin/Long? // org.ton.sdk.toncenter.model/TonCenterMessage.createdLt.<get-createdLt>|<get-createdLt>(){}[0]
    final val decodedOpcode // org.ton.sdk.toncenter.model/TonCenterMessage.decodedOpcode|{}decodedOpcode[0]
        final fun <get-decodedOpcode>(): kotlin/String? // org.ton.sdk.toncenter.model/TonCenterMessage.decodedOpcode.<get-decodedOpcode>|<get-decodedOpcode>(){}[0]
    final val destination // org.ton.sdk.toncenter.model/TonCenterMessage.destination|{}destination[0]
        final fun <get-destination>(): org.ton.sdk.blockchain.address/AddressStd? // org.ton.sdk.toncenter.model/TonCenterMessage.destination.<get-destination>|<get-destination>(){}[0]
    final val extraFlags // org.ton.sdk.toncenter.model/TonCenterMessage.extraFlags|{}extraFlags[0]
        final fun <get-extraFlags>(): kotlin/String? // org.ton.sdk.toncenter.model/TonCenterMessage.extraFlags.<get-extraFlags>|<get-extraFlags>(){}[0]
    final val fwdFee // org.ton.sdk.toncenter.model/TonCenterMessage.fwdFee|{}fwdFee[0]
        final fun <get-fwdFee>(): org.ton.sdk.blockchain.currency/Coins? // org.ton.sdk.toncenter.model/TonCenterMessage.fwdFee.<get-fwdFee>|<get-fwdFee>(){}[0]
    final val hash // org.ton.sdk.toncenter.model/TonCenterMessage.hash|{}hash[0]
        final fun <get-hash>(): org.ton.sdk.crypto/HashBytes // org.ton.sdk.toncenter.model/TonCenterMessage.hash.<get-hash>|<get-hash>(){}[0]
    final val hashNorm // org.ton.sdk.toncenter.model/TonCenterMessage.hashNorm|{}hashNorm[0]
        final fun <get-hashNorm>(): org.ton.sdk.crypto/HashBytes? // org.ton.sdk.toncenter.model/TonCenterMessage.hashNorm.<get-hashNorm>|<get-hashNorm>(){}[0]
    final val ihrDisabled // org.ton.sdk.toncenter.model/TonCenterMessage.ihrDisabled|{}ihrDisabled[0]
        final fun <get-ihrDisabled>(): kotlin/Boolean? // org.ton.sdk.toncenter.model/TonCenterMessage.ihrDisabled.<get-ihrDisabled>|<get-ihrDisabled>(){}[0]
    final val ihrFee // org.ton.sdk.toncenter.model/TonCenterMessage.ihrFee|{}ihrFee[0]
        final fun <get-ihrFee>(): org.ton.sdk.blockchain.currency/Coins? // org.ton.sdk.toncenter.model/TonCenterMessage.ihrFee.<get-ihrFee>|<get-ihrFee>(){}[0]
    final val importFee // org.ton.sdk.toncenter.model/TonCenterMessage.importFee|{}importFee[0]
        final fun <get-importFee>(): org.ton.sdk.blockchain.currency/Coins? // org.ton.sdk.toncenter.model/TonCenterMessage.importFee.<get-importFee>|<get-importFee>(){}[0]
    final val inMsgTxHash // org.ton.sdk.toncenter.model/TonCenterMessage.inMsgTxHash|{}inMsgTxHash[0]
        final fun <get-inMsgTxHash>(): org.ton.sdk.crypto/HashBytes? // org.ton.sdk.toncenter.model/TonCenterMessage.inMsgTxHash.<get-inMsgTxHash>|<get-inMsgTxHash>(){}[0]
    final val initState // org.ton.sdk.toncenter.model/TonCenterMessage.initState|{}initState[0]
        final fun <get-initState>(): org.ton.sdk.toncenter.model/TonCenterMessageContent? // org.ton.sdk.toncenter.model/TonCenterMessage.initState.<get-initState>|<get-initState>(){}[0]
    final val messageContent // org.ton.sdk.toncenter.model/TonCenterMessage.messageContent|{}messageContent[0]
        final fun <get-messageContent>(): org.ton.sdk.toncenter.model/TonCenterMessageContent // org.ton.sdk.toncenter.model/TonCenterMessage.messageContent.<get-messageContent>|<get-messageContent>(){}[0]
    final val opcode // org.ton.sdk.toncenter.model/TonCenterMessage.opcode|{}opcode[0]
        final fun <get-opcode>(): kotlin/Int? // org.ton.sdk.toncenter.model/TonCenterMessage.opcode.<get-opcode>|<get-opcode>(){}[0]
    final val outMsgTxHash // org.ton.sdk.toncenter.model/TonCenterMessage.outMsgTxHash|{}outMsgTxHash[0]
        final fun <get-outMsgTxHash>(): org.ton.sdk.crypto/HashBytes? // org.ton.sdk.toncenter.model/TonCenterMessage.outMsgTxHash.<get-outMsgTxHash>|<get-outMsgTxHash>(){}[0]
    final val source // org.ton.sdk.toncenter.model/TonCenterMessage.source|{}source[0]
        final fun <get-source>(): org.ton.sdk.blockchain.address/AddressStd? // org.ton.sdk.toncenter.model/TonCenterMessage.source.<get-source>|<get-source>(){}[0]
    final val value // org.ton.sdk.toncenter.model/TonCenterMessage.value|{}value[0]
        final fun <get-value>(): org.ton.sdk.blockchain.currency/Coins? // org.ton.sdk.toncenter.model/TonCenterMessage.value.<get-value>|<get-value>(){}[0]
    final val valueExtraCurrencies // org.ton.sdk.toncenter.model/TonCenterMessage.valueExtraCurrencies|{}valueExtraCurrencies[0]
        final fun <get-valueExtraCurrencies>(): org.ton.sdk.blockchain.currency/ExtraCurrencyCollection? // org.ton.sdk.toncenter.model/TonCenterMessage.valueExtraCurrencies.<get-valueExtraCurrencies>|<get-valueExtraCurrencies>(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<org.ton.sdk.toncenter.model/TonCenterMessage> { // org.ton.sdk.toncenter.model/TonCenterMessage.$serializer|null[0]
        final val descriptor // org.ton.sdk.toncenter.model/TonCenterMessage.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // org.ton.sdk.toncenter.model/TonCenterMessage.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // org.ton.sdk.toncenter.model/TonCenterMessage.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): org.ton.sdk.toncenter.model/TonCenterMessage // org.ton.sdk.toncenter.model/TonCenterMessage.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, org.ton.sdk.toncenter.model/TonCenterMessage) // org.ton.sdk.toncenter.model/TonCenterMessage.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;org.ton.sdk.toncenter.model.TonCenterMessage){}[0]
    }

    final object Companion { // org.ton.sdk.toncenter.model/TonCenterMessage.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<org.ton.sdk.toncenter.model/TonCenterMessage> // org.ton.sdk.toncenter.model/TonCenterMessage.Companion.serializer|serializer(){}[0]
    }
}

final class org.ton.sdk.toncenter.model/TonCenterMessageContent { // org.ton.sdk.toncenter.model/TonCenterMessageContent|null[0]
    constructor <init>(org.ton.sdk.crypto/HashBytes, kotlinx.io.bytestring/ByteString, kotlinx.serialization.json/JsonObject?) // org.ton.sdk.toncenter.model/TonCenterMessageContent.<init>|<init>(org.ton.sdk.crypto.HashBytes;kotlinx.io.bytestring.ByteString;kotlinx.serialization.json.JsonObject?){}[0]

    final val body // org.ton.sdk.toncenter.model/TonCenterMessageContent.body|{}body[0]
        final fun <get-body>(): kotlinx.io.bytestring/ByteString // org.ton.sdk.toncenter.model/TonCenterMessageContent.body.<get-body>|<get-body>(){}[0]
    final val decoded // org.ton.sdk.toncenter.model/TonCenterMessageContent.decoded|{}decoded[0]
        final fun <get-decoded>(): kotlinx.serialization.json/JsonObject? // org.ton.sdk.toncenter.model/TonCenterMessageContent.decoded.<get-decoded>|<get-decoded>(){}[0]
    final val hash // org.ton.sdk.toncenter.model/TonCenterMessageContent.hash|{}hash[0]
        final fun <get-hash>(): org.ton.sdk.crypto/HashBytes // org.ton.sdk.toncenter.model/TonCenterMessageContent.hash.<get-hash>|<get-hash>(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<org.ton.sdk.toncenter.model/TonCenterMessageContent> { // org.ton.sdk.toncenter.model/TonCenterMessageContent.$serializer|null[0]
        final val descriptor // org.ton.sdk.toncenter.model/TonCenterMessageContent.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // org.ton.sdk.toncenter.model/TonCenterMessageContent.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // org.ton.sdk.toncenter.model/TonCenterMessageContent.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): org.ton.sdk.toncenter.model/TonCenterMessageContent // org.ton.sdk.toncenter.model/TonCenterMessageContent.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, org.ton.sdk.toncenter.model/TonCenterMessageContent) // org.ton.sdk.toncenter.model/TonCenterMessageContent.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;org.ton.sdk.toncenter.model.TonCenterMessageContent){}[0]
    }

    final object Companion { // org.ton.sdk.toncenter.model/TonCenterMessageContent.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<org.ton.sdk.toncenter.model/TonCenterMessageContent> // org.ton.sdk.toncenter.model/TonCenterMessageContent.Companion.serializer|serializer(){}[0]
    }
}

final class org.ton.sdk.toncenter.model/TonCenterMetadata : kotlin.collections/Map<org.ton.sdk.blockchain.address/AddressStd, org.ton.sdk.toncenter.model/TonCenterAddressMetadata> { // org.ton.sdk.toncenter.model/TonCenterMetadata|null[0]
    constructor <init>(kotlin.collections/Map<org.ton.sdk.blockchain.address/AddressStd, org.ton.sdk.toncenter.model/TonCenterAddressMetadata>) // org.ton.sdk.toncenter.model/TonCenterMetadata.<init>|<init>(kotlin.collections.Map<org.ton.sdk.blockchain.address.AddressStd,org.ton.sdk.toncenter.model.TonCenterAddressMetadata>){}[0]

    final val entries // org.ton.sdk.toncenter.model/TonCenterMetadata.entries|{}entries[0]
        final fun <get-entries>(): kotlin.collections/Set<kotlin.collections/Map.Entry<org.ton.sdk.blockchain.address/AddressStd, org.ton.sdk.toncenter.model/TonCenterAddressMetadata>> // org.ton.sdk.toncenter.model/TonCenterMetadata.entries.<get-entries>|<get-entries>(){}[0]
    final val keys // org.ton.sdk.toncenter.model/TonCenterMetadata.keys|{}keys[0]
        final fun <get-keys>(): kotlin.collections/Set<org.ton.sdk.blockchain.address/AddressStd> // org.ton.sdk.toncenter.model/TonCenterMetadata.keys.<get-keys>|<get-keys>(){}[0]
    final val map // org.ton.sdk.toncenter.model/TonCenterMetadata.map|{}map[0]
        final fun <get-map>(): kotlin.collections/Map<org.ton.sdk.blockchain.address/AddressStd, org.ton.sdk.toncenter.model/TonCenterAddressMetadata> // org.ton.sdk.toncenter.model/TonCenterMetadata.map.<get-map>|<get-map>(){}[0]
    final val size // org.ton.sdk.toncenter.model/TonCenterMetadata.size|{}size[0]
        final fun <get-size>(): kotlin/Int // org.ton.sdk.toncenter.model/TonCenterMetadata.size.<get-size>|<get-size>(){}[0]
    final val values // org.ton.sdk.toncenter.model/TonCenterMetadata.values|{}values[0]
        final fun <get-values>(): kotlin.collections/Collection<org.ton.sdk.toncenter.model/TonCenterAddressMetadata> // org.ton.sdk.toncenter.model/TonCenterMetadata.values.<get-values>|<get-values>(){}[0]

    final fun containsKey(org.ton.sdk.blockchain.address/AddressStd): kotlin/Boolean // org.ton.sdk.toncenter.model/TonCenterMetadata.containsKey|containsKey(org.ton.sdk.blockchain.address.AddressStd){}[0]
    final fun containsValue(org.ton.sdk.toncenter.model/TonCenterAddressMetadata): kotlin/Boolean // org.ton.sdk.toncenter.model/TonCenterMetadata.containsValue|containsValue(org.ton.sdk.toncenter.model.TonCenterAddressMetadata){}[0]
    final fun get(org.ton.sdk.blockchain.address/AddressStd): org.ton.sdk.toncenter.model/TonCenterAddressMetadata? // org.ton.sdk.toncenter.model/TonCenterMetadata.get|get(org.ton.sdk.blockchain.address.AddressStd){}[0]
    final fun isEmpty(): kotlin/Boolean // org.ton.sdk.toncenter.model/TonCenterMetadata.isEmpty|isEmpty(){}[0]
    final fun toString(): kotlin/String // org.ton.sdk.toncenter.model/TonCenterMetadata.toString|toString(){}[0]

    final object Companion { // org.ton.sdk.toncenter.model/TonCenterMetadata.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<org.ton.sdk.toncenter.model/TonCenterMetadata> // org.ton.sdk.toncenter.model/TonCenterMetadata.Companion.serializer|serializer(){}[0]
    }
}

final class org.ton.sdk.toncenter.model/TonCenterMetadataRequest { // org.ton.sdk.toncenter.model/TonCenterMetadataRequest|null[0]
    constructor <init>(kotlin.collections/List<org.ton.sdk.blockchain.address/AddressStd>) // org.ton.sdk.toncenter.model/TonCenterMetadataRequest.<init>|<init>(kotlin.collections.List<org.ton.sdk.blockchain.address.AddressStd>){}[0]

    final val address // org.ton.sdk.toncenter.model/TonCenterMetadataRequest.address|{}address[0]
        final fun <get-address>(): kotlin.collections/List<org.ton.sdk.blockchain.address/AddressStd> // org.ton.sdk.toncenter.model/TonCenterMetadataRequest.address.<get-address>|<get-address>(){}[0]

    final class Builder { // org.ton.sdk.toncenter.model/TonCenterMetadataRequest.Builder|null[0]
        constructor <init>() // org.ton.sdk.toncenter.model/TonCenterMetadataRequest.Builder.<init>|<init>(){}[0]

        final var address // org.ton.sdk.toncenter.model/TonCenterMetadataRequest.Builder.address|{}address[0]
            final fun <get-address>(): kotlin.collections/MutableList<org.ton.sdk.blockchain.address/AddressStd> // org.ton.sdk.toncenter.model/TonCenterMetadataRequest.Builder.address.<get-address>|<get-address>(){}[0]
            final fun <set-address>(kotlin.collections/MutableList<org.ton.sdk.blockchain.address/AddressStd>) // org.ton.sdk.toncenter.model/TonCenterMetadataRequest.Builder.address.<set-address>|<set-address>(kotlin.collections.MutableList<org.ton.sdk.blockchain.address.AddressStd>){}[0]

        final fun address(kotlin.collections/Collection<org.ton.sdk.blockchain.address/AddressStd>): org.ton.sdk.toncenter.model/TonCenterMetadataRequest.Builder // org.ton.sdk.toncenter.model/TonCenterMetadataRequest.Builder.address|address(kotlin.collections.Collection<org.ton.sdk.blockchain.address.AddressStd>){}[0]
        final fun address(kotlin/Array<out org.ton.sdk.blockchain.address/AddressStd>...): org.ton.sdk.toncenter.model/TonCenterMetadataRequest.Builder // org.ton.sdk.toncenter.model/TonCenterMetadataRequest.Builder.address|address(kotlin.Array<out|org.ton.sdk.blockchain.address.AddressStd>...){}[0]
        final fun build(): org.ton.sdk.toncenter.model/TonCenterMetadataRequest // org.ton.sdk.toncenter.model/TonCenterMetadataRequest.Builder.build|build(){}[0]
    }

    final object Companion { // org.ton.sdk.toncenter.model/TonCenterMetadataRequest.Companion|null[0]
        final fun builder(): org.ton.sdk.toncenter.model/TonCenterMetadataRequest.Builder // org.ton.sdk.toncenter.model/TonCenterMetadataRequest.Companion.builder|builder(){}[0]
    }
}

final class org.ton.sdk.toncenter.model/TonCenterRunGetMethodRequest { // org.ton.sdk.toncenter.model/TonCenterRunGetMethodRequest|null[0]
    constructor <init>(org.ton.sdk.blockchain.address/AddressStd, kotlin/String) // org.ton.sdk.toncenter.model/TonCenterRunGetMethodRequest.<init>|<init>(org.ton.sdk.blockchain.address.AddressStd;kotlin.String){}[0]
    constructor <init>(org.ton.sdk.blockchain.address/AddressStd, kotlin/String, kotlin.collections/List<org.ton.sdk.toncenter.model/TonCenterStackEntry<*>>) // org.ton.sdk.toncenter.model/TonCenterRunGetMethodRequest.<init>|<init>(org.ton.sdk.blockchain.address.AddressStd;kotlin.String;kotlin.collections.List<org.ton.sdk.toncenter.model.TonCenterStackEntry<*>>){}[0]

    final val address // org.ton.sdk.toncenter.model/TonCenterRunGetMethodRequest.address|{}address[0]
        final fun <get-address>(): org.ton.sdk.blockchain.address/AddressStd // org.ton.sdk.toncenter.model/TonCenterRunGetMethodRequest.address.<get-address>|<get-address>(){}[0]
    final val method // org.ton.sdk.toncenter.model/TonCenterRunGetMethodRequest.method|{}method[0]
        final fun <get-method>(): kotlin/String // org.ton.sdk.toncenter.model/TonCenterRunGetMethodRequest.method.<get-method>|<get-method>(){}[0]
    final val stack // org.ton.sdk.toncenter.model/TonCenterRunGetMethodRequest.stack|{}stack[0]
        final fun <get-stack>(): kotlin.collections/List<org.ton.sdk.toncenter.model/TonCenterStackEntry<*>> // org.ton.sdk.toncenter.model/TonCenterRunGetMethodRequest.stack.<get-stack>|<get-stack>(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<org.ton.sdk.toncenter.model/TonCenterRunGetMethodRequest> { // org.ton.sdk.toncenter.model/TonCenterRunGetMethodRequest.$serializer|null[0]
        final val descriptor // org.ton.sdk.toncenter.model/TonCenterRunGetMethodRequest.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // org.ton.sdk.toncenter.model/TonCenterRunGetMethodRequest.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // org.ton.sdk.toncenter.model/TonCenterRunGetMethodRequest.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): org.ton.sdk.toncenter.model/TonCenterRunGetMethodRequest // org.ton.sdk.toncenter.model/TonCenterRunGetMethodRequest.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, org.ton.sdk.toncenter.model/TonCenterRunGetMethodRequest) // org.ton.sdk.toncenter.model/TonCenterRunGetMethodRequest.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;org.ton.sdk.toncenter.model.TonCenterRunGetMethodRequest){}[0]
    }

    final object Companion { // org.ton.sdk.toncenter.model/TonCenterRunGetMethodRequest.Companion|null[0]
        final val $childSerializers // org.ton.sdk.toncenter.model/TonCenterRunGetMethodRequest.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<org.ton.sdk.toncenter.model/TonCenterRunGetMethodRequest> // org.ton.sdk.toncenter.model/TonCenterRunGetMethodRequest.Companion.serializer|serializer(){}[0]
    }
}

final class org.ton.sdk.toncenter.model/TonCenterRunGetMethodResult { // org.ton.sdk.toncenter.model/TonCenterRunGetMethodResult|null[0]
    constructor <init>(kotlin/Long, kotlin/Int, kotlin.collections/List<org.ton.sdk.toncenter.model/TonCenterStackEntry<*>>) // org.ton.sdk.toncenter.model/TonCenterRunGetMethodResult.<init>|<init>(kotlin.Long;kotlin.Int;kotlin.collections.List<org.ton.sdk.toncenter.model.TonCenterStackEntry<*>>){}[0]

    final val exitCode // org.ton.sdk.toncenter.model/TonCenterRunGetMethodResult.exitCode|{}exitCode[0]
        final fun <get-exitCode>(): kotlin/Int // org.ton.sdk.toncenter.model/TonCenterRunGetMethodResult.exitCode.<get-exitCode>|<get-exitCode>(){}[0]
    final val gasUsed // org.ton.sdk.toncenter.model/TonCenterRunGetMethodResult.gasUsed|{}gasUsed[0]
        final fun <get-gasUsed>(): kotlin/Long // org.ton.sdk.toncenter.model/TonCenterRunGetMethodResult.gasUsed.<get-gasUsed>|<get-gasUsed>(){}[0]
    final val stack // org.ton.sdk.toncenter.model/TonCenterRunGetMethodResult.stack|{}stack[0]
        final fun <get-stack>(): kotlin.collections/List<org.ton.sdk.toncenter.model/TonCenterStackEntry<*>> // org.ton.sdk.toncenter.model/TonCenterRunGetMethodResult.stack.<get-stack>|<get-stack>(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<org.ton.sdk.toncenter.model/TonCenterRunGetMethodResult> { // org.ton.sdk.toncenter.model/TonCenterRunGetMethodResult.$serializer|null[0]
        final val descriptor // org.ton.sdk.toncenter.model/TonCenterRunGetMethodResult.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // org.ton.sdk.toncenter.model/TonCenterRunGetMethodResult.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // org.ton.sdk.toncenter.model/TonCenterRunGetMethodResult.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): org.ton.sdk.toncenter.model/TonCenterRunGetMethodResult // org.ton.sdk.toncenter.model/TonCenterRunGetMethodResult.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, org.ton.sdk.toncenter.model/TonCenterRunGetMethodResult) // org.ton.sdk.toncenter.model/TonCenterRunGetMethodResult.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;org.ton.sdk.toncenter.model.TonCenterRunGetMethodResult){}[0]
    }

    final object Companion { // org.ton.sdk.toncenter.model/TonCenterRunGetMethodResult.Companion|null[0]
        final val $childSerializers // org.ton.sdk.toncenter.model/TonCenterRunGetMethodResult.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<org.ton.sdk.toncenter.model/TonCenterRunGetMethodResult> // org.ton.sdk.toncenter.model/TonCenterRunGetMethodResult.Companion.serializer|serializer(){}[0]
    }
}

final class org.ton.sdk.toncenter.model/TonCenterSendMessageRequest { // org.ton.sdk.toncenter.model/TonCenterSendMessageRequest|null[0]
    constructor <init>(kotlinx.io.bytestring/ByteString) // org.ton.sdk.toncenter.model/TonCenterSendMessageRequest.<init>|<init>(kotlinx.io.bytestring.ByteString){}[0]

    final val boc // org.ton.sdk.toncenter.model/TonCenterSendMessageRequest.boc|{}boc[0]
        final fun <get-boc>(): kotlinx.io.bytestring/ByteString // org.ton.sdk.toncenter.model/TonCenterSendMessageRequest.boc.<get-boc>|<get-boc>(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<org.ton.sdk.toncenter.model/TonCenterSendMessageRequest> { // org.ton.sdk.toncenter.model/TonCenterSendMessageRequest.$serializer|null[0]
        final val descriptor // org.ton.sdk.toncenter.model/TonCenterSendMessageRequest.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // org.ton.sdk.toncenter.model/TonCenterSendMessageRequest.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // org.ton.sdk.toncenter.model/TonCenterSendMessageRequest.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): org.ton.sdk.toncenter.model/TonCenterSendMessageRequest // org.ton.sdk.toncenter.model/TonCenterSendMessageRequest.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, org.ton.sdk.toncenter.model/TonCenterSendMessageRequest) // org.ton.sdk.toncenter.model/TonCenterSendMessageRequest.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;org.ton.sdk.toncenter.model.TonCenterSendMessageRequest){}[0]
    }

    final object Companion { // org.ton.sdk.toncenter.model/TonCenterSendMessageRequest.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<org.ton.sdk.toncenter.model/TonCenterSendMessageRequest> // org.ton.sdk.toncenter.model/TonCenterSendMessageRequest.Companion.serializer|serializer(){}[0]
    }
}

final class org.ton.sdk.toncenter.model/TonCenterSendMessageResult { // org.ton.sdk.toncenter.model/TonCenterSendMessageResult|null[0]
    constructor <init>(kotlinx.io.bytestring/ByteString, kotlinx.io.bytestring/ByteString) // org.ton.sdk.toncenter.model/TonCenterSendMessageResult.<init>|<init>(kotlinx.io.bytestring.ByteString;kotlinx.io.bytestring.ByteString){}[0]

    final val messageHash // org.ton.sdk.toncenter.model/TonCenterSendMessageResult.messageHash|{}messageHash[0]
        final fun <get-messageHash>(): kotlinx.io.bytestring/ByteString // org.ton.sdk.toncenter.model/TonCenterSendMessageResult.messageHash.<get-messageHash>|<get-messageHash>(){}[0]
    final val messageHashNorm // org.ton.sdk.toncenter.model/TonCenterSendMessageResult.messageHashNorm|{}messageHashNorm[0]
        final fun <get-messageHashNorm>(): kotlinx.io.bytestring/ByteString // org.ton.sdk.toncenter.model/TonCenterSendMessageResult.messageHashNorm.<get-messageHashNorm>|<get-messageHashNorm>(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<org.ton.sdk.toncenter.model/TonCenterSendMessageResult> { // org.ton.sdk.toncenter.model/TonCenterSendMessageResult.$serializer|null[0]
        final val descriptor // org.ton.sdk.toncenter.model/TonCenterSendMessageResult.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // org.ton.sdk.toncenter.model/TonCenterSendMessageResult.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // org.ton.sdk.toncenter.model/TonCenterSendMessageResult.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): org.ton.sdk.toncenter.model/TonCenterSendMessageResult // org.ton.sdk.toncenter.model/TonCenterSendMessageResult.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, org.ton.sdk.toncenter.model/TonCenterSendMessageResult) // org.ton.sdk.toncenter.model/TonCenterSendMessageResult.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;org.ton.sdk.toncenter.model.TonCenterSendMessageResult){}[0]
    }

    final object Companion { // org.ton.sdk.toncenter.model/TonCenterSendMessageResult.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<org.ton.sdk.toncenter.model/TonCenterSendMessageResult> // org.ton.sdk.toncenter.model/TonCenterSendMessageResult.Companion.serializer|serializer(){}[0]
    }
}

final class org.ton.sdk.toncenter.model/TonCenterTokenInfo { // org.ton.sdk.toncenter.model/TonCenterTokenInfo|null[0]
    constructor <init>(kotlin/Boolean, kotlin/String, kotlin/String, kotlin/String, kotlin/String, kotlin/String, kotlin.collections/Map<org.ton.sdk.blockchain.address/AddressStd, kotlin/String>) // org.ton.sdk.toncenter.model/TonCenterTokenInfo.<init>|<init>(kotlin.Boolean;kotlin.String;kotlin.String;kotlin.String;kotlin.String;kotlin.String;kotlin.collections.Map<org.ton.sdk.blockchain.address.AddressStd,kotlin.String>){}[0]

    final val description // org.ton.sdk.toncenter.model/TonCenterTokenInfo.description|{}description[0]
        final fun <get-description>(): kotlin/String // org.ton.sdk.toncenter.model/TonCenterTokenInfo.description.<get-description>|<get-description>(){}[0]
    final val extra // org.ton.sdk.toncenter.model/TonCenterTokenInfo.extra|{}extra[0]
        final fun <get-extra>(): kotlin.collections/Map<org.ton.sdk.blockchain.address/AddressStd, kotlin/String> // org.ton.sdk.toncenter.model/TonCenterTokenInfo.extra.<get-extra>|<get-extra>(){}[0]
    final val image // org.ton.sdk.toncenter.model/TonCenterTokenInfo.image|{}image[0]
        final fun <get-image>(): kotlin/String // org.ton.sdk.toncenter.model/TonCenterTokenInfo.image.<get-image>|<get-image>(){}[0]
    final val name // org.ton.sdk.toncenter.model/TonCenterTokenInfo.name|{}name[0]
        final fun <get-name>(): kotlin/String // org.ton.sdk.toncenter.model/TonCenterTokenInfo.name.<get-name>|<get-name>(){}[0]
    final val symbol // org.ton.sdk.toncenter.model/TonCenterTokenInfo.symbol|{}symbol[0]
        final fun <get-symbol>(): kotlin/String // org.ton.sdk.toncenter.model/TonCenterTokenInfo.symbol.<get-symbol>|<get-symbol>(){}[0]
    final val type // org.ton.sdk.toncenter.model/TonCenterTokenInfo.type|{}type[0]
        final fun <get-type>(): kotlin/String // org.ton.sdk.toncenter.model/TonCenterTokenInfo.type.<get-type>|<get-type>(){}[0]
    final val valid // org.ton.sdk.toncenter.model/TonCenterTokenInfo.valid|{}valid[0]
        final fun <get-valid>(): kotlin/Boolean // org.ton.sdk.toncenter.model/TonCenterTokenInfo.valid.<get-valid>|<get-valid>(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<org.ton.sdk.toncenter.model/TonCenterTokenInfo> { // org.ton.sdk.toncenter.model/TonCenterTokenInfo.$serializer|null[0]
        final val descriptor // org.ton.sdk.toncenter.model/TonCenterTokenInfo.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // org.ton.sdk.toncenter.model/TonCenterTokenInfo.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // org.ton.sdk.toncenter.model/TonCenterTokenInfo.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): org.ton.sdk.toncenter.model/TonCenterTokenInfo // org.ton.sdk.toncenter.model/TonCenterTokenInfo.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, org.ton.sdk.toncenter.model/TonCenterTokenInfo) // org.ton.sdk.toncenter.model/TonCenterTokenInfo.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;org.ton.sdk.toncenter.model.TonCenterTokenInfo){}[0]
    }

    final object Companion { // org.ton.sdk.toncenter.model/TonCenterTokenInfo.Companion|null[0]
        final val $childSerializers // org.ton.sdk.toncenter.model/TonCenterTokenInfo.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<org.ton.sdk.toncenter.model/TonCenterTokenInfo> // org.ton.sdk.toncenter.model/TonCenterTokenInfo.Companion.serializer|serializer(){}[0]
    }
}

final class org.ton.sdk.toncenter.model/TonCenterTransaction { // org.ton.sdk.toncenter.model/TonCenterTransaction|null[0]
    constructor <init>(org.ton.sdk.blockchain.address/AddressStd, org.ton.sdk.crypto/HashBytes, kotlin/Long, kotlin/Long, kotlin/Int, org.ton.sdk.crypto/HashBytes? = ..., org.ton.sdk.crypto/HashBytes, kotlin/Long, org.ton.sdk.blockchain.account/AccountStatus, org.ton.sdk.blockchain.account/AccountStatus, org.ton.sdk.blockchain.currency/Coins, org.ton.sdk.blockchain.currency/ExtraCurrencyCollection, org.ton.sdk.blockchain.transaction/TransactionDescription, org.ton.sdk.toncenter.model/TonCenterBlockId, org.ton.sdk.toncenter.model/TonCenterMessage?, kotlin.collections/List<org.ton.sdk.toncenter.model/TonCenterMessage>, org.ton.sdk.toncenter.model/TonCenterAccountState, org.ton.sdk.toncenter.model/TonCenterAccountState, kotlin/Boolean) // org.ton.sdk.toncenter.model/TonCenterTransaction.<init>|<init>(org.ton.sdk.blockchain.address.AddressStd;org.ton.sdk.crypto.HashBytes;kotlin.Long;kotlin.Long;kotlin.Int;org.ton.sdk.crypto.HashBytes?;org.ton.sdk.crypto.HashBytes;kotlin.Long;org.ton.sdk.blockchain.account.AccountStatus;org.ton.sdk.blockchain.account.AccountStatus;org.ton.sdk.blockchain.currency.Coins;org.ton.sdk.blockchain.currency.ExtraCurrencyCollection;org.ton.sdk.blockchain.transaction.TransactionDescription;org.ton.sdk.toncenter.model.TonCenterBlockId;org.ton.sdk.toncenter.model.TonCenterMessage?;kotlin.collections.List<org.ton.sdk.toncenter.model.TonCenterMessage>;org.ton.sdk.toncenter.model.TonCenterAccountState;org.ton.sdk.toncenter.model.TonCenterAccountState;kotlin.Boolean){}[0]

    final val account // org.ton.sdk.toncenter.model/TonCenterTransaction.account|{}account[0]
        final fun <get-account>(): org.ton.sdk.blockchain.address/AddressStd // org.ton.sdk.toncenter.model/TonCenterTransaction.account.<get-account>|<get-account>(){}[0]
    final val accountStateAfter // org.ton.sdk.toncenter.model/TonCenterTransaction.accountStateAfter|{}accountStateAfter[0]
        final fun <get-accountStateAfter>(): org.ton.sdk.toncenter.model/TonCenterAccountState // org.ton.sdk.toncenter.model/TonCenterTransaction.accountStateAfter.<get-accountStateAfter>|<get-accountStateAfter>(){}[0]
    final val accountStateBefore // org.ton.sdk.toncenter.model/TonCenterTransaction.accountStateBefore|{}accountStateBefore[0]
        final fun <get-accountStateBefore>(): org.ton.sdk.toncenter.model/TonCenterAccountState // org.ton.sdk.toncenter.model/TonCenterTransaction.accountStateBefore.<get-accountStateBefore>|<get-accountStateBefore>(){}[0]
    final val blockRef // org.ton.sdk.toncenter.model/TonCenterTransaction.blockRef|{}blockRef[0]
        final fun <get-blockRef>(): org.ton.sdk.toncenter.model/TonCenterBlockId // org.ton.sdk.toncenter.model/TonCenterTransaction.blockRef.<get-blockRef>|<get-blockRef>(){}[0]
    final val description // org.ton.sdk.toncenter.model/TonCenterTransaction.description|{}description[0]
        final fun <get-description>(): org.ton.sdk.blockchain.transaction/TransactionDescription // org.ton.sdk.toncenter.model/TonCenterTransaction.description.<get-description>|<get-description>(){}[0]
    final val emulated // org.ton.sdk.toncenter.model/TonCenterTransaction.emulated|{}emulated[0]
        final fun <get-emulated>(): kotlin/Boolean // org.ton.sdk.toncenter.model/TonCenterTransaction.emulated.<get-emulated>|<get-emulated>(){}[0]
    final val endStatus // org.ton.sdk.toncenter.model/TonCenterTransaction.endStatus|{}endStatus[0]
        final fun <get-endStatus>(): org.ton.sdk.blockchain.account/AccountStatus // org.ton.sdk.toncenter.model/TonCenterTransaction.endStatus.<get-endStatus>|<get-endStatus>(){}[0]
    final val hash // org.ton.sdk.toncenter.model/TonCenterTransaction.hash|{}hash[0]
        final fun <get-hash>(): org.ton.sdk.crypto/HashBytes // org.ton.sdk.toncenter.model/TonCenterTransaction.hash.<get-hash>|<get-hash>(){}[0]
    final val inMsg // org.ton.sdk.toncenter.model/TonCenterTransaction.inMsg|{}inMsg[0]
        final fun <get-inMsg>(): org.ton.sdk.toncenter.model/TonCenterMessage? // org.ton.sdk.toncenter.model/TonCenterTransaction.inMsg.<get-inMsg>|<get-inMsg>(){}[0]
    final val lt // org.ton.sdk.toncenter.model/TonCenterTransaction.lt|{}lt[0]
        final fun <get-lt>(): kotlin/Long // org.ton.sdk.toncenter.model/TonCenterTransaction.lt.<get-lt>|<get-lt>(){}[0]
    final val mcBlockSeqno // org.ton.sdk.toncenter.model/TonCenterTransaction.mcBlockSeqno|{}mcBlockSeqno[0]
        final fun <get-mcBlockSeqno>(): kotlin/Int // org.ton.sdk.toncenter.model/TonCenterTransaction.mcBlockSeqno.<get-mcBlockSeqno>|<get-mcBlockSeqno>(){}[0]
    final val now // org.ton.sdk.toncenter.model/TonCenterTransaction.now|{}now[0]
        final fun <get-now>(): kotlin/Long // org.ton.sdk.toncenter.model/TonCenterTransaction.now.<get-now>|<get-now>(){}[0]
    final val origStatus // org.ton.sdk.toncenter.model/TonCenterTransaction.origStatus|{}origStatus[0]
        final fun <get-origStatus>(): org.ton.sdk.blockchain.account/AccountStatus // org.ton.sdk.toncenter.model/TonCenterTransaction.origStatus.<get-origStatus>|<get-origStatus>(){}[0]
    final val outMsgs // org.ton.sdk.toncenter.model/TonCenterTransaction.outMsgs|{}outMsgs[0]
        final fun <get-outMsgs>(): kotlin.collections/List<org.ton.sdk.toncenter.model/TonCenterMessage> // org.ton.sdk.toncenter.model/TonCenterTransaction.outMsgs.<get-outMsgs>|<get-outMsgs>(){}[0]
    final val prevTransHash // org.ton.sdk.toncenter.model/TonCenterTransaction.prevTransHash|{}prevTransHash[0]
        final fun <get-prevTransHash>(): org.ton.sdk.crypto/HashBytes // org.ton.sdk.toncenter.model/TonCenterTransaction.prevTransHash.<get-prevTransHash>|<get-prevTransHash>(){}[0]
    final val prevTransLt // org.ton.sdk.toncenter.model/TonCenterTransaction.prevTransLt|{}prevTransLt[0]
        final fun <get-prevTransLt>(): kotlin/Long // org.ton.sdk.toncenter.model/TonCenterTransaction.prevTransLt.<get-prevTransLt>|<get-prevTransLt>(){}[0]
    final val totalFees // org.ton.sdk.toncenter.model/TonCenterTransaction.totalFees|{}totalFees[0]
        final fun <get-totalFees>(): org.ton.sdk.blockchain.currency/Coins // org.ton.sdk.toncenter.model/TonCenterTransaction.totalFees.<get-totalFees>|<get-totalFees>(){}[0]
    final val totalFeesExtraCurrencies // org.ton.sdk.toncenter.model/TonCenterTransaction.totalFeesExtraCurrencies|{}totalFeesExtraCurrencies[0]
        final fun <get-totalFeesExtraCurrencies>(): org.ton.sdk.blockchain.currency/ExtraCurrencyCollection // org.ton.sdk.toncenter.model/TonCenterTransaction.totalFeesExtraCurrencies.<get-totalFeesExtraCurrencies>|<get-totalFeesExtraCurrencies>(){}[0]
    final val traceId // org.ton.sdk.toncenter.model/TonCenterTransaction.traceId|{}traceId[0]
        final fun <get-traceId>(): org.ton.sdk.crypto/HashBytes? // org.ton.sdk.toncenter.model/TonCenterTransaction.traceId.<get-traceId>|<get-traceId>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // org.ton.sdk.toncenter.model/TonCenterTransaction.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // org.ton.sdk.toncenter.model/TonCenterTransaction.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // org.ton.sdk.toncenter.model/TonCenterTransaction.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<org.ton.sdk.toncenter.model/TonCenterTransaction> { // org.ton.sdk.toncenter.model/TonCenterTransaction.$serializer|null[0]
        final val descriptor // org.ton.sdk.toncenter.model/TonCenterTransaction.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // org.ton.sdk.toncenter.model/TonCenterTransaction.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // org.ton.sdk.toncenter.model/TonCenterTransaction.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): org.ton.sdk.toncenter.model/TonCenterTransaction // org.ton.sdk.toncenter.model/TonCenterTransaction.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, org.ton.sdk.toncenter.model/TonCenterTransaction) // org.ton.sdk.toncenter.model/TonCenterTransaction.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;org.ton.sdk.toncenter.model.TonCenterTransaction){}[0]
    }

    final object Companion { // org.ton.sdk.toncenter.model/TonCenterTransaction.Companion|null[0]
        final val $childSerializers // org.ton.sdk.toncenter.model/TonCenterTransaction.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<org.ton.sdk.toncenter.model/TonCenterTransaction> // org.ton.sdk.toncenter.model/TonCenterTransaction.Companion.serializer|serializer(){}[0]
    }
}

final class org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder { // org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder|null[0]
    constructor <init>() // org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder.<init>|<init>(){}[0]

    final var account // org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder.account|{}account[0]
        final fun <get-account>(): kotlin.collections/MutableList<org.ton.sdk.blockchain.address/AddressStd> // org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder.account.<get-account>|<get-account>(){}[0]
        final fun <set-account>(kotlin.collections/MutableList<org.ton.sdk.blockchain.address/AddressStd>) // org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder.account.<set-account>|<set-account>(kotlin.collections.MutableList<org.ton.sdk.blockchain.address.AddressStd>){}[0]
    final var endLt // org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder.endLt|{}endLt[0]
        final fun <get-endLt>(): kotlin/Long? // org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder.endLt.<get-endLt>|<get-endLt>(){}[0]
        final fun <set-endLt>(kotlin/Long?) // org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder.endLt.<set-endLt>|<set-endLt>(kotlin.Long?){}[0]
    final var endUTime // org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder.endUTime|{}endUTime[0]
        final fun <get-endUTime>(): kotlin/Long? // org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder.endUTime.<get-endUTime>|<get-endUTime>(){}[0]
        final fun <set-endUTime>(kotlin/Long?) // org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder.endUTime.<set-endUTime>|<set-endUTime>(kotlin.Long?){}[0]
    final var excludeAccount // org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder.excludeAccount|{}excludeAccount[0]
        final fun <get-excludeAccount>(): kotlin.collections/MutableList<org.ton.sdk.blockchain.address/AddressStd> // org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder.excludeAccount.<get-excludeAccount>|<get-excludeAccount>(){}[0]
        final fun <set-excludeAccount>(kotlin.collections/MutableList<org.ton.sdk.blockchain.address/AddressStd>) // org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder.excludeAccount.<set-excludeAccount>|<set-excludeAccount>(kotlin.collections.MutableList<org.ton.sdk.blockchain.address.AddressStd>){}[0]
    final var hash // org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder.hash|{}hash[0]
        final fun <get-hash>(): org.ton.sdk.crypto/HashBytes? // org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder.hash.<get-hash>|<get-hash>(){}[0]
        final fun <set-hash>(org.ton.sdk.crypto/HashBytes?) // org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder.hash.<set-hash>|<set-hash>(org.ton.sdk.crypto.HashBytes?){}[0]
    final var limit // org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder.limit|{}limit[0]
        final fun <get-limit>(): kotlin/Int? // org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder.limit.<get-limit>|<get-limit>(){}[0]
        final fun <set-limit>(kotlin/Int?) // org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder.limit.<set-limit>|<set-limit>(kotlin.Int?){}[0]
    final var lt // org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder.lt|{}lt[0]
        final fun <get-lt>(): kotlin/Long? // org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder.lt.<get-lt>|<get-lt>(){}[0]
        final fun <set-lt>(kotlin/Long?) // org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder.lt.<set-lt>|<set-lt>(kotlin.Long?){}[0]
    final var offset // org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder.offset|{}offset[0]
        final fun <get-offset>(): kotlin/Int? // org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder.offset.<get-offset>|<get-offset>(){}[0]
        final fun <set-offset>(kotlin/Int?) // org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder.offset.<set-offset>|<set-offset>(kotlin.Int?){}[0]
    final var seqno // org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder.seqno|{}seqno[0]
        final fun <get-seqno>(): kotlin/Int? // org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder.seqno.<get-seqno>|<get-seqno>(){}[0]
        final fun <set-seqno>(kotlin/Int?) // org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder.seqno.<set-seqno>|<set-seqno>(kotlin.Int?){}[0]
    final var shard // org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder.shard|{}shard[0]
        final fun <get-shard>(): kotlin/Long? // org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder.shard.<get-shard>|<get-shard>(){}[0]
        final fun <set-shard>(kotlin/Long?) // org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder.shard.<set-shard>|<set-shard>(kotlin.Long?){}[0]
    final var startLt // org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder.startLt|{}startLt[0]
        final fun <get-startLt>(): kotlin/Long? // org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder.startLt.<get-startLt>|<get-startLt>(){}[0]
        final fun <set-startLt>(kotlin/Long?) // org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder.startLt.<set-startLt>|<set-startLt>(kotlin.Long?){}[0]
    final var startUTime // org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder.startUTime|{}startUTime[0]
        final fun <get-startUTime>(): kotlin/Long? // org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder.startUTime.<get-startUTime>|<get-startUTime>(){}[0]
        final fun <set-startUTime>(kotlin/Long?) // org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder.startUTime.<set-startUTime>|<set-startUTime>(kotlin.Long?){}[0]
    final var workchain // org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder.workchain|{}workchain[0]
        final fun <get-workchain>(): kotlin/Int? // org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder.workchain.<get-workchain>|<get-workchain>(){}[0]
        final fun <set-workchain>(kotlin/Int?) // org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder.workchain.<set-workchain>|<set-workchain>(kotlin.Int?){}[0]

    final fun address(kotlin.collections/Collection<org.ton.sdk.blockchain.address/AddressStd>): org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder // org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder.address|address(kotlin.collections.Collection<org.ton.sdk.blockchain.address.AddressStd>){}[0]
    final fun address(kotlin/Array<out org.ton.sdk.blockchain.address/AddressStd>...): org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder // org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder.address|address(kotlin.Array<out|org.ton.sdk.blockchain.address.AddressStd>...){}[0]
    final fun endLt(kotlin/Long): org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder // org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder.endLt|endLt(kotlin.Long){}[0]
    final fun endUTime(kotlin/Long): org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder // org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder.endUTime|endUTime(kotlin.Long){}[0]
    final fun excludeAddress(kotlin.collections/Collection<org.ton.sdk.blockchain.address/AddressStd>): org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder // org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder.excludeAddress|excludeAddress(kotlin.collections.Collection<org.ton.sdk.blockchain.address.AddressStd>){}[0]
    final fun excludeAddress(kotlin/Array<out org.ton.sdk.blockchain.address/AddressStd>...): org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder // org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder.excludeAddress|excludeAddress(kotlin.Array<out|org.ton.sdk.blockchain.address.AddressStd>...){}[0]
    final fun hash(org.ton.sdk.crypto/HashBytes): org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder // org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder.hash|hash(org.ton.sdk.crypto.HashBytes){}[0]
    final fun limit(kotlin/Int): org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder // org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder.limit|limit(kotlin.Int){}[0]
    final fun lt(kotlin/Long): org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder // org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder.lt|lt(kotlin.Long){}[0]
    final fun offset(kotlin/Int): org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder // org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder.offset|offset(kotlin.Int){}[0]
    final fun seqno(kotlin/Int): org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder // org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder.seqno|seqno(kotlin.Int){}[0]
    final fun shard(kotlin/Long): org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder // org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder.shard|shard(kotlin.Long){}[0]
    final fun startLt(kotlin/Long): org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder // org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder.startLt|startLt(kotlin.Long){}[0]
    final fun startUTime(kotlin/Long): org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder // org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder.startUTime|startUTime(kotlin.Long){}[0]
    final fun workchain(kotlin/Int): org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder // org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder.workchain|workchain(kotlin.Int){}[0]
}

final class org.ton.sdk.toncenter.model/TonCenterTransactionsResponse { // org.ton.sdk.toncenter.model/TonCenterTransactionsResponse|null[0]
    constructor <init>(kotlin.collections/List<org.ton.sdk.toncenter.model/TonCenterTransaction>, org.ton.sdk.toncenter.model/TonCenterAddressBook) // org.ton.sdk.toncenter.model/TonCenterTransactionsResponse.<init>|<init>(kotlin.collections.List<org.ton.sdk.toncenter.model.TonCenterTransaction>;org.ton.sdk.toncenter.model.TonCenterAddressBook){}[0]

    final val addressBook // org.ton.sdk.toncenter.model/TonCenterTransactionsResponse.addressBook|{}addressBook[0]
        final fun <get-addressBook>(): org.ton.sdk.toncenter.model/TonCenterAddressBook // org.ton.sdk.toncenter.model/TonCenterTransactionsResponse.addressBook.<get-addressBook>|<get-addressBook>(){}[0]
    final val transactions // org.ton.sdk.toncenter.model/TonCenterTransactionsResponse.transactions|{}transactions[0]
        final fun <get-transactions>(): kotlin.collections/List<org.ton.sdk.toncenter.model/TonCenterTransaction> // org.ton.sdk.toncenter.model/TonCenterTransactionsResponse.transactions.<get-transactions>|<get-transactions>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // org.ton.sdk.toncenter.model/TonCenterTransactionsResponse.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // org.ton.sdk.toncenter.model/TonCenterTransactionsResponse.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // org.ton.sdk.toncenter.model/TonCenterTransactionsResponse.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<org.ton.sdk.toncenter.model/TonCenterTransactionsResponse> { // org.ton.sdk.toncenter.model/TonCenterTransactionsResponse.$serializer|null[0]
        final val descriptor // org.ton.sdk.toncenter.model/TonCenterTransactionsResponse.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // org.ton.sdk.toncenter.model/TonCenterTransactionsResponse.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // org.ton.sdk.toncenter.model/TonCenterTransactionsResponse.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): org.ton.sdk.toncenter.model/TonCenterTransactionsResponse // org.ton.sdk.toncenter.model/TonCenterTransactionsResponse.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, org.ton.sdk.toncenter.model/TonCenterTransactionsResponse) // org.ton.sdk.toncenter.model/TonCenterTransactionsResponse.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;org.ton.sdk.toncenter.model.TonCenterTransactionsResponse){}[0]
    }

    final object Companion { // org.ton.sdk.toncenter.model/TonCenterTransactionsResponse.Companion|null[0]
        final val $childSerializers // org.ton.sdk.toncenter.model/TonCenterTransactionsResponse.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<org.ton.sdk.toncenter.model/TonCenterTransactionsResponse> // org.ton.sdk.toncenter.model/TonCenterTransactionsResponse.Companion.serializer|serializer(){}[0]
    }
}

final class org.ton.sdk.toncenter.model/TonCenterWalletState { // org.ton.sdk.toncenter.model/TonCenterWalletState|null[0]
    constructor <init>(org.ton.sdk.blockchain.address/AddressStd, kotlin/Boolean, kotlin/String? = ..., kotlin/Int? = ..., kotlin/Int? = ..., org.ton.sdk.blockchain.currency/Coins? = ..., org.ton.sdk.blockchain.currency/ExtraCurrencyCollection? = ..., kotlin/Boolean? = ..., kotlin/String? = ..., org.ton.sdk.crypto/HashBytes? = ..., org.ton.sdk.crypto/HashBytes, kotlin/Long) // org.ton.sdk.toncenter.model/TonCenterWalletState.<init>|<init>(org.ton.sdk.blockchain.address.AddressStd;kotlin.Boolean;kotlin.String?;kotlin.Int?;kotlin.Int?;org.ton.sdk.blockchain.currency.Coins?;org.ton.sdk.blockchain.currency.ExtraCurrencyCollection?;kotlin.Boolean?;kotlin.String?;org.ton.sdk.crypto.HashBytes?;org.ton.sdk.crypto.HashBytes;kotlin.Long){}[0]

    final val address // org.ton.sdk.toncenter.model/TonCenterWalletState.address|{}address[0]
        final fun <get-address>(): org.ton.sdk.blockchain.address/AddressStd // org.ton.sdk.toncenter.model/TonCenterWalletState.address.<get-address>|<get-address>(){}[0]
    final val balance // org.ton.sdk.toncenter.model/TonCenterWalletState.balance|{}balance[0]
        final fun <get-balance>(): org.ton.sdk.blockchain.currency/Coins? // org.ton.sdk.toncenter.model/TonCenterWalletState.balance.<get-balance>|<get-balance>(){}[0]
    final val codeHash // org.ton.sdk.toncenter.model/TonCenterWalletState.codeHash|{}codeHash[0]
        final fun <get-codeHash>(): org.ton.sdk.crypto/HashBytes? // org.ton.sdk.toncenter.model/TonCenterWalletState.codeHash.<get-codeHash>|<get-codeHash>(){}[0]
    final val extraCurrencies // org.ton.sdk.toncenter.model/TonCenterWalletState.extraCurrencies|{}extraCurrencies[0]
        final fun <get-extraCurrencies>(): org.ton.sdk.blockchain.currency/ExtraCurrencyCollection? // org.ton.sdk.toncenter.model/TonCenterWalletState.extraCurrencies.<get-extraCurrencies>|<get-extraCurrencies>(){}[0]
    final val isSignatureAllowed // org.ton.sdk.toncenter.model/TonCenterWalletState.isSignatureAllowed|{}isSignatureAllowed[0]
        final fun <get-isSignatureAllowed>(): kotlin/Boolean? // org.ton.sdk.toncenter.model/TonCenterWalletState.isSignatureAllowed.<get-isSignatureAllowed>|<get-isSignatureAllowed>(){}[0]
    final val isWallet // org.ton.sdk.toncenter.model/TonCenterWalletState.isWallet|{}isWallet[0]
        final fun <get-isWallet>(): kotlin/Boolean // org.ton.sdk.toncenter.model/TonCenterWalletState.isWallet.<get-isWallet>|<get-isWallet>(){}[0]
    final val lastTransactionHash // org.ton.sdk.toncenter.model/TonCenterWalletState.lastTransactionHash|{}lastTransactionHash[0]
        final fun <get-lastTransactionHash>(): org.ton.sdk.crypto/HashBytes // org.ton.sdk.toncenter.model/TonCenterWalletState.lastTransactionHash.<get-lastTransactionHash>|<get-lastTransactionHash>(){}[0]
    final val lastTransactionLt // org.ton.sdk.toncenter.model/TonCenterWalletState.lastTransactionLt|{}lastTransactionLt[0]
        final fun <get-lastTransactionLt>(): kotlin/Long // org.ton.sdk.toncenter.model/TonCenterWalletState.lastTransactionLt.<get-lastTransactionLt>|<get-lastTransactionLt>(){}[0]
    final val seqno // org.ton.sdk.toncenter.model/TonCenterWalletState.seqno|{}seqno[0]
        final fun <get-seqno>(): kotlin/Int? // org.ton.sdk.toncenter.model/TonCenterWalletState.seqno.<get-seqno>|<get-seqno>(){}[0]
    final val status // org.ton.sdk.toncenter.model/TonCenterWalletState.status|{}status[0]
        final fun <get-status>(): kotlin/String? // org.ton.sdk.toncenter.model/TonCenterWalletState.status.<get-status>|<get-status>(){}[0]
    final val walletId // org.ton.sdk.toncenter.model/TonCenterWalletState.walletId|{}walletId[0]
        final fun <get-walletId>(): kotlin/Int? // org.ton.sdk.toncenter.model/TonCenterWalletState.walletId.<get-walletId>|<get-walletId>(){}[0]
    final val walletType // org.ton.sdk.toncenter.model/TonCenterWalletState.walletType|{}walletType[0]
        final fun <get-walletType>(): kotlin/String? // org.ton.sdk.toncenter.model/TonCenterWalletState.walletType.<get-walletType>|<get-walletType>(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<org.ton.sdk.toncenter.model/TonCenterWalletState> { // org.ton.sdk.toncenter.model/TonCenterWalletState.$serializer|null[0]
        final val descriptor // org.ton.sdk.toncenter.model/TonCenterWalletState.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // org.ton.sdk.toncenter.model/TonCenterWalletState.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // org.ton.sdk.toncenter.model/TonCenterWalletState.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): org.ton.sdk.toncenter.model/TonCenterWalletState // org.ton.sdk.toncenter.model/TonCenterWalletState.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, org.ton.sdk.toncenter.model/TonCenterWalletState) // org.ton.sdk.toncenter.model/TonCenterWalletState.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;org.ton.sdk.toncenter.model.TonCenterWalletState){}[0]
    }

    final object Companion { // org.ton.sdk.toncenter.model/TonCenterWalletState.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<org.ton.sdk.toncenter.model/TonCenterWalletState> // org.ton.sdk.toncenter.model/TonCenterWalletState.Companion.serializer|serializer(){}[0]
    }
}

final class org.ton.sdk.toncenter.model/TonCenterWalletStatesResponse { // org.ton.sdk.toncenter.model/TonCenterWalletStatesResponse|null[0]
    constructor <init>(kotlin.collections/List<org.ton.sdk.toncenter.model/TonCenterWalletState>, org.ton.sdk.toncenter.model/TonCenterAddressBook, org.ton.sdk.toncenter.model/TonCenterMetadata) // org.ton.sdk.toncenter.model/TonCenterWalletStatesResponse.<init>|<init>(kotlin.collections.List<org.ton.sdk.toncenter.model.TonCenterWalletState>;org.ton.sdk.toncenter.model.TonCenterAddressBook;org.ton.sdk.toncenter.model.TonCenterMetadata){}[0]

    final val addressBook // org.ton.sdk.toncenter.model/TonCenterWalletStatesResponse.addressBook|{}addressBook[0]
        final fun <get-addressBook>(): org.ton.sdk.toncenter.model/TonCenterAddressBook // org.ton.sdk.toncenter.model/TonCenterWalletStatesResponse.addressBook.<get-addressBook>|<get-addressBook>(){}[0]
    final val metadata // org.ton.sdk.toncenter.model/TonCenterWalletStatesResponse.metadata|{}metadata[0]
        final fun <get-metadata>(): org.ton.sdk.toncenter.model/TonCenterMetadata // org.ton.sdk.toncenter.model/TonCenterWalletStatesResponse.metadata.<get-metadata>|<get-metadata>(){}[0]
    final val wallets // org.ton.sdk.toncenter.model/TonCenterWalletStatesResponse.wallets|{}wallets[0]
        final fun <get-wallets>(): kotlin.collections/List<org.ton.sdk.toncenter.model/TonCenterWalletState> // org.ton.sdk.toncenter.model/TonCenterWalletStatesResponse.wallets.<get-wallets>|<get-wallets>(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<org.ton.sdk.toncenter.model/TonCenterWalletStatesResponse> { // org.ton.sdk.toncenter.model/TonCenterWalletStatesResponse.$serializer|null[0]
        final val descriptor // org.ton.sdk.toncenter.model/TonCenterWalletStatesResponse.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // org.ton.sdk.toncenter.model/TonCenterWalletStatesResponse.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // org.ton.sdk.toncenter.model/TonCenterWalletStatesResponse.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): org.ton.sdk.toncenter.model/TonCenterWalletStatesResponse // org.ton.sdk.toncenter.model/TonCenterWalletStatesResponse.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, org.ton.sdk.toncenter.model/TonCenterWalletStatesResponse) // org.ton.sdk.toncenter.model/TonCenterWalletStatesResponse.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;org.ton.sdk.toncenter.model.TonCenterWalletStatesResponse){}[0]
    }

    final object Companion { // org.ton.sdk.toncenter.model/TonCenterWalletStatesResponse.Companion|null[0]
        final val $childSerializers // org.ton.sdk.toncenter.model/TonCenterWalletStatesResponse.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<org.ton.sdk.toncenter.model/TonCenterWalletStatesResponse> // org.ton.sdk.toncenter.model/TonCenterWalletStatesResponse.Companion.serializer|serializer(){}[0]
    }
}

final class org.ton.sdk.toncenter.model/TonCenterWalletType { // org.ton.sdk.toncenter.model/TonCenterWalletType|null[0]
    final val name // org.ton.sdk.toncenter.model/TonCenterWalletType.name|{}name[0]
        final fun <get-name>(): kotlin/String // org.ton.sdk.toncenter.model/TonCenterWalletType.name.<get-name>|<get-name>(){}[0]

    final object Companion { // org.ton.sdk.toncenter.model/TonCenterWalletType.Companion|null[0]
        final val WALLET_V1_R1 // org.ton.sdk.toncenter.model/TonCenterWalletType.Companion.WALLET_V1_R1|{}WALLET_V1_R1[0]
            final fun <get-WALLET_V1_R1>(): org.ton.sdk.toncenter.model/TonCenterWalletType // org.ton.sdk.toncenter.model/TonCenterWalletType.Companion.WALLET_V1_R1.<get-WALLET_V1_R1>|<get-WALLET_V1_R1>(){}[0]
        final val WALLET_V1_R2 // org.ton.sdk.toncenter.model/TonCenterWalletType.Companion.WALLET_V1_R2|{}WALLET_V1_R2[0]
            final fun <get-WALLET_V1_R2>(): org.ton.sdk.toncenter.model/TonCenterWalletType // org.ton.sdk.toncenter.model/TonCenterWalletType.Companion.WALLET_V1_R2.<get-WALLET_V1_R2>|<get-WALLET_V1_R2>(){}[0]
        final val WALLET_V1_R3 // org.ton.sdk.toncenter.model/TonCenterWalletType.Companion.WALLET_V1_R3|{}WALLET_V1_R3[0]
            final fun <get-WALLET_V1_R3>(): org.ton.sdk.toncenter.model/TonCenterWalletType // org.ton.sdk.toncenter.model/TonCenterWalletType.Companion.WALLET_V1_R3.<get-WALLET_V1_R3>|<get-WALLET_V1_R3>(){}[0]
        final val WALLET_V2_R1 // org.ton.sdk.toncenter.model/TonCenterWalletType.Companion.WALLET_V2_R1|{}WALLET_V2_R1[0]
            final fun <get-WALLET_V2_R1>(): org.ton.sdk.toncenter.model/TonCenterWalletType // org.ton.sdk.toncenter.model/TonCenterWalletType.Companion.WALLET_V2_R1.<get-WALLET_V2_R1>|<get-WALLET_V2_R1>(){}[0]
        final val WALLET_V2_R2 // org.ton.sdk.toncenter.model/TonCenterWalletType.Companion.WALLET_V2_R2|{}WALLET_V2_R2[0]
            final fun <get-WALLET_V2_R2>(): org.ton.sdk.toncenter.model/TonCenterWalletType // org.ton.sdk.toncenter.model/TonCenterWalletType.Companion.WALLET_V2_R2.<get-WALLET_V2_R2>|<get-WALLET_V2_R2>(){}[0]
        final val WALLET_V3_R1 // org.ton.sdk.toncenter.model/TonCenterWalletType.Companion.WALLET_V3_R1|{}WALLET_V3_R1[0]
            final fun <get-WALLET_V3_R1>(): org.ton.sdk.toncenter.model/TonCenterWalletType // org.ton.sdk.toncenter.model/TonCenterWalletType.Companion.WALLET_V3_R1.<get-WALLET_V3_R1>|<get-WALLET_V3_R1>(){}[0]
        final val WALLET_V3_R2 // org.ton.sdk.toncenter.model/TonCenterWalletType.Companion.WALLET_V3_R2|{}WALLET_V3_R2[0]
            final fun <get-WALLET_V3_R2>(): org.ton.sdk.toncenter.model/TonCenterWalletType // org.ton.sdk.toncenter.model/TonCenterWalletType.Companion.WALLET_V3_R2.<get-WALLET_V3_R2>|<get-WALLET_V3_R2>(){}[0]
        final val WALLET_V4_R1 // org.ton.sdk.toncenter.model/TonCenterWalletType.Companion.WALLET_V4_R1|{}WALLET_V4_R1[0]
            final fun <get-WALLET_V4_R1>(): org.ton.sdk.toncenter.model/TonCenterWalletType // org.ton.sdk.toncenter.model/TonCenterWalletType.Companion.WALLET_V4_R1.<get-WALLET_V4_R1>|<get-WALLET_V4_R1>(){}[0]
        final val WALLET_V4_R2 // org.ton.sdk.toncenter.model/TonCenterWalletType.Companion.WALLET_V4_R2|{}WALLET_V4_R2[0]
            final fun <get-WALLET_V4_R2>(): org.ton.sdk.toncenter.model/TonCenterWalletType // org.ton.sdk.toncenter.model/TonCenterWalletType.Companion.WALLET_V4_R2.<get-WALLET_V4_R2>|<get-WALLET_V4_R2>(){}[0]
        final val WALLET_V5_BETA // org.ton.sdk.toncenter.model/TonCenterWalletType.Companion.WALLET_V5_BETA|{}WALLET_V5_BETA[0]
            final fun <get-WALLET_V5_BETA>(): org.ton.sdk.toncenter.model/TonCenterWalletType // org.ton.sdk.toncenter.model/TonCenterWalletType.Companion.WALLET_V5_BETA.<get-WALLET_V5_BETA>|<get-WALLET_V5_BETA>(){}[0]
        final val WALLET_V5_R1 // org.ton.sdk.toncenter.model/TonCenterWalletType.Companion.WALLET_V5_R1|{}WALLET_V5_R1[0]
            final fun <get-WALLET_V5_R1>(): org.ton.sdk.toncenter.model/TonCenterWalletType // org.ton.sdk.toncenter.model/TonCenterWalletType.Companion.WALLET_V5_R1.<get-WALLET_V5_R1>|<get-WALLET_V5_R1>(){}[0]

        final fun byName(kotlin/String): org.ton.sdk.toncenter.model/TonCenterWalletType // org.ton.sdk.toncenter.model/TonCenterWalletType.Companion.byName|byName(kotlin.String){}[0]
        final fun serializer(): kotlinx.serialization/KSerializer<org.ton.sdk.toncenter.model/TonCenterWalletType> // org.ton.sdk.toncenter.model/TonCenterWalletType.Companion.serializer|serializer(){}[0]
    }
}

sealed class <#A: kotlin/Any?> org.ton.sdk.toncenter.model/TonCenterStackEntry { // org.ton.sdk.toncenter.model/TonCenterStackEntry|null[0]
    abstract val value // org.ton.sdk.toncenter.model/TonCenterStackEntry.value|{}value[0]
        abstract fun <get-value>(): #A // org.ton.sdk.toncenter.model/TonCenterStackEntry.value.<get-value>|<get-value>(){}[0]

    final class Cell : org.ton.sdk.toncenter.model/TonCenterStackEntry<kotlinx.io.bytestring/ByteString> { // org.ton.sdk.toncenter.model/TonCenterStackEntry.Cell|null[0]
        constructor <init>(kotlinx.io.bytestring/ByteString) // org.ton.sdk.toncenter.model/TonCenterStackEntry.Cell.<init>|<init>(kotlinx.io.bytestring.ByteString){}[0]

        final val value // org.ton.sdk.toncenter.model/TonCenterStackEntry.Cell.value|{}value[0]
            final fun <get-value>(): kotlinx.io.bytestring/ByteString // org.ton.sdk.toncenter.model/TonCenterStackEntry.Cell.value.<get-value>|<get-value>(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<org.ton.sdk.toncenter.model/TonCenterStackEntry.Cell> { // org.ton.sdk.toncenter.model/TonCenterStackEntry.Cell.$serializer|null[0]
            final val descriptor // org.ton.sdk.toncenter.model/TonCenterStackEntry.Cell.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // org.ton.sdk.toncenter.model/TonCenterStackEntry.Cell.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // org.ton.sdk.toncenter.model/TonCenterStackEntry.Cell.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): org.ton.sdk.toncenter.model/TonCenterStackEntry.Cell // org.ton.sdk.toncenter.model/TonCenterStackEntry.Cell.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, org.ton.sdk.toncenter.model/TonCenterStackEntry.Cell) // org.ton.sdk.toncenter.model/TonCenterStackEntry.Cell.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;org.ton.sdk.toncenter.model.TonCenterStackEntry.Cell){}[0]
        }

        final object Companion { // org.ton.sdk.toncenter.model/TonCenterStackEntry.Cell.Companion|null[0]
            final fun serializer(): kotlinx.serialization/KSerializer<org.ton.sdk.toncenter.model/TonCenterStackEntry.Cell> // org.ton.sdk.toncenter.model/TonCenterStackEntry.Cell.Companion.serializer|serializer(){}[0]
        }
    }

    final class Num : org.ton.sdk.toncenter.model/TonCenterStackEntry<com.ionspin.kotlin.bignum.integer/BigInteger> { // org.ton.sdk.toncenter.model/TonCenterStackEntry.Num|null[0]
        constructor <init>(com.ionspin.kotlin.bignum.integer/BigInteger) // org.ton.sdk.toncenter.model/TonCenterStackEntry.Num.<init>|<init>(com.ionspin.kotlin.bignum.integer.BigInteger){}[0]

        final val value // org.ton.sdk.toncenter.model/TonCenterStackEntry.Num.value|{}value[0]
            final fun <get-value>(): com.ionspin.kotlin.bignum.integer/BigInteger // org.ton.sdk.toncenter.model/TonCenterStackEntry.Num.value.<get-value>|<get-value>(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<org.ton.sdk.toncenter.model/TonCenterStackEntry.Num> { // org.ton.sdk.toncenter.model/TonCenterStackEntry.Num.$serializer|null[0]
            final val descriptor // org.ton.sdk.toncenter.model/TonCenterStackEntry.Num.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // org.ton.sdk.toncenter.model/TonCenterStackEntry.Num.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // org.ton.sdk.toncenter.model/TonCenterStackEntry.Num.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): org.ton.sdk.toncenter.model/TonCenterStackEntry.Num // org.ton.sdk.toncenter.model/TonCenterStackEntry.Num.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, org.ton.sdk.toncenter.model/TonCenterStackEntry.Num) // org.ton.sdk.toncenter.model/TonCenterStackEntry.Num.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;org.ton.sdk.toncenter.model.TonCenterStackEntry.Num){}[0]
        }

        final object Companion { // org.ton.sdk.toncenter.model/TonCenterStackEntry.Num.Companion|null[0]
            final fun serializer(): kotlinx.serialization/KSerializer<org.ton.sdk.toncenter.model/TonCenterStackEntry.Num> // org.ton.sdk.toncenter.model/TonCenterStackEntry.Num.Companion.serializer|serializer(){}[0]
        }
    }

    final class Slice : org.ton.sdk.toncenter.model/TonCenterStackEntry<kotlinx.io.bytestring/ByteString> { // org.ton.sdk.toncenter.model/TonCenterStackEntry.Slice|null[0]
        constructor <init>(kotlinx.io.bytestring/ByteString) // org.ton.sdk.toncenter.model/TonCenterStackEntry.Slice.<init>|<init>(kotlinx.io.bytestring.ByteString){}[0]

        final val value // org.ton.sdk.toncenter.model/TonCenterStackEntry.Slice.value|{}value[0]
            final fun <get-value>(): kotlinx.io.bytestring/ByteString // org.ton.sdk.toncenter.model/TonCenterStackEntry.Slice.value.<get-value>|<get-value>(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<org.ton.sdk.toncenter.model/TonCenterStackEntry.Slice> { // org.ton.sdk.toncenter.model/TonCenterStackEntry.Slice.$serializer|null[0]
            final val descriptor // org.ton.sdk.toncenter.model/TonCenterStackEntry.Slice.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // org.ton.sdk.toncenter.model/TonCenterStackEntry.Slice.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // org.ton.sdk.toncenter.model/TonCenterStackEntry.Slice.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): org.ton.sdk.toncenter.model/TonCenterStackEntry.Slice // org.ton.sdk.toncenter.model/TonCenterStackEntry.Slice.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, org.ton.sdk.toncenter.model/TonCenterStackEntry.Slice) // org.ton.sdk.toncenter.model/TonCenterStackEntry.Slice.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;org.ton.sdk.toncenter.model.TonCenterStackEntry.Slice){}[0]
        }

        final object Companion { // org.ton.sdk.toncenter.model/TonCenterStackEntry.Slice.Companion|null[0]
            final fun serializer(): kotlinx.serialization/KSerializer<org.ton.sdk.toncenter.model/TonCenterStackEntry.Slice> // org.ton.sdk.toncenter.model/TonCenterStackEntry.Slice.Companion.serializer|serializer(){}[0]
        }
    }

    final object Companion : kotlinx.serialization.internal/SerializerFactory { // org.ton.sdk.toncenter.model/TonCenterStackEntry.Companion|null[0]
        final fun <#A2: kotlin/Any?> serializer(kotlinx.serialization/KSerializer<#A2>): kotlinx.serialization/KSerializer<org.ton.sdk.toncenter.model/TonCenterStackEntry<#A2>> // org.ton.sdk.toncenter.model/TonCenterStackEntry.Companion.serializer|serializer(kotlinx.serialization.KSerializer<0:0>){0§<kotlin.Any?>}[0]
        final fun serializer(kotlin/Array<out kotlinx.serialization/KSerializer<*>>...): kotlinx.serialization/KSerializer<*> // org.ton.sdk.toncenter.model/TonCenterStackEntry.Companion.serializer|serializer(kotlin.Array<out|kotlinx.serialization.KSerializer<*>>...){}[0]
    }
}

final object org.ton.sdk.toncenter.internal.serializers/AddressStdAsBase64Serializer : kotlinx.serialization/KSerializer<org.ton.sdk.blockchain.address/AddressStd> { // org.ton.sdk.toncenter.internal.serializers/AddressStdAsBase64Serializer|null[0]
    final val descriptor // org.ton.sdk.toncenter.internal.serializers/AddressStdAsBase64Serializer.descriptor|{}descriptor[0]
        final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // org.ton.sdk.toncenter.internal.serializers/AddressStdAsBase64Serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

    final fun deserialize(kotlinx.serialization.encoding/Decoder): org.ton.sdk.blockchain.address/AddressStd // org.ton.sdk.toncenter.internal.serializers/AddressStdAsBase64Serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
    final fun serialize(kotlinx.serialization.encoding/Encoder, org.ton.sdk.blockchain.address/AddressStd) // org.ton.sdk.toncenter.internal.serializers/AddressStdAsBase64Serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;org.ton.sdk.blockchain.address.AddressStd){}[0]
}

final inline fun org.ton.sdk.toncenter.client/TonCenterV3Client(io.ktor.client/HttpClient, kotlin/String = ...): org.ton.sdk.toncenter.client/TonCenterV3Client // org.ton.sdk.toncenter.client/TonCenterV3Client|TonCenterV3Client(io.ktor.client.HttpClient;kotlin.String){}[0]
final inline fun org.ton.sdk.toncenter.model/TonCenterAccountRequest(kotlin/Function1<org.ton.sdk.toncenter.model/TonCenterAccountRequest.Builder, kotlin/Unit>): org.ton.sdk.toncenter.model/TonCenterAccountRequest // org.ton.sdk.toncenter.model/TonCenterAccountRequest|TonCenterAccountRequest(kotlin.Function1<org.ton.sdk.toncenter.model.TonCenterAccountRequest.Builder,kotlin.Unit>){}[0]
final inline fun org.ton.sdk.toncenter.model/TonCenterAddressBookRequest(kotlin/Function1<org.ton.sdk.toncenter.model/TonCenterAddressBookRequest.Builder, kotlin/Unit>): org.ton.sdk.toncenter.model/TonCenterAddressBookRequest // org.ton.sdk.toncenter.model/TonCenterAddressBookRequest|TonCenterAddressBookRequest(kotlin.Function1<org.ton.sdk.toncenter.model.TonCenterAddressBookRequest.Builder,kotlin.Unit>){}[0]
final inline fun org.ton.sdk.toncenter.model/TonCenterMetadataRequest(kotlin/Function1<org.ton.sdk.toncenter.model/TonCenterMetadataRequest.Builder, kotlin/Unit>): org.ton.sdk.toncenter.model/TonCenterMetadataRequest // org.ton.sdk.toncenter.model/TonCenterMetadataRequest|TonCenterMetadataRequest(kotlin.Function1<org.ton.sdk.toncenter.model.TonCenterMetadataRequest.Builder,kotlin.Unit>){}[0]
final suspend inline fun (org.ton.sdk.toncenter.client/TonCenterV3Client).org.ton.sdk.toncenter.client/blocks(kotlin/Function1<org.ton.sdk.toncenter.model/TonCenterBlocksRequestBuilder, kotlin/Unit>): org.ton.sdk.toncenter.model/TonCenterBlocksResponse // org.ton.sdk.toncenter.client/blocks|blocks@org.ton.sdk.toncenter.client.TonCenterV3Client(kotlin.Function1<org.ton.sdk.toncenter.model.TonCenterBlocksRequestBuilder,kotlin.Unit>){}[0]
final suspend inline fun (org.ton.sdk.toncenter.client/TonCenterV3Client).org.ton.sdk.toncenter.client/transactions(kotlin/Function1<org.ton.sdk.toncenter.model/TonCenterTransactionsRequestBuilder, kotlin/Unit>): org.ton.sdk.toncenter.model/TonCenterTransactionsResponse // org.ton.sdk.toncenter.client/transactions|transactions@org.ton.sdk.toncenter.client.TonCenterV3Client(kotlin.Function1<org.ton.sdk.toncenter.model.TonCenterTransactionsRequestBuilder,kotlin.Unit>){}[0]
