// Klib ABI Dump
// Targets: [iosArm64, iosSimulatorArm64, iosX64, linuxArm64, linuxX64, macosArm64, macosX64, mingwX64, tvosArm64, tvosSimulatorArm64, tvosX64, watchosArm32, watchosArm64, watchosSimulatorArm64, watchosX64]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <org.ton.kotlin:ton-kotlin-bigint>
final val org.ton.bigint/bitLength // org.ton.bigint/bitLength|@com.ionspin.kotlin.bignum.integer.BigInteger{}bitLength[0]
    final fun (com.ionspin.kotlin.bignum.integer/BigInteger).<get-bitLength>(): kotlin/Int // org.ton.bigint/bitLength.<get-bitLength>|<get-bitLength>@com.ionspin.kotlin.bignum.integer.BigInteger(){}[0]
final val org.ton.bigint/isZero // org.ton.bigint/isZero|@com.ionspin.kotlin.bignum.integer.BigInteger{}isZero[0]
    final fun (com.ionspin.kotlin.bignum.integer/BigInteger).<get-isZero>(): kotlin/Boolean // org.ton.bigint/isZero.<get-isZero>|<get-isZero>@com.ionspin.kotlin.bignum.integer.BigInteger(){}[0]
final val org.ton.bigint/sign // org.ton.bigint/sign|@com.ionspin.kotlin.bignum.integer.BigInteger{}sign[0]
    final fun (com.ionspin.kotlin.bignum.integer/BigInteger).<get-sign>(): kotlin/Int // org.ton.bigint/sign.<get-sign>|<get-sign>@com.ionspin.kotlin.bignum.integer.BigInteger(){}[0]

final fun (com.ionspin.kotlin.bignum.integer/BigInteger).org.ton.bigint/and(com.ionspin.kotlin.bignum.integer/BigInteger): com.ionspin.kotlin.bignum.integer/BigInteger // org.ton.bigint/and|and@com.ionspin.kotlin.bignum.integer.BigInteger(com.ionspin.kotlin.bignum.integer.BigInteger){}[0]
final fun (com.ionspin.kotlin.bignum.integer/BigInteger).org.ton.bigint/compareTo(com.ionspin.kotlin.bignum.integer/BigInteger): kotlin/Int // org.ton.bigint/compareTo|compareTo@com.ionspin.kotlin.bignum.integer.BigInteger(com.ionspin.kotlin.bignum.integer.BigInteger){}[0]
final fun (com.ionspin.kotlin.bignum.integer/BigInteger).org.ton.bigint/div(com.ionspin.kotlin.bignum.integer/BigInteger): com.ionspin.kotlin.bignum.integer/BigInteger // org.ton.bigint/div|div@com.ionspin.kotlin.bignum.integer.BigInteger(com.ionspin.kotlin.bignum.integer.BigInteger){}[0]
final fun (com.ionspin.kotlin.bignum.integer/BigInteger).org.ton.bigint/divRem(com.ionspin.kotlin.bignum.integer/BigInteger): kotlin/Pair<com.ionspin.kotlin.bignum.integer/BigInteger, com.ionspin.kotlin.bignum.integer/BigInteger> // org.ton.bigint/divRem|divRem@com.ionspin.kotlin.bignum.integer.BigInteger(com.ionspin.kotlin.bignum.integer.BigInteger){}[0]
final fun (com.ionspin.kotlin.bignum.integer/BigInteger).org.ton.bigint/minus(com.ionspin.kotlin.bignum.integer/BigInteger): com.ionspin.kotlin.bignum.integer/BigInteger // org.ton.bigint/minus|minus@com.ionspin.kotlin.bignum.integer.BigInteger(com.ionspin.kotlin.bignum.integer.BigInteger){}[0]
final fun (com.ionspin.kotlin.bignum.integer/BigInteger).org.ton.bigint/not(): com.ionspin.kotlin.bignum.integer/BigInteger // org.ton.bigint/not|not@com.ionspin.kotlin.bignum.integer.BigInteger(){}[0]
final fun (com.ionspin.kotlin.bignum.integer/BigInteger).org.ton.bigint/or(com.ionspin.kotlin.bignum.integer/BigInteger): com.ionspin.kotlin.bignum.integer/BigInteger // org.ton.bigint/or|or@com.ionspin.kotlin.bignum.integer.BigInteger(com.ionspin.kotlin.bignum.integer.BigInteger){}[0]
final fun (com.ionspin.kotlin.bignum.integer/BigInteger).org.ton.bigint/plus(com.ionspin.kotlin.bignum.integer/BigInteger): com.ionspin.kotlin.bignum.integer/BigInteger // org.ton.bigint/plus|plus@com.ionspin.kotlin.bignum.integer.BigInteger(com.ionspin.kotlin.bignum.integer.BigInteger){}[0]
final fun (com.ionspin.kotlin.bignum.integer/BigInteger).org.ton.bigint/pow(kotlin/Int): com.ionspin.kotlin.bignum.integer/BigInteger // org.ton.bigint/pow|pow@com.ionspin.kotlin.bignum.integer.BigInteger(kotlin.Int){}[0]
final fun (com.ionspin.kotlin.bignum.integer/BigInteger).org.ton.bigint/rem(com.ionspin.kotlin.bignum.integer/BigInteger): com.ionspin.kotlin.bignum.integer/BigInteger // org.ton.bigint/rem|rem@com.ionspin.kotlin.bignum.integer.BigInteger(com.ionspin.kotlin.bignum.integer.BigInteger){}[0]
final fun (com.ionspin.kotlin.bignum.integer/BigInteger).org.ton.bigint/shl(kotlin/Int): com.ionspin.kotlin.bignum.integer/BigInteger // org.ton.bigint/shl|shl@com.ionspin.kotlin.bignum.integer.BigInteger(kotlin.Int){}[0]
final fun (com.ionspin.kotlin.bignum.integer/BigInteger).org.ton.bigint/shr(kotlin/Int): com.ionspin.kotlin.bignum.integer/BigInteger // org.ton.bigint/shr|shr@com.ionspin.kotlin.bignum.integer.BigInteger(kotlin.Int){}[0]
final fun (com.ionspin.kotlin.bignum.integer/BigInteger).org.ton.bigint/times(com.ionspin.kotlin.bignum.integer/BigInteger): com.ionspin.kotlin.bignum.integer/BigInteger // org.ton.bigint/times|times@com.ionspin.kotlin.bignum.integer.BigInteger(com.ionspin.kotlin.bignum.integer.BigInteger){}[0]
final fun (com.ionspin.kotlin.bignum.integer/BigInteger).org.ton.bigint/toInt(): kotlin/Int // org.ton.bigint/toInt|toInt@com.ionspin.kotlin.bignum.integer.BigInteger(){}[0]
final fun (com.ionspin.kotlin.bignum.integer/BigInteger).org.ton.bigint/toLong(): kotlin/Long // org.ton.bigint/toLong|toLong@com.ionspin.kotlin.bignum.integer.BigInteger(){}[0]
final fun (com.ionspin.kotlin.bignum.integer/BigInteger).org.ton.bigint/toString(kotlin/Int): kotlin/String // org.ton.bigint/toString|toString@com.ionspin.kotlin.bignum.integer.BigInteger(kotlin.Int){}[0]
final fun (com.ionspin.kotlin.bignum.integer/BigInteger).org.ton.bigint/unaryMinus(): com.ionspin.kotlin.bignum.integer/BigInteger // org.ton.bigint/unaryMinus|unaryMinus@com.ionspin.kotlin.bignum.integer.BigInteger(){}[0]
final fun (com.ionspin.kotlin.bignum.integer/BigInteger).org.ton.bigint/xor(com.ionspin.kotlin.bignum.integer/BigInteger): com.ionspin.kotlin.bignum.integer/BigInteger // org.ton.bigint/xor|xor@com.ionspin.kotlin.bignum.integer.BigInteger(com.ionspin.kotlin.bignum.integer.BigInteger){}[0]
final fun (kotlin/ByteArray).org.ton.bigint/toBigInt(): com.ionspin.kotlin.bignum.integer/BigInteger // org.ton.bigint/toBigInt|toBigInt@kotlin.ByteArray(){}[0]
final fun (kotlin/Int).org.ton.bigint/toBigInt(): com.ionspin.kotlin.bignum.integer/BigInteger // org.ton.bigint/toBigInt|toBigInt@kotlin.Int(){}[0]
final fun (kotlin/Long).org.ton.bigint/toBigInt(): com.ionspin.kotlin.bignum.integer/BigInteger // org.ton.bigint/toBigInt|toBigInt@kotlin.Long(){}[0]
final fun (kotlin/String).org.ton.bigint/toBigInt(kotlin/Int = ...): com.ionspin.kotlin.bignum.integer/BigInteger // org.ton.bigint/toBigInt|toBigInt@kotlin.String(kotlin.Int){}[0]
