public final class org/ton/kotlin/dict/AugmentedDictionary {
	public fun <init> (Lorg/ton/kotlin/dict/Dictionary;Ljava/lang/Object;)V
	public final fun getDictionary ()Lorg/ton/kotlin/dict/Dictionary;
	public final fun getExtra ()Ljava/lang/Object;
}

public class org/ton/kotlin/dict/Dictionary : java/util/Map, kotlin/jvm/internal/markers/KMappedMarker {
	public fun <init> (Ljava/util/Map;Lorg/ton/kotlin/dict/DictionaryKeyCodec;Lorg/ton/tlb/TlbCodec;Lorg/ton/kotlin/cell/CellContext;)V
	public synthetic fun <init> (Ljava/util/Map;Lorg/ton/kotlin/dict/DictionaryKeyCodec;Lorg/ton/tlb/TlbCodec;Lorg/ton/kotlin/cell/CellContext;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun <init> (Lorg/ton/cell/Cell;Lorg/ton/kotlin/dict/DictionaryKeyCodec;Lorg/ton/tlb/TlbCodec;)V
	public fun <init> (Lorg/ton/kotlin/dict/Dictionary;)V
	public fun <init> (Lorg/ton/kotlin/dict/RawDictionary;Lorg/ton/kotlin/dict/DictionaryKeyCodec;Lorg/ton/tlb/TlbCodec;)V
	public fun clear ()V
	public fun compute (Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
	public fun computeIfAbsent (Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
	public fun computeIfPresent (Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
	public fun containsKey (Ljava/lang/Object;)Z
	public fun containsValue (Ljava/lang/Object;)Z
	public final fun entrySet ()Ljava/util/Set;
	public fun equals (Ljava/lang/Object;)Z
	public fun get (Ljava/lang/Object;)Ljava/lang/Object;
	public final fun get (Ljava/lang/Object;Lorg/ton/kotlin/cell/CellContext;)Ljava/lang/Object;
	public static synthetic fun get$default (Lorg/ton/kotlin/dict/Dictionary;Ljava/lang/Object;Lorg/ton/kotlin/cell/CellContext;ILjava/lang/Object;)Ljava/lang/Object;
	public final fun getCell ()Lorg/ton/cell/Cell;
	public final fun getDict ()Lorg/ton/kotlin/dict/RawDictionary;
	public fun getEntries ()Ljava/util/Set;
	protected final fun getKeyCodec ()Lorg/ton/kotlin/dict/DictionaryKeyCodec;
	public fun getKeys ()Ljava/util/Set;
	public fun getSize ()I
	protected final fun getValueCodec ()Lorg/ton/tlb/TlbCodec;
	public fun getValues ()Ljava/util/Collection;
	public fun hashCode ()I
	public fun isEmpty ()Z
	public final fun keySet ()Ljava/util/Set;
	public final fun loadEntries (Lorg/ton/kotlin/cell/CellContext;)Lkotlin/sequences/Sequence;
	public static synthetic fun loadEntries$default (Lorg/ton/kotlin/dict/Dictionary;Lorg/ton/kotlin/cell/CellContext;ILjava/lang/Object;)Lkotlin/sequences/Sequence;
	public final fun loadKeys (Lorg/ton/kotlin/cell/CellContext;)Lkotlin/sequences/Sequence;
	public static synthetic fun loadKeys$default (Lorg/ton/kotlin/dict/Dictionary;Lorg/ton/kotlin/cell/CellContext;ILjava/lang/Object;)Lkotlin/sequences/Sequence;
	public final fun loadValues (Lorg/ton/kotlin/cell/CellContext;)Lkotlin/sequences/Sequence;
	public static synthetic fun loadValues$default (Lorg/ton/kotlin/dict/Dictionary;Lorg/ton/kotlin/cell/CellContext;ILjava/lang/Object;)Lkotlin/sequences/Sequence;
	public fun merge (Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
	public fun put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public fun putAll (Ljava/util/Map;)V
	public fun putIfAbsent (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public fun remove (Ljava/lang/Object;)Ljava/lang/Object;
	public fun remove (Ljava/lang/Object;Ljava/lang/Object;)Z
	public fun replace (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public fun replace (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
	public fun replaceAll (Ljava/util/function/BiFunction;)V
	public final fun size ()I
	public final fun toMap (Ljava/util/Map;Lorg/ton/kotlin/cell/CellContext;)Ljava/util/Map;
	public final fun toMap (Lorg/ton/kotlin/cell/CellContext;)Ljava/util/Map;
	public static synthetic fun toMap$default (Lorg/ton/kotlin/dict/Dictionary;Ljava/util/Map;Lorg/ton/kotlin/cell/CellContext;ILjava/lang/Object;)Ljava/util/Map;
	public static synthetic fun toMap$default (Lorg/ton/kotlin/dict/Dictionary;Lorg/ton/kotlin/cell/CellContext;ILjava/lang/Object;)Ljava/util/Map;
	public fun toString ()Ljava/lang/String;
	public final fun values ()Ljava/util/Collection;
}

public abstract interface class org/ton/kotlin/dict/DictionaryKeyCodec : org/ton/kotlin/dict/DictionaryKeyLoader, org/ton/kotlin/dict/DictionaryKeyStorer {
	public static final field Companion Lorg/ton/kotlin/dict/DictionaryKeyCodec$Companion;
}

public final class org/ton/kotlin/dict/DictionaryKeyCodec$Companion {
	public final fun getBITS256 ()Lorg/ton/kotlin/dict/DictionaryKeyCodec;
	public final fun getBYTE_STRING_32 ()Lorg/ton/kotlin/dict/DictionaryKeyCodec;
	public final fun getINT32 ()Lorg/ton/kotlin/dict/DictionaryKeyCodec;
	public final fun int (I)Lorg/ton/kotlin/dict/DictionaryKeyCodec;
	public static synthetic fun int$default (Lorg/ton/kotlin/dict/DictionaryKeyCodec$Companion;IILjava/lang/Object;)Lorg/ton/kotlin/dict/DictionaryKeyCodec;
	public final fun long (I)Lorg/ton/kotlin/dict/DictionaryKeyCodec;
	public static synthetic fun long$default (Lorg/ton/kotlin/dict/DictionaryKeyCodec$Companion;IILjava/lang/Object;)Lorg/ton/kotlin/dict/DictionaryKeyCodec;
}

public abstract interface class org/ton/kotlin/dict/DictionaryKeyLoader {
	public abstract fun decodeKey (Lorg/ton/bitstring/BitString;)Ljava/lang/Object;
	public abstract fun getKeySize ()I
}

public abstract interface class org/ton/kotlin/dict/DictionaryKeyStorer {
	public abstract fun encodeKey (Ljava/lang/Object;)Lorg/ton/bitstring/BitString;
	public abstract fun getKeySize ()I
}

public final class org/ton/kotlin/dict/DictionaryKt {
	public static final fun toDictionary (Ljava/util/Map;Lorg/ton/kotlin/dict/DictionaryKeyCodec;Lorg/ton/tlb/TlbCodec;Lorg/ton/kotlin/cell/CellContext;)Lorg/ton/kotlin/dict/Dictionary;
	public static synthetic fun toDictionary$default (Ljava/util/Map;Lorg/ton/kotlin/dict/DictionaryKeyCodec;Lorg/ton/tlb/TlbCodec;Lorg/ton/kotlin/cell/CellContext;ILjava/lang/Object;)Lorg/ton/kotlin/dict/Dictionary;
}

public final class org/ton/kotlin/dict/RawDictionary : java/lang/Iterable, kotlin/jvm/internal/markers/KMappedMarker {
	public static final field Companion Lorg/ton/kotlin/dict/RawDictionary$Companion;
	public fun <init> (I)V
	public fun <init> (Lorg/ton/cell/Cell;I)V
	public final fun clear ()V
	public final fun contains (Lorg/ton/bitstring/BitString;)Z
	public fun equals (Ljava/lang/Object;)Z
	public final fun get (Lorg/ton/bitstring/BitString;)Lorg/ton/cell/CellSlice;
	public final fun get (Lorg/ton/bitstring/BitString;Lorg/ton/kotlin/cell/CellContext;)Lorg/ton/cell/CellSlice;
	public final fun getKeySize ()I
	public final fun getRoot ()Lorg/ton/cell/Cell;
	public fun hashCode ()I
	public final fun isEmpty ()Z
	public final fun isNotEmpty ()Z
	public fun iterator ()Ljava/util/Iterator;
	public final fun iterator (Lorg/ton/kotlin/cell/CellContext;)Ljava/util/Iterator;
	public final fun remove (Lorg/ton/bitstring/BitString;Lorg/ton/kotlin/cell/CellContext;)Lorg/ton/cell/CellSlice;
	public static synthetic fun remove$default (Lorg/ton/kotlin/dict/RawDictionary;Lorg/ton/bitstring/BitString;Lorg/ton/kotlin/cell/CellContext;ILjava/lang/Object;)Lorg/ton/cell/CellSlice;
	public final fun set (Lorg/ton/bitstring/BitString;Lorg/ton/cell/CellSlice;)Lorg/ton/cell/CellSlice;
	public final fun set (Lorg/ton/bitstring/BitString;Lorg/ton/cell/CellSlice;Lorg/ton/kotlin/cell/CellContext;)Lorg/ton/cell/CellSlice;
	public fun toString ()Ljava/lang/String;
}

public final class org/ton/kotlin/dict/RawDictionary$Companion {
	public final fun loadFromSlice (Lorg/ton/cell/CellSlice;ILorg/ton/kotlin/cell/CellContext;)Lorg/ton/kotlin/dict/RawDictionary;
	public static synthetic fun loadFromSlice$default (Lorg/ton/kotlin/dict/RawDictionary$Companion;Lorg/ton/cell/CellSlice;ILorg/ton/kotlin/cell/CellContext;ILjava/lang/Object;)Lorg/ton/kotlin/dict/RawDictionary;
}

