package org.ton.kotlin.tvm

public object OpCodes {
    // A.2.1. Basic stack manipulation primitives.
    public const val NOP: Int = 0x00
    public const val SWAP: Int = 0x01
    public const val XCHG_0_2: Int = 0x02
    public const val XCHG_0_3: Int = 0x03
    public const val XCHG_0_4: Int = 0x04
    public const val XCHG_0_5: Int = 0x05
    public const val XCHG_0_6: Int = 0x06
    public const val XCHG_0_7: Int = 0x07
    public const val XCHG_0_8: Int = 0x08
    public const val XCHG_0_9: Int = 0x09
    public const val XCHG_0_10: Int = 0x0A
    public const val XCHG_0_11: Int = 0x0B
    public const val XCHG_0_12: Int = 0x0C
    public const val XCHG_0_13: Int = 0x0D
    public const val XCHG_0_14: Int = 0x0E
    public const val XCHG_0_15: Int = 0x0F
    public const val XCHG: Int = 0x10
    public const val XCHG_0: Int = 0x11
    public const val XCHG_1_2: Int = 0x12
    public const val XCHG_1_3: Int = 0x13
    public const val XCHG_1_4: Int = 0x14
    public const val XCHG_1_5: Int = 0x15
    public const val XCHG_1_6: Int = 0x16
    public const val XCHG_1_7: Int = 0x17
    public const val XCHG_1_8: Int = 0x18
    public const val XCHG_1_9: Int = 0x19
    public const val XCHG_1_10: Int = 0x1A
    public const val XCHG_1_11: Int = 0x1B
    public const val XCHG_1_12: Int = 0x1C
    public const val XCHG_1_13: Int = 0x1D
    public const val XCHG_1_14: Int = 0x1E
    public const val XCHG_1_15: Int = 0x1F
    public const val DUP: Int = 0x20
    public const val OVER: Int = 0x21
    public const val PUSH_2: Int = 0x22
    public const val PUSH_3: Int = 0x23
    public const val PUSH_4: Int = 0x24
    public const val PUSH_5: Int = 0x25
    public const val PUSH_6: Int = 0x26
    public const val PUSH_7: Int = 0x27
    public const val PUSH_8: Int = 0x28
    public const val PUSH_9: Int = 0x29
    public const val PUSH_10: Int = 0x2A
    public const val PUSH_11: Int = 0x2B
    public const val PUSH_12: Int = 0x2C
    public const val PUSH_13: Int = 0x2D
    public const val PUSH_14: Int = 0x2E
    public const val PUSH_15: Int = 0x2F
    public const val DROP: Int = 0x30
    public const val NIP: Int = 0x31
    public const val POP_2: Int = 0x32
    public const val POP_3: Int = 0x33
    public const val POP_4: Int = 0x34
    public const val POP_5: Int = 0x35
    public const val POP_6: Int = 0x36
    public const val POP_7: Int = 0x37
    public const val POP_8: Int = 0x38
    public const val POP_9: Int = 0x39
    public const val POP_10: Int = 0x3A
    public const val POP_11: Int = 0x3B
    public const val POP_12: Int = 0x3C
    public const val POP_13: Int = 0x3D
    public const val POP_14: Int = 0x3E
    public const val POP_15: Int = 0x3F

    // A.2.2. Compound stack manipulation primitives.
    public const val XCHG3_0: Int = 0x40
    public const val XCHG3_1: Int = 0x41
    public const val XCHG3_2: Int = 0x42
    public const val XCHG3_3: Int = 0x43
    public const val XCHG3_4: Int = 0x44
    public const val XCHG3_5: Int = 0x45
    public const val XCHG3_6: Int = 0x46
    public const val XCHG3_7: Int = 0x47
    public const val XCHG3_8: Int = 0x48
    public const val XCHG3_9: Int = 0x49
    public const val XCHG3_10: Int = 0x4A
    public const val XCHG3_11: Int = 0x4B
    public const val XCHG3_12: Int = 0x4C
    public const val XCHG3_13: Int = 0x4D
    public const val XCHG3_14: Int = 0x4E
    public const val XCHG3_15: Int = 0x4F
    public const val XCHG2: Int = 0x50
    public const val XCPU: Int = 0x51
    public const val PUXC: Int = 0x52
    public const val PUSH2: Int = 0x53

    public const val XCHG_PUSH_SUBSET: Int = 0x54

    // A.2.3. Exotic stack manipulation primitives.
    public const val BLKSWAP: Int = 0x55
    public const val PUSH_L: Int = 0x56
    public const val POP_L: Int = 0x57
    public const val ROT: Int = 0x58
    public const val ROTREV: Int = 0x59
    public const val SWAP2: Int = 0x5A
    public const val DROP2: Int = 0x5B
    public const val DUP2: Int = 0x5C
    public const val OVER2: Int = 0x5D
    public const val REVERSE: Int = 0x5E
    public const val BLK_SUBSET: Int = 0x5F
    public const val PICK: Int = 0x60
    public const val ROLLX: Int = 0x61
    public const val ROLLREV: Int = 0x62
    public const val BLKSWX: Int = 0x63
    public const val REVX: Int = 0x64
    public const val DROPX: Int = 0x65
    public const val TUCK: Int = 0x66
    public const val XCHGX: Int = 0x67
    public const val DEPTH: Int = 0x68
    public const val CHKDEPTH: Int = 0x69
    public const val ONLYTOPX: Int = 0x6A
    public const val ONLYX: Int = 0x6B
    public const val BLKDROP2: Int = 0x6C

    // A.3.1. Null primitives.
    public const val NULL: Int = 0x6D
    public const val ISNULL: Int = 0x6E

    // A.3.2. Tuple primitives.
    public const val TUPLE: Int = 0x6F
    public const val NIL: Int = 0x00
    public const val SINGLE: Int = 0x01
    public const val PAIR: Int = 0x02
    public const val TRIPLE: Int = 0x03
    public const val TUPLE_4: Int = 0x04
    public const val TUPLE_5: Int = 0x05
    public const val TUPLE_6: Int = 0x06
    public const val TUPLE_7: Int = 0x07
    public const val TUPLE_8: Int = 0x08
    public const val TUPLE_9: Int = 0x09
    public const val TUPLE_10: Int = 0x0A
    public const val TUPLE_11: Int = 0x0B
    public const val TUPLE_12: Int = 0x0C
    public const val TUPLE_13: Int = 0x0D
    public const val TUPLE_14: Int = 0x0E
    public const val TUPLE_15: Int = 0x0F
    public const val FIRST: Int = 0x10
    public const val SECOND: Int = 0x11
    public const val THIRD: Int = 0x12
    public const val INDEX_3: Int = 0x13
    public const val INDEX_4: Int = 0x14
    public const val INDEX_5: Int = 0x15
    public const val INDEX_6: Int = 0x16
    public const val INDEX_7: Int = 0x17
    public const val INDEX_8: Int = 0x18
    public const val INDEX_9: Int = 0x19
    public const val INDEX_10: Int = 0x1A
    public const val INDEX_11: Int = 0x1B
    public const val INDEX_12: Int = 0x1C
    public const val INDEX_13: Int = 0x1D
    public const val INDEX_14: Int = 0x1E
    public const val INDEX_15: Int = 0x1F
    public const val UNTUPLE_0: Int = 0x20
    public const val UNSINGLE: Int = 0x21
    public const val UNPAIR: Int = 0x22
    public const val UNTRIPLE: Int = 0x23
    public const val UNTUPLE_4: Int = 0x24
    public const val UNTUPLE_5: Int = 0x25
    public const val UNTUPLE_6: Int = 0x26
    public const val UNTUPLE_7: Int = 0x27
    public const val UNTUPLE_8: Int = 0x28
    public const val UNTUPLE_9: Int = 0x29
    public const val UNTUPLE_10: Int = 0x2A
    public const val UNTUPLE_11: Int = 0x2B
    public const val UNTUPLE_12: Int = 0x2C
    public const val UNTUPLE_13: Int = 0x2D
    public const val UNTUPLE_14: Int = 0x2E
    public const val UNTUPLE_15: Int = 0x2F

    // A.4.1. Integer and boolean constants.
    public const val PUSHINT_0: Int = 0x70
    public const val PUSHINT_1: Int = 0x71
    public const val PUSHINT_2: Int = 0x72
    public const val PUSHINT_3: Int = 0x73
    public const val PUSHINT_4: Int = 0x74
    public const val PUSHINT_5: Int = 0x75
    public const val PUSHINT_6: Int = 0x76
    public const val PUSHINT_7: Int = 0x77
    public const val PUSHINT_8: Int = 0x78
    public const val PUSHINT_9: Int = 0x79
    public const val PUSHINT_10: Int = 0x7A
    public const val PUSHINT_MINUS_5: Int = 0x7B
    public const val PUSHINT_MINUS_4: Int = 0x7C
    public const val PUSHINT_MINUS_3: Int = 0x7D
    public const val PUSHINT_MINUS_2: Int = 0x7E
    public const val PUSHINT_MINUS_1: Int = 0x7F
    public const val PUSHINT_XX: Int = 0x80
    public const val PUSHINT_XXXX: Int = 0x81
    public const val PUSHINT_LONG: Int = 0x82
    public const val PUSHPOW2: Int = 0x83
    public const val PUSHPOW2DEC: Int = 0x84
    public const val PUSHNEGPOW2: Int = 0x85

    // A.4.2. Constant slices, continuations, cells, and references.
    public const val PUSHREF: Int = 0x88
    public const val PUSHREFSLICE: Int = 0x89
    public const val PUSHREFCONT: Int = 0x8A
    public const val PUSHSLICE_SHORT: Int = 0x8B
    public const val PUSHSLICE: Int = 0x8C
    public const val PUSHSLICE_LONG: Int = 0x8D
    public const val PUSHCONT_REF_0_3: Int = 0x8E
    public const val PUSHCONT_REF_4: Int = 0x8F
    public const val PUSHCONT_0: Int = 0x90
    public const val PUSHCONT_1: Int = 0x91
    public const val PUSHCONT_2: Int = 0x92
    public const val PUSHCONT_3: Int = 0x93
    public const val PUSHCONT_4: Int = 0x94
    public const val PUSHCONT_5: Int = 0x95
    public const val PUSHCONT_6: Int = 0x96
    public const val PUSHCONT_7: Int = 0x97
    public const val PUSHCONT_8: Int = 0x98
    public const val PUSHCONT_9: Int = 0x99
    public const val PUSHCONT_10: Int = 0x9A
    public const val PUSHCONT_11: Int = 0x9B
    public const val PUSHCONT_12: Int = 0x9C
    public const val PUSHCONT_13: Int = 0x9D
    public const val PUSHCONT_14: Int = 0x9E
    public const val PUSHCONT_15: Int = 0x9F

    // A.5.1. Addition, subtraction, multiplication.
    public const val ADD: Int = 0xA0
    public const val SUB: Int = 0xA1
    public const val SUBR: Int = 0xA2
    public const val NEGATE: Int = 0xA3
    public const val INC: Int = 0xA4
    public const val DEC: Int = 0xA5
    public const val ADDCONST: Int = 0xA6
    public const val MULCONST: Int = 0xA7
    public const val MUL: Int = 0xA8
}
