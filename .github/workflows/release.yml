#name: Release
#on:
#  push:
#    branches:
#      - main
#
#jobs:
#  build:
#    if: "!contains(github.event.commits[0].message, '[skip ci]')"
#    strategy:
#      matrix:
#        include:
#          - os: macos-latest
#            gradle_args: assemble publishIosX64PublicationToSonatypeRepository
#          - os: macos-latest
#            gradle_args: assemble publishIosArm64PublicationToSonatypeRepository
#          - os: macos-latest
#            gradle_args: assemble publishIosSimulatorArm64PublicationToSonatypeRepository
#          - os: macos-latest
#            gradle_args: assemble publishTvosX64PublicationToSonatypeRepository
#          - os: macos-latest
#            gradle_args: assemble publishTvosArm64PublicationToSonatypeRepository
#          - os: macos-latest
#            gradle_args: assemble publishTvosSimulatorArm64PublicationToSonatypeRepository
#          - os: macos-latest
#            gradle_args: assemble publishWatchosArm32PublicationToSonatypeRepository
#          - os: macos-latest
#            gradle_args: assemble publishWatchosArm64PublicationToSonatypeRepository
#          - os: macos-latest
#            gradle_args: assemble publishWatchosX64PublicationToSonatypeRepository
#          - os: macos-latest
#            gradle_args: assemble publishWatchosSimulatorArm64PublicationToSonatypeRepository
#          - os: macos-latest
#            gradle_args: assemble publishMacosX64PublicationToSonatypeRepository
#          - os: macos-latest
#            gradle_args: assemble publishMacosArm64PublicationToSonatypeRepository
#          - os: ubuntu-latest
#            gradle_args: assemble publishKotlinMultiplatformPublicationToSonatypeRepository publishJvmPublicationToSonatypeRepository publishLinuxX64PublicationToSonatypeRepository publishLinuxArm64PublicationToSonatypeRepository publishMingwX64PublicationToSonatypeRepository
#
#    runs-on: ${{ matrix.os }}
#    steps:
#      - name: Checkout project sources
#        uses: actions/checkout@v3
#      - uses: actions/setup-java@v3
#        with:
#          distribution: liberica
#          java-version: 8
#      - name: Build using gradle
#        uses: gradle/gradle-build-action@v2
#        with:
#          arguments: ${{ matrix.gradle_args }}
#        env:
#          SIGNING_SECRET_KEY: ${{ secrets.SIGNING_SECRET_KEY }}
#          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
#          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
#          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
